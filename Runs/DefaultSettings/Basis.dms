//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
// Deze file bevat een basis voor de Vesta instellingen die vanuit iedere run           //
// geincludeerd wordt en generiek of per zichtjaar kan worden overruled                 //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Basis
{
	unit<uint32>    PlanRegio           := Invoer/RuimtelijkeData/StudieGebied/buurt, Descr = "CBS-buurten worden als definitie van plangebied gehanteerd";
	
	parameter<bool> HasStartingArcSet   := false, Descr = "Worden bestaande warmtenetten wel/niet meegenomen (wordt per run overruled)";
	
	attribute<bool> BS_isActive (Classifications/BebouwingsSectorBase) : [ true, true, true ], Descr = "Welke gebouwen worden meegenomen?  [ Wonigen, Utiliteit, Glastuinbouw ]";
	
	parameter<bool> BC_doNieuwbouw      := true, Descr = "Wordt nieuwbouw meegenomen JA/NEE";

	container Rapportage
	{
		unit<uint32> Regio := Geography/RegioIndelingen/NL, Descr = "Gekozen schaalniveau voor rapportage: heel Nederland (of volledig Studiegebied)";
//		unit<uint32> Regio := Geography/RegioIndelingen/Energieregio, Descr = "Gekozen schaalniveau voor rapportage: per RES-regio (bij studiegebied = Nederland)";
//		unit<uint32> Regio := Invoer/RuimtelijkeData/StudieGebied/gemeente, Descr = "Gekozen schaalniveau voor rapportage: per Gemeente (in gekozen studiegebied)";
//		unit<uint32> Regio := Invoer/RuimtelijkeData/StudieGebied/buurt, Descr = "Gekozen schaalniveau voor rapportage: per CBS-Buurt (in gekozen studiegebied)";

		parameter<bool> GewogenResultaten := false, Descr = "moeten ook gewogen resultaten naar inkomen/eigendom worden uitgevoerd, of alleen ongewogen?";

		// Opsplitsing uitkomsten in MaatregelenRapportage voor bestaande woningen
		// 0=geen opdeling, 1=type, 2=bouwjaar, 3=type+bouwjaar, 4=eigendom
		parameter<Classifications/WoningBestaandRapGroep> WoningBestaandRapGroep_rel : [ 3 ];
		
		// Opsplitsing uitkomsten in MaatregelenRapportage voor bestaande utiliteit
		// 0=geen opdeling, 1=type, 2=bouwjaar, 3=type+bouwjaar
		parameter<Classifications/UtilBestaandRapGroep>   UtilBestaandRapGroep_rel   : [ 3 ];
	}

	parameter<percent> VAT    := 21[percent], Descr = "BTW percentage";
	parameter<percent> VAT_gv := 15[percent], Descr = "BTW percentage op gebouwverbetering: 0.5 * (21.0 + 9.0)";

	// Invoer: welke energieprijzenbestanden worden gehanteerd. Verwijst naar geldige .csv set in %projdir%/data dwz:
	// *filename*_Elek.csv, *filename*_GroenElek.csv, *filename*_AardGas.csv, *filename*_GroenGas.csv
	parameter<string> prijzenbron := '20200812_Energieprijzen_KEV2019', 
		Descr = "Energieprijzen in het basispad van de Klimaat en Energie Verkenning 2019 (PBL), met bewerkingen voor klimaatneutrale energiedragers"; 
	
	container StartGebouwOpties :  Descr = "Gebouwoptie die bebouwingscomponenten bij initialisatie toegewezen krijgen"
	{
		parameter<string> BestaandeWoning  := 'VR_zK_x',     Descr = "VR-ketel, zonder koeling, schillabel uit invoerbestand (of onbekend)";
		parameter<string> NieuwbouwWoning  := 'LeWP_zK_A',   Descr = "HR-ketel, zonder koeling, schillabel A";
		parameter<string> BestaandeUtil    := 'VR_mK_x',     Descr = "VR-ketel, met koeling, schillabel afhankelijk van bouwjaar";
		parameter<string> NieuwbouwUtil    := 'LeWP_mK_A',   Descr = "HR-ketel, met koeling, schillabel A";
		parameter<string> BestaandeGLTB    := 'VR_zK_x',     Descr = "VR-ketel, zonder koeling";
		parameter<string> NieuwbouwGLTB    := 'HR_zK_x',     Descr = "HR-ketel, zonder koeling";
		
		container GebiedoptieGebouwopties : Descr = "Gebouwopties die door gebiedsoptie kunnen worden geactiveerd"
		{
			parameter<string> Optie_H2HR_w := 'H2R_zK',      Descr = "H2 woningen : H2-ketel, zonder koeling";
			parameter<string> Optie_H2WP_w := 'H2WP_zK',     Descr = "H2 woningen : H2-hybrideWP, zonder koeling";
			parameter<string> Optie_H2HR_u := 'H2R_mK',      Descr = "H2 utiliteit : H2-ketel, met koeling";
			parameter<string> Optie_H2WP_u := 'H2WP_mK',     Descr = "H2 utiliteit : H2-hybrideWP, met koeling";
			parameter<string> Optie_BWPg_u := 'BeWPgr_mK_B', Descr = "Alternatieven bij LT vs EWP : BodemWP groot, met koeling";
			parameter<string> Optie_BWPk_u := 'BeWPkl_mK_B', Descr = "Alternatieven bij LT vs EWP : BodemWP klein, met koeling";
			parameter<string> Optie_LWP_u  := 'LeWP_mK_B',   Descr = "Alternatieven bij LT vs EWP : LuchtWP, met koeling";
			parameter<string> Optie_LWP_w  := 'LeWP_zK_B',   Descr = "Alternatieven bij LT vs EWP : LuchtWP, zonder koeling";
			parameter<string> Optie_BWP_w  := 'BeWP_zK_B',   Descr = "Alternatieven bij LT vs EWP : BodemWP, zonder koeling";
		}
	}
	
	container Beleid
	{
		parameter<Eur_ton>    Extra_CO2_heffing  := 0[Eur_ton], Descr = "aanvullend bedrag per ton CO2 dat bij gas en elektriciteit in rekening wordt gebracht bovenop ETS-prijs";
		parameter<Eur_yr_asl> Heffingskorting    := 420.14[Eur_yr_asl] , Descr = "Euro2018, Belastingvermindering per elektriciteitsaansluiting" , Source = "https://www.rijksoverheid.nl/onderwerpen/belastingplan/belastingwijzigingen-voor-ons-allemaal/energiebelasting";
		parameter<Units/yr>   Threshold_bouwnorm := 2000[Units/yr], Descr = "Bouwjaar vanaf welke geen sprongen meer gedaan kunnen worden";
		
		unit<uint32>          TypeInfoList      := invoer/Kengetallen/WarmteBronnen/MetaData/TypeInfoList, Descr = "lijst van soorten warmtebronnen";

		container EIA: Descr = "Investeringssubsidie: bepaald percentage van een investering wordt door de overheid betaald"
		{
			container EigenarenBasis : Descr = "Instellingen voor alle gebouwen, eventueel specifiek per bebouwingscomponent op te geven"
			{
				parameter<float64> R_VerbruikSplitIncentiveFactor  := 0.8 , Descr = "aandeel van vermeden verbruikskosten die de gebouweigenaar ontvangt in plaats van de gebruiker";
				parameter<float64> R_VastrechtSplitIncentiveFactor := 0.8 , Descr = "aandeel van vermeden vastrechtkosten die de gebouweigenaar ontvangt in plaats van de gebruiker";
				parameter<float64> Rs_LokaleOpwekking              := 0.0 , Descr = "subsidie op installaties in gebouwopties";
				parameter<float64> Rs_GebouwVerbetering            := 0.0 , Descr = "subsidie op gebouwverbetering";
				parameter<float64> Rs_OngeriefsVergoeding          := 0.0 , Descr = "subsidie op ongeriefsvergoeding tbv gebiedsoptie";
				parameter<float64> Rs_ProjectManagement            := 0.0 , Descr = "subsidie op projectmanagement   tbv gebiedsoptie";
			}

			container E_bw := EigenarenBasis, Descr = "Eigenaren bestaande woningen, niet specifiek opgegeven";
			container E_nw := EigenarenBasis, Descr = "Eigenaren nieuwbouw woningen, niet specifiek opgegeven";
			container E_bu := EigenarenBasis, Descr = "Eigenaren bestaande utiliteit, niet specifiek opgegeven";
			container E_nu := EigenarenBasis, Descr = "Eigenaren nieuwbouw utiliteit, niet specifiek opgegeven";
			container E_bt := EigenarenBasis, Descr = "Eigenaren bestaande glastuinbouw, niet specifiek opgegeven";
			container E_nt := EigenarenBasis, Descr = "Eigenaren nieuwbouw glastuinbouw, niet specifiek opgegeven";

			parameter<float64> id                := 0.0                      , Descr = "Investeringssubsidie inpandige distributie als fractie van de investering";
			parameter<float64> wd                := 0.0                      , Descr = "Investeringssubsidie wijkdistributie als fractie van de investering";
			parameter<float64> pt                := 0.0                      , Descr = "Investeringssubsidie primair transport als fractie van de investering";
			parameter<float64> WKO               := 0.0                      , Descr = "Investeringssubsidie opwekking met WKO of TEO als fractie van de investering";
			parameter<float64> LT                := 0.0                      , Descr = "investeringssubsidie opwekking voor lage temperatuur warmtenetten met puntbron";
			parameter<ratio>   H2                := 0[ratio]                 , Descr = "subsidie op investering in waterstofnetten";
			attribute<float64> ow (TypeInfoList) := const(0.0, TypeInfoList) , Descr = "Investeringssubsidie opwekking met MT-bronnen als fractie van de investering";
		}

		container SDE
		{
			parameter<Eur_GJ> SDE_H2  := 0[Eur_GJ], Descr = "productiesubsidie waterstof";
			parameter<Eur_GJ> SDE_LT  := 0[Eur_GJ], Descr = "productiesubsidie lage temperatuur warmtenetten met puntbron";
			parameter<Eur_GJ> SDE_WKO := 0[Eur_GJ], Descr = "productiesubsidie lage temperatuur warmtenetten met WKO en evt. TEO";
			attribute<Eur_GJ> SDE (TypeInfoList) :
			[
				0.0, // STEG
				0.0, // Gasturbine
				0.0, // Conventioneel
				0.0, // Kolen
				0.0, // KVSTEG
				0.0, // Gasmotor
				0.0, // WijkWKK
				0.0, // Industrie
				0.0, // Raffinaderij
				0.0, // Kern
				0.0, // Geothermie
				0.0, // AVI
				0.0, // BMC
				0.0, // BioWKK
				0.0  // Onbekend
			], Descr = "productiesubsidie SDE voor MT-warmteopwekking in euro per gigajoule";
		}
	}

	container AanbodKentallen := VraagKentallen, Descr = "Blok 3, zie FO $4.2"
	{
		container RestWarmte  := VraagKentallen;
		container GeoThermie  := VraagKentallen;
		container BioWKK      := VraagKentallen;
		container WijkWKK     := VraagKentallen;
		container WKO         := VraagKentallen
		{
			parameter<bool> BuitenContour: [false], Descr = "Mag WKO buiten de WKO-potentiecontour worden toegepast?";
		}
		container TEO         := VraagKentallen
		{
			parameter<bool> BuitenContour: [false], Descr = "Mag WKO met TEO buiten de maximale afstand van de TEO-potentiecontour worden toegepast?";
		}
		container AardGas     := VraagKentallen;
		container Lt15_30     := VraagKentallen;
		container Lt15_50     := VraagKentallen;
		container Lt15_70     := VraagKentallen;
		container Lt30_30     := VraagKentallen;
		container Lt30_50     := VraagKentallen;
		container Lt30_70     := VraagKentallen;
		container WaterstofHR := VraagKentallen;
		container WaterstofWP := VraagKentallen;
		container BuurtWKO    := VraagKentallen
		{
			parameter<bool> BuitenContour: [true], Descr = "Mag BuurtWKO buiten de WKO-potentiecontour worden toegepast?";
		}
	}

	container BAG
	{
		parameter<uint8> IndustrieDoetMee := 1b, Descr = "In hoeverre moeten gebouwen met een industriefunctie (volgens de BAG) meegenomen worden?";
		// 0b: in Utiliteit doet alle industrie niet mee (dus ook alle vbo die industrie in combinatie met een andere gebruikdoel hebben)
		// 1b: in Utiliteit doen vbos niet mee die alleen een industriefunctie hebben, wel vbos met meerdere gebruiksdoelen waaronder industrie maar ook bijvoorbeeld wonen of winkel
		// 2b: in Utiliteit doet alle industrie mee
	}

	container RuimtelijkeVraag
	{
		container Drager
		{
			parameter<float64> RuimteVerwarming      : [1.0], Descr = "Schuif om functionele vraag naar ruimteverwarming hoger of lager te schalen (1 = geen schalingsfactor)";
			parameter<float64> Koude                 : [1.0], Descr = "Schuif om functionele vraag naar koude hoger of lager te schalen (1 = geen schalingsfactor)";
			parameter<float64> TapWater              : [1.0], Descr = "Schuif om functionele vraag naar warm water hoger of lager te schalen (1 = geen schalingsfactor)";
			parameter<float64> ElektrischeApparatuur : [1.0], Descr = "Schuif om functionele vraag naar elektriciteit voor apparatuur waaronder ventilatie hoger of lager te schalen (1 = geen schalingsfactor)";
		}
		container Lokaal
		{
			container Generiek
			{
				container GebouwOpties := for_each_nedv(Classifications/GebouwOptie/name
					, id(Classifications/GebouwOptie) == Classifications/GebouwOptie/V/geen
						?	Quote('criteria/always')
						:	Quote('criteria/never')
					, void
					, string
					)
				{
					parameter<string> Gebied_zK    : ['Criteria/Gebied'], Descr = "alternatieve state gebiedsoptie woningen, zonder koeling";
					parameter<string> Gebied_mK    : ['Criteria/Gebied'], Descr = "alternatieve state gebiedsoptie utiliteit, met eigen koeling";
					parameter<string> Gebied_H2_zK : ['Criteria/Gebied'], Descr = "alternatieve state gebiedsoptie voor waterstof";
					parameter<string> Gebied_H2_mK : ['Criteria/Gebied'], Descr = "alternatieve state gebiedsoptie voor waterstof";

					parameter<bool>   KiesMaatschappelijk: [false], Descr = "maak maatschappelijke rentabiliteitsafweging indien true, anders obv eindgebruikerskosten";
				}
				container Kosten
				{
					parameter<ratio> EfficiencySchuif            : [0.5], Descr = "1.0 = maximale efficiency, 0.0 = minimale efficiency";
					parameter<ratio> VerbeterMinMaxSchuif        : [0.5], Descr = "0.0 = minimale kosten; 1.0 = maximale kosten.";
					parameter<ratio> LeercurveMinMaxSchuif       := SharedInvoer/G01_aan 
						? 0[ratio]
						: SharedInvoer/G02_aan
							? 1  [ratio]
							: 0.5[ratio], Descr = "0.0 = optimistische leercurve; 1.0= pessimistische leercurve";

					parameter<ratio> LeercurveGebruikSchuif      : [1.0], Descr = "0.0 = kosten constant; 1.0 = Leercurve geheel in gebruik";
					parameter<ratio> IndividueleVerwarmingSchuif : [0.846], Descr = "0.0 = alle meergezinswoningen hebben blokverwarming 1.0 = alle meergezinswonigen hebben individuele verwarming";
				}
				container Opbrengsten
				{
					// De volgende schuif heeft betrekking op de opbrengsten voor de energieproducenten, dus Vastrecht en Aansluitbijdrage. 
					// Dat zijn kosten voor de eindgebruikers.
					// hoge opbrengsten zijn zo gekoppeld aan lage kosten, dus optimistisch voor de sector, 
					// danwel lage opbrengsten en hoge kosten: pessimistisch. 
					// Kan ook los geschoven worden
					parameter<ratio> MinMaxSchuif                       := 1  [ratio] - Kosten/VerbeterMinMaxSchuif;
					parameter<ratio> HuurVerlagingBijGebiedsOptieSchuif := 0.5[ratio], Descr = "0.0 is geen huurverlaging; 1.0 is volledige verlaging (E 160,-) per woning";
				}
			}

			unit<uint32> sprongtabel
			{
				attribute<string> BAG_VBO_ID;
				attribute<string> Sprong;
			}

			container BestaandeWoning := Generiek
			{
				container GebouwOpties := Generiek/Gebouwopties
				{
					parameter<string> Gebied_K: ['Criteria/Gebied']; // alternatieve state gebiedsoptie met koudelevering
					parameter<string> Gebied_w: ['Criteria/Gebied']; // alternatieve state gebiedsoptie woningen, zonder koeling
					parameter<string> VR_zK_x : ['Criteria/always']; 
					parameter<string> geen    : ['Criteria/never' ]; 
				}
			}
			container BestaandeUtil   := Generiek
			{
				container GebouwOpties := Generiek/Gebouwopties
				{
					parameter<string> Gebied_K: ['Criteria/Gebied']; // alternatieve state gebiedsoptie met koudelevering
					parameter<string> Gebied_u: ['Criteria/Gebied']; // alternatieve state gebiedsoptie utiliteit, met eigen koeling
					parameter<string> VR_mK_x : ['Criteria/always']; 
					parameter<string> geen    : ['Criteria/never' ]; 
				}
			}
			container BestaandeGlTb   := BestaandeWoning;
			container NieuwbouwWoning := BestaandeWoning;
			container NieuwbouwUtil   := BestaandeUtil;
			container NieuwbouwGlTb   := BestaandeGlTb;
		}
	}

	container Voorkeuren
	{
		container GebiedsOpties
		{
			parameter<uint32> Aantal: [0], Descr = "aantal gebiedsopties wordt later per rekenstap aangegeven";
		}

		parameter<float64>    MinderDanAndersFactor  :=  1.0               , Descr = "minder dan anders: zet op bijvoorbeeld 0.9 voor 10% korting op de volgens de WarmteWet berekende prijs";
		parameter<bool>       IsVasteWarmtePrijs     := false              , Descr = "indien true: er geldt een vaste warmteprijs";
		parameter<Eur_GJ>     VasteWarmtePrijs       := 25[Eur_GJ]         , Descr = "wordt alleen gebruikt indien IsVasteWarmtePrijs";
		parameter<float64>    GroenGasFactor         :=  0.000             , Descr = "aandeel van de aardgasvraag dat door groengas zal worden ingevuld(zonder Co2 uitstoot) tegen groengasprijs", Source = "Functioneel Ontwerp 4.0, Bijlage A.9 tabel 22 - opnieuw bepaald oktober 2019";
		parameter<float64>    H2Factor               :=  0.000             , Descr = "aandeel van de aardgasvraag die door H2 wordt ingevuld in STEG", Source = "TODO DOC: telefonisch Overleg Object Vision - Folckert";
		parameter<float64>    AardGasCO2Factor       :=  0.994             , Descr = "aandeel van de aardgasvraag die door groengas wordt ingevuld(zonder Co2 uitstoot) tegen aardgasprijs", Source = "Functioneel Ontwerp 4.0, Bijlage A.9 tabel 22 - opnieuw bepaald oktober 2019";
		parameter<float64>    ElektriciteitCO2Factor :=  1.0               , Descr = "aandeel van de elektriciteitsvraag waarover geen CO2 uitstoot wordt gerekend (bovenop factor in invoerbestand)";
		parameter<Eur_yr_asl> Kj_hv_w                := 160.0 [Eur_yr_asl] , Descr = "verlaging van de wettelijke maximale huur in geval van verlies van individuele gasaansluiting";
		
		container Afweging
		{
			parameter<bool>   LTversusWP   := false     , Descr = "indien true worden maatschappelijke kosten van eWP opgeteld bij contributiemarge TEO, LT en WKO (bij woningen met B of AP schillabel";
			parameter<bool>   Versus_L_B   := true      , Descr = "indien LTversusWP = true, is de referentie een luchtwarmtepomp (true) of een bodemwarmtepomp (false)";
			parameter<bool>   AlwaysBIO    := false     , Descr = "indien true worden krijgen alle buurten bioWKK opgelegd ongeacht de rentabiliteitsafweging";
			parameter<bool>   AlwaysGEO    := false     , Descr = "indien true worden krijgen alle buurten geothermie opgelegd ongeacht de rentabiliteitsafweging";
			parameter<bool>   AlwaysH2     := false     , Descr = "indien true worden krijgen alle buurten waterstof opgelegd ongeacht de rentabiliteitsafweging";
			parameter<bool>   GEOcontour   := true      , Descr = "indien true worden bij geothermieafwegingen de contour voor kansgebieden gebruikt, bij false worden alle gebieden als kansrijk aangemerkt";
			parameter<Eur_GJ> OnrendabelMT := 0[Eur_GJ] , Descr = "extra ruimte om MT restwarmtenetten aan te leggen ondanks onrendabele toppen (als vervanging voor SDE)";
		}
	}

	// Invoer Nieuwbouwscenario: vooalsnog beschikbaar: van 2 WLO scenario's afgeleide resultaten nieuwbouw en sloop projecties t/m 2050, te weten
	// - %SourceDataProjDir%/RO/20151123_RO_WLO_hoog_concentratie  &  %SourceDataProjDir%/RO/20151123_RO_WLO_laag_spreiding
	parameter<string> NieuwbouwInputTemplate := 'WloTiffNieuwbouw';
	parameter<string> WloScenarioFolder :=	'%SourceDataProjDir%/RO/20151123_RO_WLO_hoog_concentratie' , url="%sourceDataProjDir%/RO/20180802_MutatieRecept.htm";

	container Investering
	{
		parameter<Yr> BeginOpbrengstJaar : [ 2];
		parameter<Yr> EindOpbrengstJaar  : [30];
	}

	container Discontovoet
	{
		parameter<percent_yr>   mr := 3.0[percent_yr], Descr = "Maatschappelijke discontovoet";
		parameter<percent_yr>   ow := 6.0[percent_yr], Descr = "Discontovoet voor opwekking door energieproducenten; kan per aanbod-technologie worden overruled";
		parameter<percent_yr>   wd := 6.0[percent_yr], Descr = "Discontovoet voor wijkdistributeurs";
		parameter<percent_yr>   pt := 6.0[percent_yr], Descr = "Discontovoet voor primaire transporteurs";
		parameter<percent_yr>   id := 6.0[percent_yr], Descr = "Discontovoet voor inpandige distributeurs";
		parameter<percent_yr> E_bw := 5.5[percent_yr], Descr = "Discontovoet voor eigenaars van bestaande woningen";
		parameter<percent_yr> E_nw := 5.5[percent_yr], Descr = "Discontovoet voor eigenaars van nieuwe woningen";
		parameter<percent_yr> E_bu := 8.0[percent_yr], Descr = "Discontovoet voor eigenaars van bestaande utiliteiten";
		parameter<percent_yr> E_nu := 8.0[percent_yr], Descr = "Discontovoet voor eigenaars van nieuwe utiliteiten";
		parameter<percent_yr> E_bt := 8.0[percent_yr], Descr = "Discontovoet voor eigenaars van bestaande gtb";
		parameter<percent_yr> E_nt := 8.0[percent_yr], Descr = "Discontovoet voor eigenaars van nieuwe gtb";
	}

	container NMDA_Prijzen : Descr = "Invoer voor opbrengsten voor leveranciers warmtenetten"
	{
		container Aansluitbijdrage
		{
			parameter<Eur_asl> Aansluitbijdrage := 3594.87 [Eur_asl], Descr = "Euro2018, excl BTW. maximale aansluitbijdrage voor nieuwe warmtenetaansluitingen"  , Source ="ACM Warmtebesluit 2020";
		}
		container Vastrecht
		{
			parameter<Eur_yr_asl> VastrechtMT := 373.91[Eur_yr_asl] , Descr = "Euro2018, excl BTW. maximaal vastrecht voor MT warmtelevering en tapwaterlevering" , Source ="ACM Warmtebesluit 2020";
			parameter<Eur_yr_asl> VastrechtLT := 208.03[Eur_yr_asl] , Descr = "Euro2018, excl BTW. maximaal vastrecht voor LT warmtelevering"                     , Source ="ACM Warmtebesluit 2020";
			parameter<Eur_yr_asl> VastrechtK  := 188.72[Eur_yr_asl] , Descr = "Euro2018, excl BTW. maximaal vastrecht voor koudelevering"                         , Source ="ACM Warmtebesluit 2020";
			parameter<Eur_yr_asl> Meettarief  :=  21.22[Eur_yr_asl] , Descr = "Euro2018, excl BTW. maximaal meettarief"                                           , Source ="ACM Warmtebesluit 2020";
		}
		container KoudePrijs
		{
			parameter<ratio> Woningen  := 1.00[ratio] , Descr = "Verhouding tussen elektriciteitsprijs en koudeprijs woningen. 1.00 = 100%. referentiesituatie = niet koelen of met elektrische ventilator";
			parameter<ratio> Utiliteit := 1.56[ratio] , Descr = "Verhouding tussen elektriciteitsprijs en koudeprijs utiliteit. 1.56 = 64%. referentiesituatie = met LeWP koelen of elektrische ventilator";
		}
	}
	container H2_Prijzen : Descr = "Invoer voor opbrengsten voor leveranciers waterstof"
	{
		parameter<Eur_yr_asl> Tarief_vastr  :=  373.91 [Eur_yr_asl] , Source = "09-12-2019 Werkwaarde" , Descr = "jaarlijkse vastrecht per aansluiting";
		parameter<Eur_asl>    Tarief_aansl  := 3594.87 [Eur_asl]    , Source = "09-12-2019 Werkwaarde" , Descr = "eenmalige aansluitbijdrage";
		parameter<Eur_GJ>     Marktprijs_H2 :=   26.003[Eur_GJ]     , Source = "09-12-2019 Werkwaarde" , Descr = "consumentenprijs voor H2-levering";
	}
	
	container VraagKentallen : Descr = "Opbrengstenkentallen warmtenetten specifiek per bebouwingscomponent in te stellen indien nodig, eventueel met bandbreedte"
	{
		container BestaandeWoning
		{
			container Opbrengsten
			{
				parameter<Eur_yr_asl> VastrechtMT_min := NMDA_Prijzen/Vastrecht/VastrechtMT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtMT_max := VastrechtMT_min;
				parameter<Eur_yr_asl> VastrechtLT_min := NMDA_Prijzen/Vastrecht/VastrechtLT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtLT_max := VastrechtLT_min;
				parameter<Eur_yr_asl> VastrechtK_min  := NMDA_Prijzen/Vastrecht/VastrechtK;
				parameter<Eur_yr_asl> VastrechtK_max  := VastrechtK_min;
				attribute<Eur_asl>    AansluitTarief_min (Classifications/WoningtypeBestaand) := const(NMDA_Prijzen/Aansluitbijdrage/Aansluitbijdrage, Classifications/WoningtypeBestaand);
				attribute<Eur_asl>    AansluitTarief_max (Classifications/WoningtypeBestaand) := AansluitTarief_min;
			}
		}
		container NieuwbouwWoning
		{
			container Opbrengsten
			{
				parameter<Eur_yr_asl> VastrechtMT_min := NMDA_Prijzen/Vastrecht/VastrechtMT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtMT_max := VastrechtMT_min;
				parameter<Eur_yr_asl> VastrechtLT_min := NMDA_Prijzen/Vastrecht/VastrechtLT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtLT_max := VastrechtLT_min;
				parameter<Eur_yr_asl> VastrechtK_min  := NMDA_Prijzen/Vastrecht/VastrechtK;
				parameter<Eur_yr_asl> VastrechtK_max  := VastrechtK_min;
				attribute<Eur_asl>    AansluitTarief_min (Classifications/WoningtypeNieuwbouw) := const(NMDA_Prijzen/Aansluitbijdrage/Aansluitbijdrage, Classifications/WoningtypeNieuwbouw);
				attribute<Eur_asl>    AansluitTarief_max (Classifications/WoningtypeNieuwbouw) := AansluitTarief_min;
			}
		}
		container BestaandeUtil
		{
			container Opbrengsten
			{
				parameter<Eur_yr_asl> VastrechtMT_min := NMDA_Prijzen/Vastrecht/VastrechtMT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtMT_max := VastrechtMT_min;
				parameter<Eur_yr_asl> VastrechtLT_min := NMDA_Prijzen/Vastrecht/VastrechtLT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtLT_max := VastrechtLT_min;
				parameter<Eur_yr_asl> VastrechtK_min  := NMDA_Prijzen/Vastrecht/VastrechtK;
				parameter<Eur_yr_asl> VastrechtK_max  := VastrechtK_min;
				attribute<Eur_asl>    AansluitTarief_min (Classifications/UtilTypeBestaand):= const(NMDA_Prijzen/Aansluitbijdrage/Aansluitbijdrage, Classifications/UtilTypeBestaand);
				attribute<Eur_asl>    AansluitTarief_max (Classifications/UtilTypeBestaand):= AansluitTarief_min;
			}
		}
		container NieuwbouwUtil
		{
			container Opbrengsten
			{
				parameter<Eur_yr_asl> VastrechtMT_min := NMDA_Prijzen/Vastrecht/VastrechtMT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtMT_max := VastrechtMT_min;
				parameter<Eur_yr_asl> VastrechtLT_min := NMDA_Prijzen/Vastrecht/VastrechtLT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtLT_max := VastrechtLT_min;
				parameter<Eur_yr_asl> VastrechtK_min  := NMDA_Prijzen/Vastrecht/VastrechtK;
				parameter<Eur_yr_asl> VastrechtK_max  := VastrechtK_min;
				attribute<Eur_asl>    AansluitTarief_min (Classifications/UtilTypeNieuwbouw) := const(NMDA_Prijzen/Aansluitbijdrage/Aansluitbijdrage,Classifications/UtilTypeNieuwbouw);
				attribute<Eur_asl>    AansluitTarief_max (Classifications/UtilTypeNieuwbouw) := AansluitTarief_min;
			}
		}
		container BestaandeGlTb
		{
			container Opbrengsten
			{
				parameter<Eur_yr_asl> VastrechtMT_min := NMDA_Prijzen/Vastrecht/VastrechtMT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtMT_max := VastrechtMT_min;
				parameter<Eur_yr_asl> VastrechtLT_min := 0[Eur_yr_asl];
				parameter<Eur_yr_asl> VastrechtLT_max := VastrechtLT_min;
				parameter<Eur_yr_asl> VastrechtK_min  := 0[Eur_yr_asl];
				parameter<Eur_yr_asl> VastrechtK_max  := VastrechtK_min;
				attribute<Eur_asl>    AansluitTarief_min (Classifications/GLTB) := const(0[Eur_asl],Classifications/GLTB);
				attribute<Eur_asl>    AansluitTarief_max (Classifications/GLTB) := AansluitTarief_min;
			}
		}
		container NieuwbouwGlTb
		{
			container Opbrengsten
			{
				parameter<Eur_yr_asl> VastrechtMT_min := NMDA_Prijzen/Vastrecht/VastrechtMT + NMDA_Prijzen/Vastrecht/Meettarief;
				parameter<Eur_yr_asl> VastrechtMT_max := VastrechtMT_min;
				parameter<Eur_yr_asl> VastrechtLT_min := 0[Eur_yr_asl];
				parameter<Eur_yr_asl> VastrechtLT_max := VastrechtLT_min;
				parameter<Eur_yr_asl> VastrechtK_min  := 0[Eur_yr_asl];
				parameter<Eur_yr_asl> VastrechtK_max  := VastrechtK_min;
				attribute<Eur_asl>    AansluitTarief_min (Classifications/GLTB) := const(0[Eur_asl],Classifications/GLTB);
				attribute<Eur_asl>    AansluitTarief_max (Classifications/GLTB) := AansluitTarief_min;
			}
		}
	}
}
