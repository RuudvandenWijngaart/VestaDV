//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container HestiaRun
{
	//====== Ophalen eenheden, gebiedsafbakeningen en typeringen.
	#include <%projDir%/model/Units.dms>
	#include <%projDir%/model/Geography.dms>
	#include <%projDir%/model/Classifications.dms>

	//====== Invoer: over welke periode moet er worden gerekend?
	parameter<uint16> eerste_jaar := 2020[uint16], Descr = "Eerste zichtjaar";
	parameter<uint8>  aantal_jaar := 21[uint8]   , Descr = "Aantal zichtjaren";

	//====== Opbouw lijst van zichtjaren en rekenstappen
	unit<uint8> all_rekenstap: nrofrows = 51, IsHidden = "True";
	unit<uint8> rekenstap:= subset(id(all_rekenstap) < aantal_jaar), IsHidden = "True"
	{
		attribute<units/yr_uint16> Jaar  := (eerste_jaar + uint16(id(.)))[units/yr_uint16];
		attribute<string>          label := string(id(.))+'_'+string(Jaar);
		attribute<string>          name  := id(.) == 0b ? 'StartJaar' : 'R' + label; 
		unit<uint8> repeats  := subset(id(rekenstap) != 0b), IsHidden = "True"
		{
			attribute<string>name:=rekenstap/name[nr_orgentity];
		}
		template Rx_xxxx := Overige, IsHidden = "True";
	}	
	
	container Invoer : Using = "Units"
	{
		// Invoer: Geografische selectie welke gebied wordt onderzocht.

		// Volledig Nederland zonder selectie. Comment in om te gebruiken.
		//   parameter<string>   StudieGebied : ['NL'], IsHidden = "True";

		// Enkele gemeente als selectie. Comment in om te gebruiken.
		 parameter<string>   StudieGebied : ['GM0310'], IsHidden = "True"; //GM0050 (Zeewolde) is handig om kleinschalig te testen OF GM0213 (meer oudere gebouwen)

		//Meerdere gemeenten als studiegebied. Comment in om te gebruiken.
		//	parameter<string>   StudieGebied : ['GM0402,GM0344,GM1581,GM0439,GM0153,GM0599,GM0034,GM0050,GM0321'];

	    // RES-regio als selectie. Comment in om te gebruiken.
		//	parameter<string>   RES_Gebied   : ['RESTwente'];
		//	parameter<string>   StudieGebied :=
		//	Geography/RegioIndelingen/Energieregio/GM_code_list[rlookup(RES_Gebied, Geography/RegioIndelingen/Energieregio/name)];

		parameter<bool> StartgegevensAan := true, Descr = "Worden invoer voor isolatieniveaus en gebouwopties meegenomen?";

		container DefaultInstellingen
		{
			// Ophalen opties voor instellingen die per rekenstap gebruikt kunnen worden.
			#include <%projDir%/Runs/DefaultSettings/Basis.dms>
			#include <%projDir%/Runs/DefaultSettings/Rekenstap.dms>		
		}
		
		container SpecifiekeInstellingen := DefaultInstellingen/Basis
		{
			// Invoer: welke energieprijzenbestanden worden gebruikt.
			parameter<string> Energieprijzenbron := '20220709_VV_Euro2020';
			
			// Invoer: Per rekenstap worden specifieke instellingen gebruikt.
			// De lijst van rekenstappen wordt gedefinieerd bij rekenstap.
			
			container RekenStappen := for_each_nt(rekenstap/repeats/name, rekenstap/Rx_xxxx)
			{
				container StartJaar := DefaultInstellingen/Basis;
				container Overige   := DefaultInstellingen/Rekenstap/Specifiek;
			}
		}
		// Ophalen ruimtelijke invoerbestanden, kengetallen en energieprijzen.
		#include <%projDir%/model/Beleid.dms>
		#include <%projDir%/model/TVW.dms>
		#include <%projDir%/model/voorbeeldwoningen.dms>
		//#include <%projDir%/model/VivetVergelijkingNationaal.dms>
		#include <%projDir%/model/RuimtelijkeData.dms>
		#include <%projDir%/model/Kengetallen.dms>
		#include <%projDir%/model/EnergiePrijzen.dms>

		
		container TechnischeInstellingen: IsHidden = "True" {
			parameter<uint32> RandomSeed := 1;
			parameter<uint32> NrProcessors := 20;
			parameter<uint32> ThisProcessor := 3;			
		}
	}

	// Ophalen overige rekenschemas.
	#include <%projDir%/model/stam.dms>
	#include <%projDir%/model/BeginSituatie.dms>
	#include <%projDir%/model/TussenResultaten.dms>
	#include <%projDir%/model/Resultaten.dms>
	#include <%projDir%/model/ConfigSettings.dms>
	#include <%projDir%/model/ExportSettings.dms>
	unit<uint8> Tellingen := select_orgrel(ID(classifications/zichtjaar) < 51b) // voor telling testen niet altijd alle jaren nodig
	{
		attribute<string> name := org_rel->name;
		attribute<uint32> BO                    := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BO')+')';
		attribute<units/nrAsl> BO_asl           := ='union_data(., '+AsItemList('sum(/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BO/nrAansluitingen)')+')';
		attribute<uint32> ProductActieveWoning  := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning')+')';
		attribute<uint32> BouwdeelActieveWoning := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning')+')';
		attribute<uint32> OptiesHere            := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/OptiesHere')+')';
		attribute<uint32> DubbelActief          := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/sub_BouwdeelActief')+')';
		attribute<uint32> DA_xIsolatieAmbitie   := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/sub_BouwdeelActief/xIsolatieAmbitie')+')';
		attribute<uint32> EnkelProductActief    := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/sub_BouwdeelInactief')+')';
		attribute<uint32> PA_xIsolatieAmbitie   := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ProductActieveWoning/xIsolatieAmbitie')+')';
		attribute<uint32> BA_AmbitieBerekening  := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning/AmbitieBerekening')+')';
		attribute<uint32> EnkelBouwdeelActief   := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning/ProductInactieveBO')+')';
		attribute<uint32> EBA_AmbitieBerekening := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/BouwdeelActieveWoning/ProductInactieveAmbitie')+')';
		attribute<uint32> ActieveWoning         := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning')+')';
		attribute<units/nrAsl> A_asl            := ='union_data(., '+AsItemList('sum( /TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/BO_rel->nrAansluitingen)')+')';
		attribute<uint32> A_xInvesteringsOptie  := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/xInvesteringsOptie')+')';
		attribute<uint32> A_xGebouwOptie        := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/xGebouwOptie')+')';
		attribute<uint32> A_GeschikteOptie      := ='union_data(., '+AsItemList('#/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/GeschikteOptie')+')';
		
		attribute<uint32> A_Zonder_xIO          := ='ActieveWoning        - union_data(., '+AsItemList('sum_uint32(pcount(/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/xInvesteringsOptie/ActieveWoning_rel )>0)')+')';
		attribute<uint32> AxIO_Zonder_GO        := ='A_xInvesteringsOptie - union_data(., '+AsItemList('sum_uint32(pcount(/TussenResultaten/'+name+'/BebouwingsComponenten/Woning/ActieveWoning/GeschikteOptie/xInvesteringsOptie_rel)>0)')+')';

		container SELPETellingen
		{

			unit<uint32> table := Resultaten/StartJaar/SELPE/Installatie_x_ProductType/long_sparse
			{
				attribute<string>      name  := Resultaten/Startjaar/SELPE/Installatie_x_ProductType/long_sparse/name;
				attribute<units/PJ_yr> J2020 := Resultaten/Startjaar/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2021 := Resultaten/R1_2021/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2022 := Resultaten/R2_2022/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2023 := Resultaten/R3_2023/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2024 := Resultaten/R4_2024/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2025 := Resultaten/R5_2025/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2026 := Resultaten/R6_2026/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2027 := Resultaten/R7_2027/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2028 := Resultaten/R8_2028/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2029 := Resultaten/R9_2029/SELPE/Installatie_x_ProductType/long_sparse/PJ;
				attribute<units/PJ_yr> J2030 := Resultaten/R10_2030/SELPE/Installatie_x_ProductType/long_sparse/PJ;

			}
			
			parameter<string> OutputFolder := '%localDataProjDir%/Results/SELPE/';
			unit<uint32> variable := SubItem_PropValues(table,'name');
			container export_csv := Model/CalculationSchemes/Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'SELPETellingen.csv');
		}

		container KalibratieTellingen
		{
			attribute<units/nrAsl> Asl             (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/Asl')+')';
			attribute<units/nrAsl> A               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/A')+')';
			attribute<units/nrAsl> B               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/B')+')';
			attribute<units/nrAsl> C               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/C')+')';
			attribute<units/nrAsl> D               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/D')+')';
			attribute<units/nrAsl> E               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/E')+')';
			attribute<units/nrAsl> F               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/F')+')';
			attribute<units/nrAsl> G               (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/G')+')';
			attribute<units/nrAsl> RV_gas          (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/RV_gas')+')';
			attribute<units/nrAsl> RV_gebiedsoptie (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/RV_gebiedsoptie')+')';
			attribute<units/nrAsl> TW_gas          (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/TW_gas')+')';
			attribute<units/nrAsl> VT_nat          (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/VT_nat')+')';

			attribute<units/GJ_yr> V_gas           (Tellingen) := ='union_data(.., '+AsItemList('sum(/Resultaten/'+name+'/EnergyResults/Metervraag/gebouwen/gas/Totaal)')+')';
			attribute<units/GJ_yr> V_warmte        (Tellingen) := ='union_data(.., '+AsItemList('sum(/Resultaten/'+name+'/EnergyResults/Metervraag/gebouwen/WarmteKoudeLevering/V_warmte)')+')';

			unit<uint32> all_rekenstap: nrofrows = 51;

			unit<uint32> rekenstap32 := subset(id(all_rekenstap) < uint32(aantal_jaar)), IsHidden = "True"
			{
				attribute<units/yr_uint16> Jaar  := (uint16(2000) + uint16(id(.)))[units/yr_uint16];

				attribute<string>          label := string(id(.))+'_'+string(Jaar);
				attribute<string>          name  := id(.) == 0u ? 'StartJaar' : 'R' + label; 
			}	

			unit<uint32> table := Rekenstap32
			{
				attribute<Tellingen> Tellingen_rel := rlookup(name, Tellingen/name);

				attribute<units/nrAsl> Asl := KalibratieTellingen/Asl[Tellingen_rel];
				attribute<units/nrAsl> A               := KalibratieTellingen/A[Tellingen_rel];
				attribute<units/nrAsl> B               := KalibratieTellingen/B[Tellingen_rel];
				attribute<units/nrAsl> C               := KalibratieTellingen/C[Tellingen_rel];
				attribute<units/nrAsl> D               := KalibratieTellingen/D[Tellingen_rel];
				attribute<units/nrAsl> E               := KalibratieTellingen/E[Tellingen_rel];
				attribute<units/nrAsl> F               := KalibratieTellingen/F[Tellingen_rel];
				attribute<units/nrAsl> G               := KalibratieTellingen/G[Tellingen_rel];
				attribute<units/nrAsl> RV_gas          := KalibratieTellingen/RV_gas[Tellingen_rel];
				attribute<units/nrAsl> RV_gebiedsoptie := KalibratieTellingen/RV_gebiedsoptie[Tellingen_rel];
				attribute<units/nrAsl> TW_gas          := KalibratieTellingen/TW_gas[Tellingen_rel];
				attribute<units/nrAsl> VT_nat          := KalibratieTellingen/VT_nat[Tellingen_rel];

				attribute<units/GJ_yr> V_gas           := KalibratieTellingen/V_gas[Tellingen_rel];
				attribute<units/GJ_yr> V_warmte        := KalibratieTellingen/V_warmte[Tellingen_rel];
			}
			parameter<string> OutputFolder := '%localDataProjDir%/Results/Kalibratie/';
			unit<uint32> variable := SubItem_PropValues(table,'name');
			container export_csv := Model/CalculationSchemes/Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'KalibratieTellingen.csv');
		}

		container MaatregelTellingen
		{
			//====== KPIs voor export
			attribute<units/nrAsl> Asl  (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/Installaties/Results/Asl')+')';

			attribute<units/m2> RB_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/RB')+')';
			attribute<units/m2> RO_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/RO')+')';
			attribute<units/m2> DR_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/DR')+')';
			attribute<units/m2> PL_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/PL')+')';
			attribute<units/m2> VL_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/VL')+')';
			attribute<units/m2> MG_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/MG')+')';
			attribute<units/m2> MS_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/MS')+')';
			attribute<units/m2> DP_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/DP')+')';
			attribute<units/m2> DS_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/DS')+')';
			attribute<units/m2> KR_m2   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Change/KR')+')';

			attribute<units/ratio> muur_ia (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/muur')+')';
			attribute<units/ratio> dak_ia  (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/dak')+')';
			attribute<units/ratio> glas_ia (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/glas')+')';
			attribute<units/ratio> vloer_ia(Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/vloer')+')';
			attribute<units/ratio> RB_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/RB')+')';
			attribute<units/ratio> RO_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/RO')+')';
			attribute<units/ratio> DR_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/DR')+')';
			attribute<units/ratio> PL_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/PL')+')';
			attribute<units/ratio> VL_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/VL')+')';
			attribute<units/ratio> MG_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/MG')+')';
			attribute<units/ratio> MS_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/MS')+')';
			attribute<units/ratio> DP_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/DP')+')';
			attribute<units/ratio> DS_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/DS')+')';
			attribute<units/ratio> KR_ia   (Tellingen) := ='union_data(.., '+AsItemList('/Resultaten/'+name+'/MaatregelenRapportage/Rapport/Woning/BouwdeelNiveau/Aandeel/KR')+')';

			//===== End KPIs

			unit<uint32> all_rekenstap: nrofrows = 51;

			unit<uint32> rekenstap32 := subset(id(all_rekenstap) < uint32(aantal_jaar)), IsHidden = "True"
			{
				attribute<units/yr_uint16> Jaar  := (uint16(2000) + uint16(id(.)))[units/yr_uint16];

				attribute<string>          label := string(id(.))+'_'+string(Jaar);
				attribute<string>          name  := id(.) == 0u ? 'StartJaar' : 'R' + label; 
			}	

			unit<uint32> table := Rekenstap32
			{
				attribute<Tellingen> Tellingen_rel := rlookup(name, Tellingen/name);

				//====== KPIs voor export
				attribute<units/nrAsl> Asl := MaatregelTellingen/Asl[Tellingen_rel];

				attribute<units/m2> RB_m2 := MaatregelTellingen/RB_m2[Tellingen_rel];
				attribute<units/m2> RO_m2 := MaatregelTellingen/RO_m2[Tellingen_rel];
				attribute<units/m2> DR_m2 := MaatregelTellingen/DR_m2[Tellingen_rel];
				attribute<units/m2> PL_m2 := MaatregelTellingen/PL_m2[Tellingen_rel];
				attribute<units/m2> VL_m2 := MaatregelTellingen/VL_m2[Tellingen_rel];
				attribute<units/m2> MG_m2 := MaatregelTellingen/MG_m2[Tellingen_rel];
				attribute<units/m2> MS_m2 := MaatregelTellingen/MS_m2[Tellingen_rel];
				attribute<units/m2> DP_m2 := MaatregelTellingen/DP_m2[Tellingen_rel];
				attribute<units/m2> DS_m2 := MaatregelTellingen/DS_m2[Tellingen_rel];
				attribute<units/m2> KR_m2 := MaatregelTellingen/KR_m2[Tellingen_rel];

				attribute<units/ratio> muur_ia  := MaatregelTellingen/muur_ia[Tellingen_rel];
				attribute<units/ratio> dak_ia   := MaatregelTellingen/dak_ia[Tellingen_rel];
				attribute<units/ratio> glas_ia  := MaatregelTellingen/glas_ia[Tellingen_rel];
				attribute<units/ratio> vloer_ia := MaatregelTellingen/vloer_ia[Tellingen_rel];
				attribute<units/ratio> RB_ia := MaatregelTellingen/RB_ia[Tellingen_rel];
				attribute<units/ratio> RO_ia := MaatregelTellingen/RO_ia[Tellingen_rel];
				attribute<units/ratio> DR_ia := MaatregelTellingen/DR_ia[Tellingen_rel];
				attribute<units/ratio> PL_ia := MaatregelTellingen/PL_ia[Tellingen_rel];
				attribute<units/ratio> VL_ia := MaatregelTellingen/VL_ia[Tellingen_rel];
				attribute<units/ratio> MG_ia := MaatregelTellingen/MG_ia[Tellingen_rel];
				attribute<units/ratio> MS_ia := MaatregelTellingen/MS_ia[Tellingen_rel];
				attribute<units/ratio> DP_ia := MaatregelTellingen/DP_ia[Tellingen_rel];
				attribute<units/ratio> DS_ia := MaatregelTellingen/DS_ia[Tellingen_rel];
				attribute<units/ratio> KR_ia := MaatregelTellingen/KR_ia[Tellingen_rel];

				//===== End KPIs
			}
			parameter<string> OutputFolder := '%localDataProjDir%/Results/Kalibratie/';
			unit<uint32> variable := SubItem_PropValues(table,'name');
			container export_csv := Model/CalculationSchemes/Rapportage/WriteTable32ToCSV(table, AsList(variable/name, ';'), OutputFolder+'KalibratieTellingen.csv');
		}
	}
}
