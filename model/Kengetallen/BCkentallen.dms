//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container BCkentallen :=
	for_each_nedvn(
		 src/BC_kentallen/Naam
		,src/BC_kentallen/waarde+"[" + src/BC_kentallen/eenheid + "]"
		, void
		, src/BC_kentallen
		, src/BC_kentallen/eenheid
	), StorageReadOnly = "True"
	{
		
		container bestaandewoning
		{
			attribute<ratio> R_Dakopp (Classifications/WoningtypeBestaand)   : [0.3 , 0.3 , 0.3 , 0.3 , 0.3 , 0.3  , 0.3];
			attribute<ratio> R_Stapel (Classifications/WoningtypeBestaand)   : [1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 2.0  , 6.0];
			attribute<ratio> ZonB_opp (Classifications/WoningtypeBestaand)   : [0.03, 0.03, 0.03, 0.03, 0.03, 0.015, 0.005];
		}
		container nieuwbouwwoning
		{
			attribute<ratio> R_Dakopp (Classifications/WoningtypeNieuwbouw)  : [0.3 , 0.3 , 0.3 , 0.3 , 0.3  , 0.3  , 0.3 , 0.3 , 0.3 , 0.3  , 0.3 , 0.3  , 0.0 , 0.0 , 0.3];
			attribute<ratio> R_Stapel (Classifications/WoningtypeNieuwbouw)  : [1.0 , 1.0 , 1.0 , 1.0 , 2.0  , 6.0  , 3.0 , 3.0 , 3.0 , 2.0  , 1.0 , 6.0  , 1.0 , 1.0 , 1.0];
			attribute<ratio> ZonB_opp (Classifications/WoningtypeNieuwbouw)  : [0.03, 0.03, 0.03, 0.03, 0.015, 0.005, 0.01, 0.01, 0.01, 0.015, 0.03, 0.005, 0.00, 0.00, 0.03];
		}
		container bestaandeutil //Stapelfactor op basis van de berekening puntenwolk hoogtebestand en oppervlaktes BAG
		{
			attribute<ratio> R_Dakopp (Classifications/UtilTypeBestaand)     : [0.8        , 0.8        , 0.8        , 0.8        , 0.8        , 0.8        , 0.8        , 0.8        , 0.8        , 0.8];
			attribute<ratio> R_Stapel (Classifications/UtilTypeBestaand)     : [4.13549775 , 2.48129865 , 4.13549775 , 3.3083982  , 2.48129865 , 1.0        , 3.3083982  , 3.3083982  , 3.3083982  , 3.3083982];
			attribute<ratio> ZonB_opp (Classifications/UtilTypeBestaand)     : [0.001421186, 0.001421186, 0.014425039, 0.014093429, 0.001737005, 0.001421186, 0.012601184, 0.001421186, 0.001421186, 0.001421186];
		}
		container nieuwbouwutil //Stapelfactor op basis van de berekening puntenwolk hoogtebestand en oppervlaktes BAG
		{
			attribute<ratio> R_Dakopp (Classifications/UtilTypeNieuwbouw)    : [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8];
			attribute<ratio> R_Stapel (Classifications/UtilTypeNieuwbouw)    : [4.13549775, 2.48129865, 1.6541991, 1.6541991, 4.13549775, 4.13549775, 2.48129865, 3.3083982, 3.3083982];
			attribute<ratio> ZonB_opp (Classifications/UtilTypeNieuwbouw)    : [0.001413423, 0.001413423, 0.001413423, 0.001413423, 0.009422819, 0.03533557, 0.001727517, 0.015312081, 0.001413423];
		}
		container bestaandegltb
		{
			attribute<ratio> R_Dakopp (Classifications/GLTB)                 : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
			attribute<ratio> R_Stapel (Classifications/GLTB)                 : [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];
			attribute<ratio> ZonB_opp (Classifications/GLTB)                 : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
		}
		container nieuwbouwgltb
		{
			attribute<ratio> R_Dakopp (Classifications/GLTB)                 : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
			attribute<ratio> R_Stapel (Classifications/GLTB)                 : [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0];
			attribute<ratio> ZonB_opp (Classifications/GLTB)                 : [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
		}

		template BC_kentallen
		{
			//begin case parameters
			parameter<ratio> EfficiencySchuif; // 1.0 = maximale efficiency, 0.0 = minimale efficiency
			parameter<ratio> CurveEWPlw;
			parameter<ratio> CurveEWPww;
			parameter<ratio> CurveHWP;
			parameter<ratio> CurveZonPV;
			parameter<ratio> CurveZonB;
			parameter<ratio> CurvemWKK;
			parameter<ratio> CurveLTAS;
			parameter<ratio> KostenMin;
			parameter<ratio> KostenMax;
			parameter<string> BCname;
			unit<uint8>   BebouwingsTypeDomein;
			//end case parameters
			
			//============== Parameters voor kosten van Laagtemperatuur afgiftesysteem woningen en utiliteit
			parameter<Eur_asl> Ki_LTAS_l_asl := CurveLTAS * (
				(BCname == 'BestaandeWoning' || BCname == 'NieuwbouwWoning') 
					? KostenMin * Ki_LTAS_wl_min + KostenMax * Ki_LTAS_wl_max 
					: 0.0[Eur_asl]
				);

			parameter<Eur_asl> Ki_LTAS_h_asl := CurveLTAS * (
				(BCname == 'BestaandeWoning' || BCname == 'NieuwbouwWoning') 
					? KostenMin * Ki_LTAS_wh_min + KostenMax * Ki_LTAS_wh_max 
					: 0.0[Eur_asl]
				);

			parameter<Eur_m2> Ki_LTAS_opp  := CurveLTAS * (
				(BCname == 'BestaandeWoning' || BCname == 'NieuwbouwWoning') 
					? 0.0[Eur_m2] 
					: KostenMin * Ki_LTAS_u_min + KostenMax * Ki_LTAS_u_max
				);

			//============== Parameters voor kosten van nieuwe elektriciteits- en gasaansluitingen voor de nieuwbouw
			parameter<Eur_asl> Ki_Aansl_g_asl := BCname == 'NieuwbouwWoning' ? /Invoer/Kengetallen/infra/AansluitTarief_nw_g : 0.0[Eur_asl];
			parameter<Eur_asl> Ki_Aansl_e_asl := BCname == 'NieuwbouwWoning' ? /Invoer/Kengetallen/infra/AansluitTarief_nw_e : 0.0[Eur_asl];
			parameter<Eur_m2>  Ki_Aansl_g_opp := BCname == 'NieuwbouwUtil'   ? /Invoer/Kengetallen/infra/AansluitTarief_nu_g : 0.0[Eur_m2];
			parameter<Eur_m2>  Ki_Aansl_e_opp := BCname == 'NieuwbouwUtil'   ? /Invoer/Kengetallen/infra/AansluitTarief_nu_e : 0.0[Eur_m2];

			parameter<Eur_m2>  Ki_ZonB                             := curveZonB  * (KostenMin * Ki_ZonB_min  + KostenMax * Ki_ZonB_max);
			parameter<Eur_m2>  Ki_ZonPV                            := curveZonPV * (KostenMin * Ki_ZonPV_min + KostenMax * Ki_ZonPV_max);
			attribute<ratio>   Dakoppervlak (BebouwingsTypeDomein) := =replace('@BC@/R_Dakopp', '@BC@', BCname);
			attribute<ratio>   Stapelfactor (BebouwingsTypeDomein) := =replace('@BC@/R_stapel', '@BC@', BCname);
			attribute<ratio>   m2dak_m2bvo  (BebouwingsTypedomein) := Dakoppervlak / Stapelfactor;
			attribute<ratio>   R_ZonB_opp   (BebouwingsTypeDomein) := =replace('@BC@/ZonB_opp', '@BC@', BCname);

			parameter<Eur_asl> Ki_mWKK := curvemWKK * (
				(BCname == 'bestaandewoning' || BCname == 'nieuwbouwwoning') 
					? KostenMin * Ki_w_mWKK_min + KostenMax * Ki_w_mWKK_max 
					: KostenMin * Ki_u_mWKK_min + KostenMax * Ki_u_mWKK_max 
				);
		}
	}

