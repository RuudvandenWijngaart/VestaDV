//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Units: isHidden = "True"
{
	// length
	unit<float64> m             := BaseUnit('m', float64), label = "Meter", Descr = "SI base unit for length";
	unit<float64> km            := 1000.0 * m, cdf = "Classifications/km_7k/ClassBreaks";

	// area
	unit<float64> m2            := m * m;
	unit<float64> km2           := km * km;
	unit<float64> ha            := 10000.0 * m2;

	//mass
	unit<float64> kg            := 1000.0 * g, Descr = "SI base unit for mass";
	unit<float64> g             := BaseUnit('g', float64);
	unit<float64> ton           := 1000.0 * kg;
	unit<float64> ton_ha_yr     := ton / ha / yr;

	// duration
	unit<float64> s             := baseunit('s', float64),   label = "second", descr = "SI base unit for time";
	unit<float64> hr            := 60 * 60 * s,              label = "hour";
	unit<float64> yr            := BaseUnit('yr', float64) , label = "year", descr = "alternative unit for time duration";
	unit<float64> _yr           := 1 / yr,                   label = "per year";
	
	// time moment
	unit<uint16>  yr_uint16     := uint16(yr), descr = "aanduiding van een moment, ook geschikt als domain";

	// eenheden voor snelheid
	unit<float64> km_hr     := km / hr;
	unit<float64> m_s	    := m / s;
	
	// volume
	unit<float64> m3            := m * m * m;
	unit<float64> m3_yr         := m3 / yr;

	// energy
	unit<float64> J             := BaseUnit('J', float64), label = "Joule", descr = "SI unit for energy";
//	unit<float64> J             := kg * m2 / (s * s), label = "Joule", descr = "SI unit for energy";
	unit<float64> V             := BaseUnit('V', float64), label = "Volt";
	unit<float64> A             := W / V;

	// power
	unit<float64> W             := J / s, label = "Watt", descr = "SI unit for power";
	unit<float64> kW            := 1000 * W;
	unit<float64> MW            := 1000 * kW;

	// energy
	unit<float64> kWh           := kW * hr;
	unit<float64> kWh_yr        := kWh / yr;
	unit<float64> kWh_yr_m2     := kWh_yr / m2;
	unit<float64> kJ            := 1000 * J;
	unit<float64> MJ            := 1000 * kJ;
	unit<float64> MJ_yr         := MJ / yr;
	unit<float64> MJ_kg         := MJ / kg;
	unit<float64> GJ            := 1000 * MJ;
	unit<float64> GJ_GJ         := GJ /GJ;
	unit<float64> TJ            := 1000 * GJ;
	unit<float64> PJ            := 1000 * TJ;
	unit<float64> GJ_yr         := GJ / yr, label = "GigaJoule per Year", Descr = "unit for energy consumption (as opposed to power which indicates maximum capacity)";
	unit<float64> kW_GJ_yr      := kW / GJ_yr;
	unit<float64> TJ_yr         := TJ / yr, label = "TeraJoule per Year", Descr = "unit for LT energy production";
	unit<float64> PJ_yr         := PJ / yr, label = "PetaJoule per Year", Descr = "alternative unit for aggregated consumption";
	unit<float64> GJ_yr_m2      := GJ_yr / m2;
	unit<float64> GJ_yr_asl     := GJ_yr / nrAsl;
	unit<float64> GJ_m3         := GJ / m3;
	unit<float64> m_kW          := m / kW;
	unit<float64> GJ_yr_ha      := GJ_yr / ha;
	unit<float64> GJ_yr_kW      := GJ_yr / kW;
	unit<float64> GJ_yr_WEQ     := GJ_yr / nrWoning;
	unit<float64> m3_yr_WEQ     := m3_yr / nrWoning;
	unit<float64> GJe_GJth      := GJ / GJ;

	// effects of energyproduction
	unit<float64> kg_GJ         := kg / GJ  , Descr = "Co2 effect van energieproductie";
	unit<float64> g_GJ          :=  g / GJ  , Descr = "andere effect van energieproductie";
	unit<float64> kg_yr         := kg / yr  , Descr = "Co2 effect per jaar";
	unit<float64> ton_yr        := ton / yr , Descr = "CO2 effect per jaar in tonnen";
	unit<float64> kg_yr_WEQ     := kg_yr / nrWoning;
	
	// actor based
	unit<float64> nrWoning      := BaseUnit('Woning', float64);
	unit<float64> nrPand        := BaseUnit('Pand', float64);
	unit<float64> nrUtil        := BaseUnit('Utiliteitsobject', float64);
	unit<float64> nrVBO         := BaseUnit('Verblijfsobject', float64);
	unit<float64> nrAsl         := BaseUnit('Aansluiting', float64);
	unit<float64> nrOS          := BaseUnit('Onderstation', float64);
	unit<float64> kW_Woning     := kW / nrWoning;
	unit<float64> kW_OS         := kW / nrOS;
	unit<float64> kW_m2         := kW / m2;
	unit<float64> kW_asl        := kW / nrAsl;
	unit<float64> m_asl         := m  / nrAsl;
	unit<float64> m_OS          := m  / nrOS;
	unit<float64> m_pand        := m  / nrPand;
	unit<float64> m2_asl        := m2 / nrAsl;
	unit<float64> m2_Woning     := m2 / nrWoning;
	unit<float64> asl_pand      := nrAsl / nrPand;
	unit<float64> pand_asl      := nrPand / nrAsl;

	unit<float64> nrGroep       := BaseUnit('Groep', float64), Descr = "Aantal groepen in een aansluiting";
	unit<float64> Amp_Groep     := A / nrGroep;

	unit<float64> MSR           := BaseUnit('Middenspanningsruimte', float64);
	unit<float64> kW_MSR        := kW / MSR;

	unit<float64> WEQ           := BaseUnit('Woningequivalent', float64);

	// financial
	unit<float64> Eur           := BaseUnit('Euro', float64), Descr = "Euro prijspeil 2010";
	unit<float64> kEur          := 1000.0 * Eur;
	unit<float64> mEur          := 1000.0 * kEur;
	unit<float64> Eur_m         := Eur / m;
	unit<float64> Eur_M2        := Eur / m2, cdf = "Classifications/Eur_M2_15K/ClassBreaks";
	unit<float64> Eur_M3        := Eur / m3;
	unit<float64> Eur_Ha        := Eur / ha;
	unit<float64> Eur_kg        := Eur / kg;
	unit<float64> Eur_ton       := Eur / ton;
	unit<float64> Eur_kWh       := Eur / kWh;
	unit<float64> Eur_yr        := Eur / yr;
	unit<float64> mEur_yr       := mEur / yr;
	unit<float64> Eur_yr_m      := Eur_yr / m;
	unit<float64> Eur_yr_m2     := Eur / yr / m2;
	unit<float64> Eur_ha_yr     := Eur / ha / yr;
	unit<float64> Eur_kW        := Eur / kW;
	unit<float64> Eur_yr_kW     := Eur_kW / yr; // gebruikt voor aansluitwaarden
	unit<float64> Eur_MW        := Eur / MW;
	unit<float64> Eur_MW_yr     := Eur_MW / yr; // gebruikt voor ranking van planregio's voor restwarmtetoewijzing.
	unit<float64> Eur_GJ        := Eur / GJ;
	unit<float64> Eur_pand      := Eur / nrPand;
	unit<float64> Eur_asl       := Eur / nrAsl;
	unit<float64> Eur_yr_asl    := Eur / yr / nrAsl;
	unit<float64> Eur_MSR       := Eur / MSR;
	unit<float64> Eur_yr_WEQ    := Eur_yr / nrWoning; // REMOVE, wordt nu nog wel gebruikt

	// no metric
	unit<float64> ratio         := range(1.0 * ha / ha, 0.0, 1.0), cdf = "Classifications/ratio9K/ClassBreaks";
	unit<float64> percent       := 100.0 * ratio, cdf = "Classifications/Percentage13K/ClassBreaks";
	unit<float64> percent_yr    := percent / yr;
	unit<float64> potentiaal    : cdf = "Classifications/Potentiaal10K/ClassBreaks";

	unit<float64> Celsius       := BaseUnit('ÂºC', float64);
}
