//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container CalculationSchemes: Using = "Units;Geography"
{
	#include <ModelObjectKentallenImport.dms>
	#include <NieuwbouwWoningOperaties.dms>
	#include <NieuwbouwUtilOperaties.dms>
	#include <NieuwbouwGlTbOperaties.dms>
	#include <LegeBebouwingsComponent.dms>
	#include <BebouwingsOperaties.dms>
	template BebouwingsComponentDoetNietMee;
	#include <StartingStateComponent.dms>
	#include <TussenResultaten.dms>	
	#include <Payments.dms>
	#include <Transformations.dms>
	#include <Resultaten.dms>
	#include <LeidraadResultaten.dms>
	#include <StateNaAllocatieComponent.dms>
	#include <AllocatieResultatenComponent.dms>
	
	template WarmteVraagT
	{
		// begin case parameters
		unit<uint32> BO;
		parameter<Celsius> T_sec;
		parameter<bool>    Koudebeschikbaar;
		attribute<float64> BeschikbaarheidsFactor(BO);
		// end case parameters

		//Aansluitwaardes
		attribute<kW>     ASW_RV             (BO) := =T_sec <= 55[Celsius] ? 'BO/AansluitCapaciteit/ASW_RVlt' : 'BO/AansluitCapaciteit/ASW_RVmt';
		attribute<kW>     ASW_TW             (BO) := =T_sec <= 55[Celsius] ? 'BO/AansluitCapaciteit/ASW_TWlt' : 'BO/AansluitCapaciteit/ASW_TWmt';
		attribute<kW>     ASW_K              (BO) := =KoudeBeschikbaar     ? 'BO/AansluitCapaciteit/ASW_K'    : 'const(0[kw], BO)';

		//Gelijktijdigheidsfactoren
		parameter<ratio>  GTF_RV             := =T_sec <= 55[Celsius]    ? 'BO/AansluitCapaciteit/GTF_RVlt'    : 'BO/AansluitCapaciteit/GTF_RVmt';
		parameter<ratio>  GTF_TW             := BO/AansluitCapaciteit/GTF_TW;
		parameter<ratio>  GTF_K              := BO/AansluitCapaciteit/GTf_K;

		//Vermogensvraag aan het secundaire net
		attribute<kW>     P_RV_sec           (BO) := ASW_RV * GTF_RV;
		attribute<kW>     P_TW_sec           (BO) := ASW_TW * GTF_TW;
		attribute<kW>     P_K_sec            (BO) := =KoudeBeschikbaar ? 'ASW_K * GTF_K': 'const(0.0[kw],BO)';

		attribute<kW>     AansluitCapaciteit (BO) := =KoudeBeschikbaar ? 'max_elem(ASW_TW   + ASW_RV  , ASW_K  )' : 'ASW_TW   + ASW_RV  ';
		attribute<kW>     P_sec              (BO) := =KoudeBeschikbaar ? 'max_elem(P_TW_sec + P_RV_sec, P_K_sec)' : 'P_TW_sec + P_RV_sec';

		attribute<nrAsl>  nrAansluitingen    (BO) := BeschikbaarheidsFactor * BO/nrAansluitingen;
		attribute<m2>     Oppervlakte        (BO) := BeschikbaarheidsFactor * BO/Oppervlakte;

		//Vraag
		attribute<GJ_yr>  V_RV               (BO) := BeschikbaarheidsFactor * BO/BebouwingsComponent_UpRef/Functioneel2/V_RV;
		attribute<GJ_yr>  V_TW               (BO) := BeschikbaarheidsFactor * BO/Functioneel/TW;
		attribute<GJ_yr>  V_K                (BO) := BeschikbaarheidsFactor * BO/Functioneel/K;
		attribute<GJ_yr>  V_Warmte           (BO) := V_RV + V_TW;
		
		//Opbrengsten
		attribute<Eur_yr> Oj_Warmte          (BO) := V_Warmte * BO/WarmteWet/WarmtePrijs, Source = "FO v7a F 8-10";
		attribute<Eur_yr> Oj_VastRechtMT     (BO) := BeschikbaarheidsFactor * BO/Opbrengsten/VastRechtMT_T;
		attribute<Eur_yr> Oj_VastRechtLT     (BO) := BeschikbaarheidsFactor * BO/Opbrengsten/VastRechtLT_T;
		attribute<Eur_yr> Oj_VastRechtK      (BO) := BeschikbaarheidsFactor * BO/Opbrengsten/VastRechtK_T;
		attribute<Eur>    Oi_AansluitBijdrage(BO) := BeschikbaarheidsFactor * BO/Opbrengsten/AansluitBijdrageT;
	}

	#include <EnergiePrijzen.dms>
	#include <KostenBatenSchema.dms>
	#include <KostenWoningen.dms>
	#include <KostenUtiliteit.dms>
	#include <KostenGlastuinbouw.dms>

	template BuisKosten
	{
		// begin case parameters
		unit<uint32>  LeidingDomein;
		attribute<MW> Capaciteit (LeidingDomein);
		// begin case parameters

		attribute<Eur_m> K_min (LeidingDomein) := Capaciteit > 0[MW] ? 400[Eur_m] + 210[Eur / m] * (Capaciteit * 1.0[1 / MW])^ 0.5 : 0[Eur_m], Source = "Functioneel Ontwerp 4.0 bijlage A.11";
		attribute<Eur_m> K_max (LeidingDomein) := Capaciteit > 0[MW] ? 800[Eur_m] + 200[Eur / m] * (Capaciteit * 1.0[1 / MW])^ 0.6 : 0[Eur_m], Source = "Functioneel Ontwerp 4.0 bijlage A.11";
		attribute<Eur_m> K_m   (LeidingDomein) := (K_min * Schuiven/KostenMin + K_max * Schuiven/KostenMax) * Leercurves/MTnet/curve;
		attribute<Eur_m> aK_m  (LeidingDomein) := Invoer/Kengetallen/Constanten/Omwegfactor * K_m; // K_hoofd_m incl omwegfactor
	}
	
	template MaakCurve
	{
		//parameters
		attribute<percent> Datamin  (Classifications/ZichtJaar);
		attribute<percent> DataMax  (Classifications/ZichtJaar);
		//parameters
		parameter<ratio>   CurveMin := interpolate_linear(Rekenstap_jaar, Classifications/ZichtJaar/Jaar, DataMin) / 100[percent];
		parameter<ratio>   CurveMax := interpolate_linear(Rekenstap_jaar, Classifications/ZichtJaar/Jaar, DataMax) / 100[percent];
		parameter<ratio>   Base     := CurveMin * Schuiven/CurveMin + CurveMax * Schuiven/CurveMax;
		parameter<ratio>   Curve    := Base * Schuiven/LerenAan + 1[ratio] * Schuiven/LerenUit;
	}

	#include <NcwSchema.dms>
	#include <AanbodOpties.dms>
	#include <Rapportage.dms>
	
	template NieuwbouwUnite
	{
		// begin case parameters
		container bron;
		unit<uint8> TypeDomein;
		// einde case parameters
		
		
		unit<uint32> results := ='Union_Unit(' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject') + ')'
		,	DialogType ="Map"
		,	DialogData ="point"
		{
			unit<uint8> ModelObjectKeyDomein := combine_uint8(TypeDomein, Classifications/BouwJaar);
			
			attribute<string> code     := label;
			attribute<string> TypeName := ='Union_Data(., ' + asItemList('const(' + Quote(TypeDomein/name) + ', bron/' + TypeDomein/name + '/BebouwingsObject)') + ')';
			attribute<string> label    := TypeName+string(BouwJaar)+string(point), DialogType = "labelText";

			attribute<Geography/rdc_meter>  point   := ='Union_Data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/point') + ')';
			attribute<nrAsl>      nrAansluitingen_i := ='Union_Data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/nrAansluitingen_i') + ')';
			attribute<m2>         Oppervlakte_i     := ='Union_Data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Oppervlakte_i') + ')';
			attribute<pand_asl>   Pand_aandeel      := ='union_data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/pand_aandeel') + ')';
			attribute<TypeDomein> BebouwingsType    := ='Union_Data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/BebouwingsType') + ')';
			
			attribute<Invoer/RuimtelijkeData/StudieGebied/Buurt>    buurt_rel      := ='Union_Data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/buurt_rel'  ) + ')';
			attribute<Classifications/Bouwjaar> Bouwjaar       := ='union_data(., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Bouwjaar') + ')';
			attribute<ModelObjectKeyDomein>     ModelObjectKey := combine_data(ModelObjectKeyDomein, BebouwingsType, BouwJaar);
			
			container Gebied
			{
				attribute<float64> n      (..) := ='Union_Data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Gebied/n'     ) + ')';
				attribute<float64> MEAN_x (..) := ='Union_Data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Gebied/MEAN_x') + ')';
				attribute<float64> MEAN_y (..) := ='Union_Data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Gebied/MEAN_y') + ')';
				attribute<float64> SSD_xx (..) := ='Union_Data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Gebied/SSD_xx') + ')';
				attribute<float64> SSD_xy (..) := ='Union_Data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Gebied/SSD_xy') + ')';
				attribute<float64> SSD_yy (..) := ='Union_Data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Gebied/SSD_yy') + ')';
			}
			
			container Kapitaallasten := for_each_nedv(
				Classifications/Gebouw_Kapitaallasten/name,
				replace('union_data(.., ' + asItemList('bron/' + TypeDomein/name + '/BebouwingsObject/Kapitaallasten/@KL@') + ')', '@KL@', Classifications/Gebouw_Kapitaallasten/name),
				results,
				Eur_yr);
			
			container Criteria;
		}
	}
}