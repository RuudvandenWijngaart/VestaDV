//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template select_with_org_relGebouwOptieT
{
	// begin case parameters	
	unit<uint32> ActiefObject;
	unit<uint32> BO;
	// end case parameters
	
	// TODO: Wegsubstitueren
	attribute<Classifications/GebouwOptie>     GebouwOptie_rel       (ActiefObject) := ActiefObject/GebouwOptie_rel;
	attribute<bool>                            Criterium             (ActiefObject) := ActiefObject/Criterium;
	attribute<Classifications/IsolatieAmbitie> MinIsolatieAmbitie_rel(ActiefObject) := ActiefObject/MinIsolatieAmbitie_rel;
	attribute<Classifications/IsolatieAmbitie> MaxIsolatieAmbitie_rel(ActiefObject) := ActiefObject/MaxIsolatieAmbitie_rel;

	attribute<bool> KoudeGeschikt (ActiefObject) := Classifications/GebouwOptie/MetKoude[GebouwOptie_rel] ? (BO/Activatie/Producten/KDb[ActiefObject/BO_rel] || BO/Activatie/Producten/KDp[ActiefObject/BO_rel]) : true;
	
	attribute<bool> LabelGeschikt (ActiefObject) := 
	AND( MakeDefined(ActiefObject/SchilLabel_rel, Classifications/Schillabel/V/G) <= Classifications/GebouwOptie/Min_schillabel_rel[GebouwOptie_rel]
	,	OR(BO/Aansluitingen/GNet[ActiefObject/BO_rel] > 0[nrAsl], not(Classifications/GebouwOptie/GasNodig[GebouwOptie_rel]))
	)
	, Descr = "Voldoet de woning aan de isolatienorm voor deze gebouwoptie en is benodigde aansluiting aanwezig?";
	
	// TODO: check op dat Input van Installatie wel Aangesloten kan worden; Beinvloedt dit de activatie of alleen de invulling ?
	parameter<string> IPP_active_expr  := 'Classifications/GebouwOptie/Installatie_rel/@PN[GeschiktObject/GebouwOptie_rel]', ishidden = "True";
	parameter<string> IPP_active_cond  := IPP_active_expr+' != Classifications/Installatie/V/geen && BO/Activatie/Producten/@PN[GeschiktObject/BO_rel]', ishidden = "True"; 
	parameter<string> IPP_default_expr := 'BO/InstallatiePerProduct/@PN[GeschiktObject/BO_rel]', ishidden = "True";
		
	parameter<string> IPP_invest_cond := IPP_active_cond + '&& (BO/Activatie/Producten_EOL/@PN[GeschiktObject/BO_rel] || GeschiktObject/InstallatiePerProduct/@PN != BO/InstallatiePerProduct/@PN[BO_rel])', ishidden = "True"; // EOL of Veranderd ? 
		
	//===== Selectie van woningen die voldoen aan de minimale isolatiegraad voor de gebouwoptie in kwestie =====
	unit<uint32> GeschiktObject := select(LabelGeschikt && KoudeGeschikt && Criterium), ishidden = "True"
	{
		attribute<BO>                              BO_rel                 := select_data(GeschiktObject, ActiefObject/BO_rel);
		attribute<Classifications/SchilLabel>      SchilLabel_rel         := select_data(GeschiktObject, ActiefObject/SchilLabel_rel);
		attribute<Classifications/SchilLabel>      Energielabel_rel       := ../Energielabel_rel;
		attribute<Classifications/GebouwOptie>     GebouwOptie_rel        := select_data(GeschiktObject, ../GebouwOptie_rel);
		attribute<Classifications/IsolatieAmbitie> MinIsolatieAmbitie_rel := select_data(GeschiktObject, ../MinIsolatieAmbitie_rel);
		attribute<Classifications/IsolatieAmbitie> MaxIsolatieAmbitie_rel := select_data(GeschiktObject, ../MaxIsolatieAmbitie_rel);
		attribute<m2>                              Oppervlakte_i          := BO/Oppervlakte[BO_Rel];
		attribute<nrAsl>                           nrAansluitingen_i      := BO/nrAansluitingen[BO_Rel];
		attribute<Classifications/Woningtype>      WoningType_rel         := BO/WoningType_rel[BO_Rel];
		
		container AansluitCapaciteit
		{
			attribute<kW> RV (GeschiktObject) := select_data(GeschiktObject, ActiefObject/AansluitCapaciteit/RV);
			attribute<kW> TW (GeschiktObject) := select_data(GeschiktObject, ActiefObject/AansluitCapaciteit/TW);
			attribute<kW> KD (GeschiktObject) := select_data(GeschiktObject, ActiefObject/AansluitCapaciteit/KD);
		}

		container Bouwdelen := for_each_nedv(Classifications/Bouwdeel/name
			,	replace('BO/Bouwdelen/@BN[BO_rel]', '@BN', Classifications/Bouwdeel/name)
			,	GeschiktObject, m2
			)
		{
		container Isolatie := for_each_nedv(Classifications/Bouwdeel/name
			,	replace('select_data(GeschiktObject, ActiefObject/Bouwdelen/Isolatie/@BN)', '@BN', Classifications/Bouwdeel/name)
			,	GeschiktObject, Classifications/IsolatieNiveau
			);
		}
		container Functioneel := for_each_nedv(Classifications/FunctioneleVraag/name
			,	Classifications/FunctioneleVraag/name == 'VT' ? 'OverigeInstallaties/Ventilatie/Afweging/V_E' :
				Classifications/FunctioneleVraag/name == 'RV' ? 'select_data(GeschiktObject, ActiefObject/Functioneel/RV) - BO/Functioneel/Vrv_VT[BO_rel] + OverigeInstallaties/Ventilatie/Afweging/V_RV' :
				replace('select_data(GeschiktObject, ActiefObject/Functioneel/@BN)', '@BN', Classifications/FunctioneleVraag/name)
			,	GeschiktObject, GJ_yr
			);
		
		container InstallatiePerProduct := for_each_nedv(Classifications/Product/name
			, replace(IPP_active_cond+'?'+IPP_active_expr+':'+IPP_default_expr, '@PN', Classifications/Product/name)
			, GeschiktObject
			, Classifications/Installatie
		)
		{
			attribute<Classifications/AfgifteSysteem> AS (GeschiktObject) :=  max_elem(
				 BO/InstallatiePerProduct/AS[BO_rel]
				,Classifications/Performance/AfgifteSysteem_rel[Func2Meter/SPF/PerformancePerProduct/RVb]
				,Classifications/Performance/AfgifteSysteem_rel[Func2Meter/SPF/PerformancePerProduct/RVp]);

			attribute<Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes> VT (GeschiktObject) := OverigeInstallaties/ventilatie/Installatietype_rel;
			attribute<Invoer/Kengetallen/OverigeInstallaties/DK/Installatietypes> DK (GeschiktObject) := OverigeInstallaties/DK/Installatietype_def     ;
			attribute<Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes> KK (GeschiktObject) := OverigeInstallaties/koken/Installatietype_rel     ;
		}	
		
		// code copied form GebouwOptie maar nu per GeschiktObject vanwege rol specifieke activatie op voor welk een installatie vervanging is.
		unit<uint32> xProduct := combine(Classifications/Product, GeschiktObject)
		{
			attribute<Classifications/Product>      Product_rel     := nr_1;
			attribute<GeschiktObject> GeschiktObject_rel := nr_2;
			attribute<Classifications/GebouwOptie>  GebouwOptie_rel := GeschiktObject_rel->GebouwOptie_rel;
//			attribute<string>       label           := BO_rel->Label + ':'+Classifications/Product/name[Product_rel] + '.' + GebouwOptie/name[GebouwOptie_rel];
			attribute<Classifications/Installatie>  Installatie_rel := ='union_data(., '+AsItemList('GeschiktObject/GebouwOptie_rel->PerProduct/'+Classifications/Product/name)+')';
			attribute<bool>         IsActief        := ='union_data(.,'+AsItemList(replace(IPP_invest_cond, '@PN', Classifications/Product/name))+')'; 
				
			attribute<xInstallatie> xInstallatie_code := point(UInt32(xProduct/GeschiktObject_rel), UInt32(IsActief? xProduct/Installatie_rel : classifications/Installatie/V/geen), xInstallatie);
			attribute<uInstallatie> uInstallatie_rel := rlookup(xInstallatie_code, uInstallatie/Values);
			
			attribute<.> per_uInstallatie(uInstallatie) :=  uInstallatie/First_xProduct_rel;
			
			attribute<Eur_asl> Ki_asl := sum(VerbruiksOpties/Installatie/Ki_asl[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_m2 > Ki_opp := sum(VerbruiksOpties/Installatie/Ki_opp[uInstallatie/Installatie_rel], per_uInstallatie);

			attribute<Eur_yr_asl> Kj_Adm_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/R_Adm)[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_yr_asl> Kj_OH_asl  := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/R_OH )[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_yr_m2 > Kj_Adm_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/R_Adm)[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_yr_m2 > Kj_OH_opp  := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/R_OH )[uInstallatie/Installatie_rel], per_uInstallatie);

			attribute<Eur_asl> Ki30_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/AT30)[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_asl> Ki20_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/AT20)[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_asl> Ki15_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/AT15)[uInstallatie/Installatie_rel], per_uInstallatie);

			attribute<Eur_m2 > Ki30_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/AT30)[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_m2 > Ki20_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/AT20)[uInstallatie/Installatie_rel], per_uInstallatie);
			attribute<Eur_m2 > Ki15_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/AT15)[uInstallatie/Installatie_rel], per_uInstallatie);
		}

		unit<upoint> xInstallatie;
		unit<uint32> uInstallatie := unique(xProduct/xInstallatie_code) 
		{
			attribute<GeschiktObject>              GeschiktObject_rel := value(pointrow(values), GeschiktObject);
			attribute<Classifications/Installatie> Installatie_rel    := value(pointcol(values), Classifications/Installatie);
			attribute<xProduct>                    First_xProduct_rel := rlookup(values, xProduct/xInstallatie_code);
		}		
		
		attribute<Eur_asl> Ki_asl := sum(VerbruiksOpties/Installatie/Ki_asl[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_m2 > Ki_opp := sum(VerbruiksOpties/Installatie/Ki_opp[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);

		attribute<Eur_yr_asl> Kj_Adm_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/R_Adm)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_yr_asl> Kj_OH_asl  := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/R_OH )[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_yr_m2 > Kj_Adm_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/R_Adm)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_yr_m2 > Kj_OH_opp  := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/R_OH )[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);

		attribute<Eur_asl> Ki30_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/AT30)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_asl> Ki20_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/AT20)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_asl> Ki15_asl := sum((VerbruiksOpties/Installatie/Ki_asl * VerbruiksOpties/Installatie/AT15)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);

		attribute<Eur_m2 > Ki30_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/AT30)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_m2 > Ki20_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/AT20)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
		attribute<Eur_m2 > Ki15_opp := sum((VerbruiksOpties/Installatie/Ki_opp * VerbruiksOpties/Installatie/AT15)[uInstallatie/Installatie_rel], uInstallatie/GeschiktObject_rel);
	}
	
	//===== InstallatiePerProduct geeft per BebouwingsObject of per SchilLabel voor ieder Product de te kiezen of al aanwezige installatie =====
	
	container Func2Meter := CalculationSchemes/FunctioneelToMetervraag(GeschiktObject, true);
	
	// cap_prod geeft per BebouwingsObject of per SchilLabel voor ieder Product de benodigde capaciteit obv het vastgestelde profiel.
	
	unit<uint8>  VGO := VerbruiksOpties/GebouwOptie, ishidden = "True";
	unit<uint32> VGO_xProduct := VerbruiksOpties/GebouwOptie/xProduct, ishidden = "True";

	parameter<string> KX_cap_Expr :=
			'merge(uint8(GeschiktObject/xProduct/Product_rel)'
				', kW'
				', '+AsItemList('Func2Meter/eEffect/CapaciteitPerProduct/'+Classifications/Product/name+'[GeschiktObject/xProduct/GeschiktObject_rel]')+
			') * '
			'VerbruiksOpties/Installatie/K@X_cap[GeschiktObject/xProduct/Installatie_rel]', ishidden = "True";
		
	attribute<Eur   > Ki_cap     (GeschiktObject/xProduct) := =replace(KX_cap_Expr, '@X', 'i');
	attribute<Eur   > Ki30_cap   (GeschiktObject/xProduct) := =replace(KX_cap_Expr, '@X', 'i30');
	attribute<Eur   > Ki20_cap   (GeschiktObject/xProduct) := =replace(KX_cap_Expr, '@X', 'i20');
	attribute<Eur   > Ki15_cap   (GeschiktObject/xProduct) := =replace(KX_cap_Expr, '@X', 'i15');
	attribute<Eur_yr> Kj_OH_cap  (GeschiktObject/xProduct) := =replace(KX_cap_Expr, '@X', 'j_OH');
	attribute<Eur_yr> Kj_Adm_cap (GeschiktObject/xProduct) := =replace(KX_cap_Expr, '@X', 'j_Adm');

	attribute<Eur   > Ki_LTAS (GeschiktObject) := 
		(GeschiktObject/InstallatiePerProduct/AS >= Classifications/AfgifteSysteem/V/LTAS) && (BO/InstallatiePerProduct/AS[GeschiktObject/BO_rel] < Classifications/AfgifteSysteem/V/LTAS)
			? (BO/IsMeergezins[GeschiktObject/BO_rel]
				? BO/BCkentallen/Ki_LTAS_h_asl 
				: BO/BCkentallen/Ki_LTAS_l_asl) * BO/nrAansluitingen[GeschiktObject/BO_rel] // + BO/BCkentallen/Ki_LTAS_opp * BO/Oppervlakte[GeschiktObject/BO_rel]
			: const(0[Eur], GeschiktObject);
			
	// #TRELLO35 KiXX per product tbv per installatie varierende EIA
	// #TRELLO35 neem alleen vervanging mee; kapitaallasten vna installaties die er al staat (mits niet toe aan vervanging) weegt niet mee in afweging voor iets nieuws
	parameter<string> KX_expr :=
		'add('
			'GeschiktObject/xProduct/K@X_asl * BO/nrAansluitingen[GeschiktObject/xProduct/GeschiktObject_rel->BO_rel],  '
			'GeschiktObject/xProduct/K@X_opp * BO/Oppervlakte[GeschiktObject/xProduct/GeschiktObject_rel->BO_rel] , ' 
			'K@X_cap'
		+')';

	attribute<Eur   > Ki_LO       (GeschiktObject/xProduct) := =replace(KX_expr, '@X', 'i');
	attribute<Eur   > Ki30_LO     (GeschiktObject/xProduct) := =replace(KX_expr, '@X', 'i30');
	attribute<Eur   > Ki20_LO     (GeschiktObject/xProduct) := =replace(KX_expr, '@X', 'i20');
	attribute<Eur   > Ki15_LO     (GeschiktObject/xProduct) := =replace(KX_expr, '@X', 'i15');	
	
	container Jaarlijks := Kj_verbruik
	{	
		attribute<Eur_yr> Kj_OH_LO       (GeschiktObject/xProduct) := =replace(KX_expr, '@X', 'j_OH');
		attribute<Eur_yr> Kj_Adm_LO      (GeschiktObject/xProduct) := =replace(KX_expr, '@X', 'j_Adm');
		attribute<Eur_yr> Kj_Vastrecht_g (GeschiktObject) := VastRechtBijdrageG; // bijdrage en heffingskortingen voor E, MT en LT zijn voor alle GebouwOpties hetzelfde, dus niet relevant voor de afweging.
	}
	
	attribute<Eur>    Ki_gv       (GeschiktObject) := leerCurves/Isolatie/Curve * select_data(GeschiktObject, ActiefObject/Ki_GV );
	attribute<Eur_yr> Kji_gv      (GeschiktObject) := leerCurves/Isolatie/Curve * select_data(GeschiktObject, ActiefObject/Kji_GV);
	attribute<Eur_yr> Kmi_gv      (GeschiktObject) := leerCurves/Isolatie/Curve * select_data(GeschiktObject, ActiefObject/Kmi_GV);

	attribute<Eur>    Ki_totaal   (GeschiktObject) := sum(Ki_LO  , GeschiktObject/xProduct/GeschiktObject_rel)  + Ki_GV + Ki_LTAS;
	attribute<Eur>    Ki30_totaal (GeschiktObject) := sum(Ki30_LO, GeschiktObject/xProduct/GeschiktObject_rel) + Ki_GV + Ki_LTAS;
	attribute<Eur>    Ki20_totaal (GeschiktObject) := sum(Ki20_LO, GeschiktObject/xProduct/GeschiktObject_rel);
	attribute<Eur>    Ki15_totaal (GeschiktObject) := sum(Ki15_LO, GeschiktObject/xProduct/GeschiktObject_rel);
	
	container OverigeInstallaties
	{	
		parameter<bool>   Afweging_VT         := SpecifiekeInstellingen/InstallatieSet/InstallatieSetcriteria/Afweging_VT, IsHidden = "True";
		parameter<bool>   Afweging_DK         := SpecifiekeInstellingen/InstallatieSet/InstallatieSetcriteria/Afweging_DK, IsHidden = "True";
		parameter<bool>   Afweging_KK         := SpecifiekeInstellingen/InstallatieSet/InstallatieSetcriteria/Afweging_KK, IsHidden = "True";

		#include<Ventilatie.dms>
		#include<Dak.dms>
		#include<Koken.dms>
	}
	
	attribute<Eur> Ki_DK   (GeschiktObject) := OverigeInstallaties/DK/result/Ki_zonB + OverigeInstallaties/DK/result/Ki_zonPV;
	attribute<Eur> Ki_KK   (GeschiktObject) := OverigeInstallaties/Koken/Afweging/Ki_koken;
	attribute<Eur> Ki_VT   (GeschiktObject) := OverigeInstallaties/Ventilatie/Afweging/Ki_vent;
	attribute<Eur> Ki_Enet (GeschiktObject) :=  const(0.0[eur],Geschiktobject);
	attribute<Eur> Ki_Gnet (GeschiktObject) :=  BO/nrAansluitingen[GeschiktObject/BO_rel] *
												float64(Func2Meter/metervraag_per_input/Gas == 0.0[GJ_yr] && BO/Aansluitingen/GeenGasafsluiting[GeschiktObject/BO_rel] && Zichtjaar_jaar < 2021[yr_uint16]) *
												(Bo/IsMeergezins[GeschiktObject/BO_rel] ? Invoer/Kengetallen/infra/Afsluitkosten_gas_mgw : Invoer/Kengetallen/infra/Afsluitkosten_gas_egw);
	
	container metervraag := Func2Meter/result;
	
	container meterprijzen
	{
		attribute<Eur_GJ> Pj_e   (GeschiktObject) := Prijzen/Elektriciteit/Staffel/KGJ_eindgebruik_excl [classify(metervraag/e  , Prijzen/Elektriciteit/Staffel/ClassBreak)];
		attribute<Eur_GJ> Pj_gas (GeschiktObject) := Prijzen/AardGas/Staffel/KGJ_eindgebruik_excl       [classify(metervraag/gas, Prijzen/AardGas/Staffel/ClassBreak)];
		attribute<Eur_GJ> Pm_e   (GeschiktObject) := Prijzen/Elektriciteit/Staffel/KGJ_Maatschappelijk  [classify(metervraag/e  , Prijzen/Elektriciteit/Staffel/ClassBreak)];
		attribute<Eur_GJ> Pm_gas (GeschiktObject) := Prijzen/AardGas/Staffel/KGJ_Maatschappelijk        [classify(metervraag/gas, Prijzen/AardGas/Staffel/ClassBreak)];

		parameter<Eur_GJ> Pj_biomassa := Prijzen/Overig/Pj_biomassa;
		parameter<Eur_GJ> Pj_olie     := Prijzen/Overig/Pj_olie;
		parameter<Eur_GJ> Pj_olie_EH  := Prijzen/Overig/Pj_olie_EH;
		parameter<Eur_GJ> Pj_pellets  := Prijzen/Overig/Pj_pellets;
		parameter<Eur_GJ> Pj_H2       := Prijzen/Overig/Pj_H2;

		parameter<Eur_GJ> Pm_biomassa := Pj_biomassa;
		parameter<Eur_GJ> Pm_olie     := Pj_olie;
		parameter<Eur_GJ> Pm_pellets  := Pj_pellets;
		parameter<Eur_GJ> Pm_H2       := Pj_H2;

		attribute<Eur_GJ> Pj_Warmte_30  (GeschiktObject) := Pj_Warmte_70;
		attribute<Eur_GJ> Pj_Warmte_50  (GeschiktObject) := Pj_Warmte_70;
		attribute<Eur_GJ> Pj_Warmte_70  (GeschiktObject) := Pj_gas;
		attribute<Eur_GJ> Pj_Koude      (GeschiktObject) := const(0.0[Eur_GJ],Geschiktobject);

		attribute<Eur_GJ> Pm_Warmte_30  (GeschiktObject) := Pj_Warmte_30;
		attribute<Eur_GJ> Pm_Warmte_50  (GeschiktObject) := Pj_Warmte_50;
		attribute<Eur_GJ> Pm_Warmte_70  (GeschiktObject) := Pj_Warmte_70;
		attribute<Eur_GJ> Pm_Koude      (GeschiktObject) := Pj_Koude;

	}

	container Kj_verbruik := for_each_nedv(
		'Kj_' + Classifications/BemeterdeGebouwInput/name,
		replace('meterprijzen/Pj_@E@ * metervraag/@E@', '@E@', Classifications/BemeterdeGebouwInput/name),
		GeschiktObject,
		Eur_yr)
		{
			attribute<Eur_yr> Totaal     (GeschiktObject) := ='add('+AsItemList('Kj_'+Classifications/BemeterdeGebouwInput/name)+', Kj_olie_eh)';
			attribute<Eur_yr> Kj_elek    (GeschiktObject) := Kj_e;
			attribute<Eur_yr> Kj_olie_eh (GeschiktObject) := meterprijzen/Pj_olie_eh * metervraag/olie;
		}
	container Km_verbruik := for_each_nedv(
		Classifications/BemeterdeGebouwInput/name,
		replace('meterprijzen/Pm_@E@ * metervraag/@E@', '@E@', Classifications/BemeterdeGebouwInput/name),
		GeschiktObject,
		Eur_yr)
		{
			attribute<Eur_yr> Totaal (GeschiktObject) := ='add('+AsItemList(Classifications/BemeterdeGebouwInput/name)+')';
		}

	attribute<Eur_yr> VastRechtBijdrageG (GeschiktObject) := BO/nrAansluitingen[GeschiktObject/BO_rel] * float64(metervraag/gas != 0[GJ_yr])* prijzen/aardgas/VastRecht, Descr = "VastRechtBijdrage voor aansluiting op het gasnet";
	

	attribute<Eur_yr> Kji_LTAS     (GeschiktObject)            := Ki_LTAS * NcwRefs/AF_30[GeschiktObject/BO_rel];
	attribute<Eur_yr> Kji_Asl_Gnet (GeschiktObject)            := Ki_Gnet * NcwRefs/AF_50[GeschiktObject/BO_rel];
	attribute<Eur_yr> Kji_Asl_Enet (GeschiktObject)            := Ki_Enet * NcwRefs/AF_50[GeschiktObject/BO_rel];
	attribute<Eur_yr> Kji30_LO (GeschiktObject/xProduct)       := Ki30_LO * NcwRefs/AF_30[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]];
	attribute<Eur_yr> Kji20_LO (GeschiktObject/xProduct)       := Ki20_LO * NcwRefs/AF_20[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]];
	attribute<Eur_yr> Kji_DK   (GeschiktObject)                := OverigeInstallaties/DK/result/Kji_zonB + OverigeInstallaties/DK/result/Kji_zonPV;
	attribute<Eur_yr> Kji_KK   (GeschiktObject)                := Ki_KK   * NcwRefs/AF_15[GeschiktObject/BO_rel];
	attribute<Eur_yr> Kji_VT   (GeschiktObject)                := OverigeInstallaties/Ventilatie/Afweging/Kji_VT;
	attribute<Eur_yr> Kji15_LO (GeschiktObject/xProduct)       := Ki15_LO * NcwRefs/AF_15[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]];
	attribute<Eur_yr> Kji_LO   (GeschiktObject/xProduct)       := Kji30_LO + Kji20_LO + Kji15_LO;

	attribute<Eur_yr> Kmi_LTAS (GeschiktObject)                := Ki_LTAS * NCW/mr30/AnnualisationFactor;
	attribute<Eur_yr> Kmi_Asl_Gnet (GeschiktObject)            := Ki_Gnet * NCW/mr50/AnnualisationFactor;
	attribute<Eur_yr> Kmi_Asl_Enet (GeschiktObject)            := Ki_Enet * NCW/mr50/AnnualisationFactor;
	attribute<Eur_yr> Kmi30_LO (GeschiktObject/xProduct)       := Ki30_LO * NCW/mr30/AnnualisationFactor;
	attribute<Eur_yr> Kmi20_LO (GeschiktObject/xProduct)       := Ki20_LO * NCW/mr20/AnnualisationFactor;
	attribute<Eur_yr> Kmi_DK   (GeschiktObject)                := OverigeInstallaties/DK/result/Kmi_zonB + OverigeInstallaties/DK/result/Kmi_zonPV;
	attribute<Eur_yr> Kmi_KK   (GeschiktObject)                := Ki_KK   * NCW/mr15/AnnualisationFactor;
	attribute<Eur_yr> Kmi_VT   (GeschiktObject)                := OverigeInstallaties/Ventilatie/Afweging/Kmi_VT;
	attribute<Eur_yr> Kmi15_LO (GeschiktObject/xProduct)       := Ki15_LO * NCW/mr15/AnnualisationFactor;
	attribute<Eur_yr> Kmi_LO   (GeschiktObject/xProduct)       := Kmi30_LO + Kmi20_LO + Kmi15_LO;

	unit<uint32> ZBS := ZichtjaarBeleid/subsidie, ishidden = "True";
	container SubsidieBerekening := for_each_ne(ZBS/name, 'ImplSubs(ZBS/V/'+ZBS/name+')');
	template ImplSubs : ishidden = "True"
	{
		//case parameters
		parameter<ZBS> ZBS_rel;
		//end case parameters

		parameter<ratio>   Aandeel        := makedefined(ZBS/Subsidieaandeel[ZBS_rel],0.0[ratio]) , ishidden = "True";
		parameter<eur_asl> Bedrag         := makedefined(ZBS/Subsidiebedrag[ZBS_rel],0.0[eur_asl]), ishidden = "True";
		parameter<eur_m2>  PerOpp         := makedefined(ZBS/SubsidiePerOpp[ZBS_rel],0.0[eur_m2]) , ishidden = "True";
		parameter<float64> MinMaatregelen := ZBS/Voorwaarde/MinMaatregelen[ZBS_rel], ishidden = "True";
		parameter<float64> MaxMaatregelen := ZBS/Voorwaarde/MaxMaatregelen[ZBS_rel], ishidden = "True";
		parameter<float64> nrLabelStappen := ZBS/Voorwaarde/nrLabelStappen[ZBS_rel], ishidden = "True";

		attribute<bool>    InDoelgroep    (GeschiktObject) := ='OR('+AsItemList(replace('ZBS/doelgroep/@ED[ZBS_rel] && BO/Eigendom_rel[geschiktobject/BO_rel] == Classifications/Eigendom/V/@ED','@ED',Classifications/Eigendom/label))+')', ishidden = "True";
		attribute<eur>     MaxBedrag      (GeschiktObject) := BO/nrAansluitingen[GeschiktObject/BO_rel] * ZBS/Voorwaarde/MaxBedrag_asl[ZBS_rel], ishidden = "True";
		attribute<float64> LabelStappenNu (GeschiktObject) := float64(sub_or_null(Bo/Energielabel_rel[GeschiktObject/BO_rel], energielabelberekening/Energielabel_rel));
		attribute<bool>    nrStappenOk    (GeschiktObject) := nrLabelStappen == 0.0[float64] || LabelStappenNu == nrLabelStappen;

		//====== Bepaling subsidiebedragen
		attribute<ratio>   Rs          (GeschiktObject/xProduct) := ='Aandeel * float64(OR('+AsItemList(replace('ZBS/Maatregel/installatie/@IN[ZBS_rel] && GeschiktObject/xProduct/Installatie_rel == Classifications/Installatie/V/@IN','@IN',Classifications/Installatie/label))+'))', ishidden = "True";
		attribute<eur>     Oi          (GeschiktObject/xProduct) := ='BO/nrAansluitingen[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]] * Bedrag * float64(OR('+AsItemList(replace('ZBS/Maatregel/installatie/@IN[ZBS_rel] && GeschiktObject/xProduct/Installatie_rel == Classifications/Installatie/V/@IN','@IN',Classifications/Installatie/label))+'))', ishidden = "True";	
		attribute<Eur>     Oi30_LO_i   (GeschiktObject/xProduct) := Ki30_LO * Rs + (Ki30_LO == max_elem(Ki30_LO,Ki20_LO,Ki15_LO) ? Oi : 0.0[eur]), ishidden = "True";
		attribute<Eur>     Oi20_LO_i   (GeschiktObject/xProduct) := Ki20_LO * Rs + (Ki20_LO == max_elem(Ki30_LO,Ki20_LO,Ki15_LO) ? Oi : 0.0[eur]), ishidden = "True";
		attribute<Eur>     Oi15_LO_i   (GeschiktObject/xProduct) := Ki15_LO * Rs + (Ki15_LO == max_elem(Ki30_LO,Ki20_LO,Ki15_LO) ? Oi : 0.0[eur]), ishidden = "True";
		attribute<Eur>     Oi_Gnet_i   (GeschiktObject)          := float64(ZBS/Maatregel/Infra/Gasafsluiting[ZBS_rel]) * (BO/nrAansluitingen[GeschiktObject/BO_rel] * Bedrag + Ki_Gnet * Aandeel), ishidden = "True";
		attribute<Eur>     Oi_LTAS_i   (GeschiktObject)          := float64(ZBS/Maatregel/Installatie/LTAS[ZBS_rel])    * (BO/nrAansluitingen[GeschiktObject/BO_rel] * Bedrag + Ki_LTAS * Aandeel), ishidden = "True";
		attribute<Eur>     Oi_GV_i     (GeschiktObject)          := float64(ZBS/Maatregel/Isolatie/Alle[ZBS_rel])       * (BO/nrAansluitingen[GeschiktObject/BO_rel] * Bedrag + Ki_gv * Aandeel) + Oi_gv_bouwdeel/totaal, ishidden = "True";
		attribute<Eur>     Oi_ZonPV_i  (GeschiktObject)          := float64(ZBS/Maatregel/Installatie/ZonPV[ZBS_rel])   * (BO/nrAansluitingen[GeschiktObject/BO_rel] * Bedrag + OverigeInstallaties/DK/result/Ki_zonPV  * Aandeel), ishidden = "True";
		attribute<Eur>     Oi_ZonB_i   (GeschiktObject)          := float64(ZBS/Maatregel/Installatie/ZonB[ZBS_rel])    * (BO/nrAansluitingen[GeschiktObject/BO_rel] * Bedrag + OverigeInstallaties/DK/result/Ki_zonB    * Aandeel), ishidden = "True";

		container BouwdeelMaatregelen := for_each_nedv(
  			  Classifications/Bouwdeel/name
			, 'combine_data(Classifications/BouwdeelIsolatie'
							', Classifications/Bouwdeel/V/'+Classifications/Bouwdeel/name+''
							', GeschiktObject/Bouwdelen/Isolatie/'+Classifications/Bouwdeel/name+''
							')'
			, GeschiktObject
			, Classifications/BouwdeelIsolatie
			), ishidden = "True";

		container IsolatieMaatregel := for_each_nedv(
			  Classifications/Bouwdeel/name
		, 'rlookup(classifications/BouwdeelIsolatie/name[BouwdeelMaatregelen/'+Classifications/Bouwdeel/name+'] , Classifications/IsolatieMaatregel/name)'
			, GeschiktObject
			, Classifications/IsolatieMaatregel
			), ishidden = "True";

		container Oi_gv_bouwdeel := for_each_nedv(
				classifications/Bouwdeel/name,
				replace(
					'((makedefined(GeschiktObject/Bouwdelen/@BD'
					'*  Classifications/IsolatieMaatregel/xUitvoering/kosten['
							'combine_data(Classifications/IsolatieMaatregel/xUitvoering'
							', IsolatieMaatregel/@BD'
							', BO/Activatie/Uitvoering[GeschiktObject/BO_Rel]'
							')'
						']'
					', 0.0[Eur]) * Aandeel + Bedrag * BO/nrAansluitingen[GeschiktObject/BO_rel]) + PerOpp * GeschiktObject/Bouwdelen/@BD)'+
					'* float64(OR('+AsItemList(replace('ZBS/Maatregel/Isolatie/@BM[ZBS_rel] && IsolatieMaatregel/@BD == Classifications/IsolatieMaatregel/V/@BM','@BM',Classifications/IsolatieMaatregel/name))+')) '+
					'* float64(GeschiktObject/Bouwdelen/Isolatie/@BD != BO/Bouwdelen/Isolatie/@BD[GeschiktObject/BO_rel])'
				,	'@BD', classifications/Bouwdeel/name),
				GeschiktObject, Eur), ishidden = "True"
		{
			attribute<eur> Totaal (GeschiktObject) := ='add('+AsItemList(Classifications/Bouwdeel/name)+')';
		}

		//===== check aantal maatregelen
		attribute<float64> nrMaatregelen     (GeschiktObject)          := ='add('+AsItemList(replace('float64(GeschiktObject/Bouwdelen/Isolatie/@BD != BO/Bouwdelen/Isolatie/@BD[GeschiktObject/BO_rel])','@BD',Classifications/Bouwdeel/name))+')';
		attribute<bool>    nrMaatregelen_ok  (GeschiktObject)          := nrMaatregelen >= MinMaatregelen && nrMaatregelen <= MaxMaatregelen;
		attribute<bool>    Naleving          (GeschiktObject)          := first(rnd_uniform(JaarSeed * 103u, GeschiktObject, range(float64, 0d, 1d)), Geschiktobject/BO_rel)[Geschiktobject/BO_rel] <= ZBS/Naleving[ZBS_rel];
		attribute<bool>    Geldig            (GeschiktObject)          := InDoelgroep && nrMaatregelen_ok && nrStappenOk && Naleving;
		attribute<bool>    Geldig_xPrd       (GeschiktObject/xProduct) := Geldig[GeschiktObject/xProduct/GeschiktObject_rel];

		//===== correctie voor maximumbedrag en indien niet genoeg maatregelen = nul
		attribute<ratio>   Korting     (GeschiktObject)          := =ZBS/Voorwaarde/MaxBedrag_asl[ZBS_rel] > 0.0[eur_asl] ? 'max_elem(((Oi_GV_i + Oi_ZonPV_i + Oi_ZonB_i + sum(Oi30_LO_i + Oi20_LO_i + Oi15_LO_i, GeschiktObject/xProduct/GeschiktObject_rel)) / MaxBedrag)[ratio],1.0[ratio])' : 'const(1.0[ratio],GeschiktObject)', ishidden = "True";
		attribute<Eur>     Oi30_LO     (GeschiktObject/xProduct) := float64(Geldig_xPrd) * Oi30_LO_i / Korting[GeschiktObject/xProduct/GeschiktObject_rel];
		attribute<Eur>     Oi20_LO     (GeschiktObject/xProduct) := float64(Geldig_xPrd) * Oi20_LO_i / Korting[GeschiktObject/xProduct/GeschiktObject_rel];
		attribute<Eur>     Oi15_LO     (GeschiktObject/xProduct) := float64(Geldig_xPrd) * Oi15_LO_i / Korting[GeschiktObject/xProduct/GeschiktObject_rel];
		attribute<Eur>     Oi_GV       (GeschiktObject)          := float64(Geldig) * Oi_GV_i   / Korting;
		attribute<Eur>     Oi_DK       (GeschiktObject)          := float64(Geldig) * (Oi_ZonB_i + Oi_ZonPV_i) / Korting;
		attribute<Eur>     Oi_Gnet     (GeschiktObject)          := float64(Geldig) * Oi_Gnet_i / Korting;
		attribute<Eur>     Oi_LTAS     (GeschiktObject)          := float64(Geldig) * Oi_LTAS_i / Korting;
		attribute<Eur>     Oi_KK       (GeschiktObject)          := const(0.0[eur], GeschiktObject);
		attribute<Eur>     Oi_VT       (GeschiktObject)          := const(0.0[eur], GeschiktObject);
		attribute<Eur>     Oi_enet     (GeschiktObject)          := const(0.0[eur], GeschiktObject);

		attribute<Eur>     Totaal      (GeschiktObject)          := add(Oi_LTAS, Oi_Gnet, Oi_Enet, Oi_DK, Oi_KK, Oi_VT, Oi_GV, sum(add(Oi30_LO, Oi20_LO, Oi15_LO),  GeschiktObject/xProduct/GeschiktObject_rel));
		
	}

	//====== Optellen alle subsidies over alle beleidsinstrumenten
	attribute<Eur>    Oi30_LO  (GeschiktObject/xProduct) := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi30_LO')+')' : 'const(0.0[Eur],GeschiktObject/xProduct)';
	attribute<Eur>    Oi20_LO  (GeschiktObject/xProduct) := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi20_LO')+')' : 'const(0.0[Eur],GeschiktObject/xProduct)';
	attribute<Eur>    Oi15_LO  (GeschiktObject/xProduct) := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi15_LO')+')' : 'const(0.0[Eur],GeschiktObject/xProduct)';
	attribute<Eur>    Oi_DK    (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_DK')+')'   : 'const(0.0[Eur],GeschiktObject)';
	attribute<Eur>    Oi_KK    (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_KK')+')'   : 'const(0.0[Eur],GeschiktObject)';
	attribute<Eur>    Oi_VT    (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_VT')+')'   : 'const(0.0[Eur],GeschiktObject)';
	attribute<Eur>    Oi_GV    (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_GV')+')'   : 'const(0.0[Eur],GeschiktObject)';
	attribute<Eur>    Oi_Gnet  (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_Gnet')+')' : 'const(0.0[Eur],GeschiktObject)';
	attribute<Eur>    Oi_Enet  (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_Enet')+')' : 'const(0.0[Eur],GeschiktObject)';
	attribute<Eur>    Oi_LTAS  (GeschiktObject)          := = count(ZBS/subsidiebedrag) > 0u ? 'add('+AsItemList('Subsidieberekening/'+ZBS/name+'/Oi_LTAS')+')' : 'const(0.0[Eur],GeschiktObject)';
	
	//====== Annualiseren subsidies tot jaarlijkse opbrengsten
	attribute<Eur_yr> Oji30_LO (GeschiktObject/xProduct) := Oi30_LO * NcwRefs/AF_30[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]];
	attribute<Eur_yr> Oji20_LO (GeschiktObject/xProduct) := Oi20_LO * NcwRefs/AF_20[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]];
	attribute<Eur_yr> Oji15_LO (GeschiktObject/xProduct) := Oi15_LO * NcwRefs/AF_15[GeschiktObject/BO_rel[GeschiktObject/xProduct/GeschiktObject_rel]];
	attribute<Eur_yr> Oji_DK   (GeschiktObject)          := Oi_DK   * NcwRefs/AF_20[GeschiktObject/BO_rel];
	attribute<Eur_yr> Oji_KK   (GeschiktObject)          := Oi_KK   * NcwRefs/AF_15[GeschiktObject/BO_rel];
	attribute<Eur_yr> Oji_VT   (GeschiktObject)          := Oi_VT   * NcwRefs/AF_15[GeschiktObject/BO_rel];
	attribute<Eur_yr> Oji_GV   (GeschiktObject)          := Oi_GV   * NcwRefs/AF_30[GeschiktObject/BO_rel];
	attribute<Eur_yr> Oji_Gnet (GeschiktObject)          := Oi_Gnet * NcwRefs/AF_50[GeschiktObject/BO_rel];
	attribute<Eur_yr> Oji_Enet (GeschiktObject)          := Oi_Enet * NcwRefs/AF_50[GeschiktObject/BO_rel];
	attribute<Eur_yr> Oji_LTAS (GeschiktObject)          := Oi_LTAS * NcwRefs/AF_30[GeschiktObject/BO_rel];

	attribute<ratio>   SplitIncentiveVerbruik  (GeschiktObject) :=
		  BO/Eigendom_rel[GeschiktObject/BO_rel] == Classifications/Eigendom/V/PartHuur ? SpecifiekeInstellingen/Beleid/SplitIncentive/SplitIncentiveVerbruik_PH
		: BO/Eigendom_rel[GeschiktObject/BO_rel] == Classifications/Eigendom/V/WoonCorp ? SpecifiekeInstellingen/Beleid/SplitIncentive/SplitIncentiveVerbruik_WC
		: 1.0[ratio];
	attribute<ratio>   SplitIncentiveVastrecht (GeschiktObject) :=
		  BO/Eigendom_rel[GeschiktObject/BO_rel] == Classifications/Eigendom/V/PartHuur ? SpecifiekeInstellingen/Beleid/SplitIncentive/SplitIncentiveVastrecht_PH
		: BO/Eigendom_rel[GeschiktObject/BO_rel] == Classifications/Eigendom/V/WoonCorp ? SpecifiekeInstellingen/Beleid/SplitIncentive/SplitIncentiveVastrecht_WC
		: 1.0[ratio];	
	
	attribute<Eur_yr> Kj_gv_incentive (GeschiktObject) := 
		  Kj_verbruik/totaal       * SplitIncentiveVerbruik
		+ jaarlijks/Kj_vastrecht_g * SplitIncentiveVastrecht;

	attribute<Eur_yr> kosten_j (GeschiktObject) :=
		  (Kji_GV - Oji_GV)      * BTW_Factor_gv
		+ sum(Kji_LO - (Oji30_LO+Oji20_LO+Oji15_LO), GeschiktObject/xProduct/GeschiktObject_rel) * BTW_Factor
		+ (Kji_Asl_Gnet - Oji_Gnet)  * BTW_Factor
		+ (Kji_Asl_Enet - Oji_Enet)  * BTW_Factor
		+ (Kji_LTAS - Oji_LTAS)  * BTW_Factor
		+ (Kji_DK - Oji_DK)      * BTW_Factor
		+ (Kji_KK - Oji_KK)      * BTW_Factor
		+ (Kji_VT - Oji_VT)      * BTW_Factor
		+ sum(jaarlijks/Kj_OH_LO + jaarlijks/Kj_Adm_LO, GeschiktObject/xProduct/GeschiktObject_rel) * BTW_Factor
		+ Kj_gv_incentive        * BTW_Factor_energie
		;

	attribute<Eur_yr> kosten_m(GeschiktObject) := 
		  Kmi_GV
		+ sum(Kmi_LO, GeschiktObject/xProduct/GeschiktObject_rel)
		+ Kmi_DK
		+ Kmi_KK
		+ Kmi_VT
		+ Kmi_LTAS
		+ sum(jaarlijks/Kj_OH_LO + jaarlijks/Kj_Adm_LO, GeschiktObject/xProduct/GeschiktObject_rel)
		+ Km_verbruik/totaal;
		
	attribute<Eur_yr> kosten (GeschiktObject) := =(LocatieSpecifiekeOpties/GebouwOpties/KiesMaatschappelijk) ? 'kosten_m' : 'kosten_j';

	//====== Verwerken normering op energielabel
	container LabelNormen
	{
		unit<uint32> BBN := ZichtjaarBeleid/BestaandeBouwNorm, ishidden = "True";
		parameter<bool> GeenNormen := sum(BBN/naleving) <= 0.0[ratio];
		container Normen := for_each_ne(BBN/name, 'ImplSubs(BBN/V/'+BBN/name+')');
		template ImplSubs : ishidden = "True"
		{
			//case parameters
			parameter<BBN> BBN_rel;
			//end case parameters

			attribute<bool> Naleving       (GeschiktObject) := first(rnd_uniform(JaarSeed * 106u, GeschiktObject, range(float64, 0d, 1d)), GeschiktObject/BO_rel)[GeschiktObject/BO_rel] <= BBN/Naleving[BBN_rel];
			attribute<bool> InDoelgroepED  (GeschiktObject) := ='OR('+AsItemList(replace('BBN/doelgroep/@ED[BBN_rel] && BO/Eigendom_rel[geschiktobject/BO_rel] == Classifications/Eigendom/V/@ED','@ED',Classifications/Eigendom/label))+')', ishidden = "True";
			attribute<bool> InDoelgroepWT  (GeschiktObject) := BBN/doelgroep/EGW[BBN_rel] && BO/IsMeergezins[GeschiktObject/BO_rel] || BBN/doelgroep/MGW[BBN_rel] && not(BO/IsMeergezins[GeschiktObject/BO_rel]);
			attribute<bool> BouwjaarVoldaan(GeschiktObject) := BO/Bouwjaar[GeschiktObject/BO_rel] >= MakeDefined(BBN/Voorwaarde/MinBouwjaar[BBN_rel], 0w) && BO/Bouwjaar[GeschiktObject/BO_rel] < MakeDefined(BBN/Voorwaarde/MaxBouwjaar[BBN_rel], 9999w);
			attribute<bool> Geldig         (GeschiktObject) := Naleving && InDoelgroepED && InDoelgroepWT && BouwjaarVoldaan;

			attribute<Classifications/SchilLabel> LabelNorm (GeschiktObject) := not(Geldig) ? Classifications/Schillabel/V/N : BBN/LabelNorm/Min_label[BBN_rel];
		}
		attribute<Classifications/SchilLabel> Norm (GeschiktObject) := ='makedefined(min_elem('+AsItemList('Normen/'+BBN/name+'/LabelNorm')+'), Classifications/Schillabel/V/N)';
	}
	
	attribute<bool> LabelNormOK (GeschiktObject) := =LabelNormen/GeenNormen ? 'const(true,GeschiktObject)' : 'Energielabel_rel <= LabelNormen/Norm';
	//======

	attribute<Eur_yr> kosten_or_undefined (GeschiktObject) := select_data(GeschiktObject, Criterium) && LabelNormOK && not(Verboden) ? kosten : (0/0)[Eur_yr];

	container energielabelberekening := CalculationSchemes/NTA8800(GeschiktObject);
	attribute<Classifications/Schillabel> Energielabel_rel     (GeschiktObject) := energielabelberekening/Energielabel_rel;


	unit<uint32> ZBV := ZichtjaarBeleid/Verbod, ishidden = "True";
	container VerbodBerekening := for_each_ne(ZBV/name, 'ImplVerbod(ZBV/V/'+ZBV/name+')');
	template ImplVerbod : ishidden = "True"
	{
		//case parameters
		parameter<ZBV> ZBV_rel;
		//end case parameters

		container Naleving
		{
			parameter<ratio> AandeelNaleving := ZBV/Naleving[ZBV_rel];
			attribute<bool>  PerObject (Geschiktobject) := rnd_uniform(JaarSeed * 173u, Geschiktobject, range(float64, 0d, 1d)) <= AandeelNaleving;

		}
		container LabelVoorwaarde := for_each_nedv(Classifications/Schillabel/name , 'ZBV/Voorwaarde/HuidigLabel/'+Classifications/SchilLabel/name+'[ZBV_rel]', void, bool)
		{
			attribute<bool> Voldaan (GeschiktObject) := ='merge(uint8(BO/Energielabel_rel[GeschiktObject/BO_rel]), bool, '+AsItemList(Classifications/Schillabel/name)+')';
		}
		container Installatie := for_each_nedv(Classifications/Installatie/label , 'ZBV/grondslag/'+Classifications/Installatie/label+'[ZBV_rel]', void, bool)
		{
			container CheckPerProduct := for_each_nedv(
				  Classifications/Product/name
				, replace(
						'merge(uint8(GeschiktObject/InstallatiePerProduct/@PROD@), bool, '+AsItemList(Classifications/Installatie/label)+') && BO/Activatie/Producten/@PROD@[GeschiktObject/BO_rel]'
					, '@PROD@', Classifications/Product/name)
				, GeschiktObject
				, bool);

			attribute<bool> InOptie (GeschiktObject) := ='or('+AsItemList('CheckPerProduct/'+Classifications/Product/name)+')';
		}

		attribute<bool> InDoelgroepED (GeschiktObject) := ='OR('+AsItemList(replace('ZBV/doelgroep/@ED[ZBV_rel] && BO/Eigendom_rel[geschiktobject/BO_rel] == Classifications/Eigendom/V/@ED','@ED',Classifications/Eigendom/label))+')', ishidden = "True";
//		attribute<bool> InDoelgroepWT (GeschiktObject) := ZBV/doelgroep/EGW[ZBV_rel] && BO/IsMeergezins[GeschiktObject/BO_rel] || ZBV/doelgroep/MGW[ZBV_rel] && not(BO/IsMeergezins[GeschiktObject/BO_rel]);

		attribute<bool> GeldigVerbod  (GeschiktObject) := LabelVoorwaarde/Voldaan && InDoelgroepED; // && InDoelgroepWT;
		attribute<bool> OptieVerboden (GeschiktObject) := GeldigVerbod && Naleving/PerObject && Installatie/InOptie;
	}
	attribute<bool> Verboden (GeschiktObject) := =count(ZBV/naleving) > 0u ? 'or('+AsItemList('VerbodBerekening/'+ZBV/name+'/OptieVerboden')+')' : 'const(false,GeschiktObject)';

	unit<uint32> results := GeschiktObject 
	{
		attribute<Float64> P50P                (GeschiktObject) := Classifications/Scurve_gebouwoptie/p50p_f[combine_data(Classifications/Scurve_gebouwoptie, BO/Eigendom_rel[GeschikteOptie/BO_rel], GeschikteOptie/GebouwOptie_rel)];
		attribute<Eur_yr>  kosten_tbv_afweging (GeschiktObject) := kosten_or_undefined * P50P; 
		
		container BemeterdeGebouwInput_rel := Func2Meter/BemeterdeGebouwInput_rel;

		container kapitaallasten := for_each_nedv(
			Classifications/Gebouw_Kapitaallasten/name,
			strcount(lowercase(Classifications/Gebouw_Kapitaallasten/name), 'wnet') > 0u ? 'const(0.0[eur_yr], GeschiktObject)'  : 
			strcount(lowercase(Classifications/Gebouw_Kapitaallasten/name), '_lo')  > 0u ? 'sum(.../' + Classifications/Gebouw_Kapitaallasten/name + ', xProduct/GeschiktObject_rel)'  :
			'.../' + Classifications/Gebouw_Kapitaallasten/name,
			GeschiktObject,
			Eur_yr );
		
		container eenmalig
		{
			attribute<Eur> Ki30_LO (GeschiktObject) := sum(.../Ki30_LO, xProduct/GeschiktObject_rel);
			attribute<Eur> Ki20_LO (GeschiktObject) := sum(.../Ki20_LO, xProduct/GeschiktObject_rel);
			attribute<Eur> Ki15_LO (GeschiktObject) := sum(.../Ki15_LO, xProduct/GeschiktObject_rel);
			attribute<Eur> Ki_gv   (GeschiktObject) := .../Ki_gv;
			attribute<Eur> Ki_LTAS (GeschiktObject) := .../Ki_LTAS;
			attribute<Eur> Ki_gnet (GeschiktObject) := .../Ki_Gnet;
			attribute<Eur> Ki_DK   (GeschiktObject) := .../Ki_DK;
			attribute<Eur> Ki_VT   (GeschiktObject) := .../Ki_VT;
			attribute<Eur> Ki_KK   (GeschiktObject) := .../Ki_KK;
			attribute<Eur> Oi_GV   (GeschiktObject) := .../Oi_GV;
			attribute<Eur> Oi30_LO (GeschiktObject) := sum(.../Oi30_LO, xProduct/GeschiktObject_rel);
			attribute<Eur> Oi20_LO (GeschiktObject) := sum(.../Oi20_LO, xProduct/GeschiktObject_rel);
			attribute<Eur> Oi15_LO (GeschiktObject) := sum(.../Oi15_LO, xProduct/GeschiktObject_rel);
			attribute<Eur> Oi_DK   (GeschiktObject) := .../Oi_DK;
			attribute<Eur> Oi_KK   (GeschiktObject) := .../Oi_KK;
			attribute<Eur> Oi_VT   (GeschiktObject) := .../Oi_VT;
			attribute<Eur> Oi_LTAS (GeschiktObject) := .../Oi_LTAS;
			attribute<Eur> Oi_Gnet (GeschiktObject) := .../Oi_Gnet;
		}
		container jaarlijks
		{
			attribute<Eur_yr> Kj_elek        (GeschiktObject) := .../jaarlijks/Kj_elek;
			attribute<Eur_yr> Kji_gv         (GeschiktObject) := .../Kji_gv;
			attribute<Eur_yr> Kmi_gv         (GeschiktObject) := .../Kmi_gv;
			attribute<Eur_yr> Kj_oh_LO       (GeschiktObject) := sum(.../jaarlijks/Kj_oh_LO, xProduct/GeschiktObject_rel);
			attribute<Eur_yr> Kj_adm_LO      (GeschiktObject) := sum(.../jaarlijks/Kj_adm_LO, xProduct/GeschiktObject_rel);
			attribute<Eur_yr> Kj_gas         (GeschiktObject) := .../jaarlijks/Kj_gas;
			attribute<Eur_yr> Kj_biomassa    (GeschiktObject) := .../jaarlijks/Kj_biomassa;
			attribute<Eur_yr> Kj_olie        (GeschiktObject) := .../jaarlijks/Kj_olie;
			attribute<Eur_yr> Kj_olie_eh     (GeschiktObject) := .../jaarlijks/Kj_olie_eh;
			attribute<Eur_yr> Kj_pellets     (GeschiktObject) := .../jaarlijks/Kj_pellets;
//			attribute<Eur_yr> Kj_H2          (GeschiktObject) := .../jaarlijks/Kj_H2;
			attribute<Eur_yr> Kj_Vastrecht_g (GeschiktObject) := .../jaarlijks/Kj_Vastrecht_g;

			attribute<Eur_yr> Kj_Vastrecht_e (GeschiktObject) := const((0/0)[eur_yr],GeschiktObject);
			attribute<Eur_yr> Kj_Vastrecht_w (GeschiktObject) := const((0/0)[eur_yr],GeschiktObject);
			attribute<Eur_yr> Kj_Vastrecht_k (GeschiktObject) := const((0/0)[eur_yr],GeschiktObject);

			attribute<Eur_yr> Km_elek        (GeschiktObject) := .../Km_verbruik/e;
			attribute<Eur_yr> Km_gas         (GeschiktObject) := .../Km_verbruik/Gas;
			attribute<Eur_yr> Km_biomassa    (GeschiktObject) := .../Km_verbruik/biomassa;
			attribute<Eur_yr> Km_olie        (GeschiktObject) := .../Km_verbruik/olie;
			attribute<Eur_yr> Km_pellets     (GeschiktObject) := .../Km_verbruik/pellets;
//			attribute<Eur_yr> Km_H2          (GeschiktObject) := .../Km_verbruik/H2;

			attribute<Eur_yr> oh_KD          (GeschiktObject) := sum(.../jaarlijks/Kj_oh_LO  * float64(xProduct/product_rel == Classifications/Product/V/KDp || xProduct/product_rel == Classifications/Product/V/KDb), xProduct/GeschiktObject_rel);
			attribute<Eur_yr> adm_KD         (GeschiktObject) := sum(.../jaarlijks/Kj_adm_LO * float64(xProduct/product_rel == Classifications/Product/V/KDp || xProduct/product_rel == Classifications/Product/V/KDb), xProduct/GeschiktObject_rel);
		}
		container subsidie := for_each_nedv(
			ZichtjaarBeleid/subsidie/name,
			replace('SubsidieBerekening/@SB@/Totaal', '@SB@',ZichtjaarBeleid/subsidie/name),
			GeschiktObject,
			Eur);
				
		container metervraag := Func2Meter/result;
		container Upref      := GeschikteOptieBerekening;
	}	
}
