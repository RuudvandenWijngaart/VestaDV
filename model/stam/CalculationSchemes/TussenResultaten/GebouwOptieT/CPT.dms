//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container CPT
{
	// Invoer gebruik biases en parameterwaardes
	unit<uint32> KalibratieInputs : StorageName = "%projDir%/runs/KalibratieInput.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"
	{
		parameter<bool>         Input_use_CPT          := first(CPT)[bool];
		parameter<bool>         Input_use_LossAversion := first(LossAversion)[bool];
		parameter<bool>         Input_use_DimSens      := first(DiminishingSensitivity)[bool];
		parameter<units/ratio>  Input_LA_lambda        := first(lambda)[units/ratio];
		parameter<units/ratio>  Input_DS_alpha         := first(alpha)[units/ratio];
		parameter<units/ratio>  Input_DS_beta          := first(beta)[units/ratio];
	}

	// Settings voor het meenemen van verschillende cognitive biases
	// OPM: Wanneer CPT gebruikt wordt, wordt automatisch reference dependence toegepast
	parameter<bool> use                         := KalibratieInputs/Input_use_CPT;
	parameter<bool> loss_aversion_use           := KalibratieInputs/Input_use_LossAversion;
	parameter<bool> diminishing_sensitivity_use := KalibratieInputs/Input_use_DimSens;

	// Parameterwaarden van de cognitive biases
	parameter<ratio> loss_aversion_lambda        := KalibratieInputs/Input_LA_lambda;
	parameter<ratio> dimishing_sensitivity_alpha := KalibratieInputs/Input_DS_alpha;
	parameter<ratio> dimishing_sensitivity_beta  := KalibratieInputs/Input_DS_beta;

	// Vinden referentie gebouwoptie
	container vergelijking
	{
		// Kijk naar bouwdelen en installaties on referentiegebouwoptie te vinden
		container bouwdelen_oorsponkelijk   := BO/Bouwdelen/Isolatie;
		container installatie_oorsponkelijk := BO/InstallatiePerProduct;
		container bouwdelen_nieuw           := GeschiktObject/Bouwdelen/Isolatie;
		container installatie_nieuw         := GeschiktObject/InstallatiePerProduct;
		
		container bouwdeel := For_Each_nedv(classifications/bouwdeel/name, 'bouwdelen_oorsponkelijk/' + classifications/bouwdeel/name + '[geschiktobject/BO_rel] == bouwdelen_nieuw/' + classifications/bouwdeel/name, geschiktobject, bool)
		{
			attribute<uint32> bouwdeel_score (GeschiktObject) := ='add(' + AsItemList('uint32(' + classifications/bouwdeel/name + ')') +')';
		}
		
		container installatie := For_Each_nedv(classifications/product/name, 'installatie_oorsponkelijk/' + classifications/product/name + '[geschiktobject/BO_rel] == installatie_nieuw/' + classifications/product/name, geschiktobject, bool)
		{
			attribute<bool>   KK_score          (GeschiktObject) := installatie_oorsponkelijk/KK[GeschiktObject/BO_rel] == installatie_nieuw/KK;
			attribute<bool>   DK_score          (GeschiktObject) := installatie_oorsponkelijk/DK[GeschiktObject/BO_rel] == installatie_nieuw/DK;
			attribute<bool>   VT_score          (GeschiktObject) := installatie_oorsponkelijk/VT[GeschiktObject/BO_rel] == installatie_nieuw/VT;
			attribute<bool>   AS_score          (GeschiktObject) := installatie_oorsponkelijk/AS[GeschiktObject/BO_rel] == installatie_nieuw/AS;
			attribute<uint32> product_score     (GeschiktObject) := ='add(' + AsItemList('uint32(' + classifications/product/name + ')') +')';
			attribute<uint32> installatie_score (GeschiktObject) := add(uint32(KK_score), uint32(DK_score), uint32(VT_score), uint32(AS_score), product_score);
		}
	}
	
	container referentie
	{
		attribute<uint32>         totaal_score              (GeschiktObject) := vergelijking/installatie/installatie_score + vergelijking/bouwdeel/bouwdeel_score;
		attribute<GeschiktObject> referentie_geschiktobject (GeschiktObject) := max_index(totaal_score, GeschiktObject/BO_rel)[GeschiktObject/BO_rel];
	}

	// Berekening delta x
	container deltax_berekening
	{
		container jaarlijks
		{
			container kosten
			{
				attribute<Eur_yr> Kj_elek        (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_elek; 
				attribute<Eur_yr> Kji_gv         (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kji_gv; 
				attribute<Eur_yr> Kj_OH_LO       (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_OH_LO; 
				attribute<Eur_yr> Kj_Adm_LO      (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_Adm_LO; 
				attribute<Eur_yr> Kj_gas         (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_gas; 
				attribute<Eur_yr> Kj_biomassa    (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_biomassa; 
				attribute<Eur_yr> Kj_olie        (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_olie; 
				attribute<Eur_yr> Kj_olie_eh     (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_olie_eh; 
				attribute<Eur_yr> Kj_pellets     (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_pellets;
				attribute<Eur_yr> Kj_H2          (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_H2;
				attribute<Eur_yr> Kj_vastrecht_g (GeschiktObject) := Geschikteoptieberekening/Results/jaarlijks/Kj_vastrecht_g;		
				attribute<Eur_yr> Kj_jaarlijks   (GeschiktObject) := BTW_Factor * add(Kj_elek, Kj_OH_LO, Kj_Adm_LO, Kj_gas, Kj_biomassa, Kj_olie, Kj_olie_eh, Kj_pellets, Kj_H2, Kj_vastrecht_g ) 
																		+ BTW_Factor_gv * Kji_gv;
			}
			attribute<Eur_yr> Kj_referentie (GeschiktObject) := kosten/Kj_jaarlijks[referentie/referentie_geschiktobject];
			attribute<Eur_yr> Kj_optie      (GeschiktObject) := kosten/Kj_jaarlijks;
			attribute<eur_yr> delta_x       (GeschiktObject) := Kj_referentie - Kj_optie;
			
		}
		
		container eenmalig
		{
			container kosten
			{
				attribute<Eur_yr> Kji_Enet     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_enet; 
				attribute<Eur_yr> Kji_Gnet     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_Gnet; 
				attribute<Eur_yr> Kji_Asl_Wnet (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_Asl_Wnet; 
				attribute<Eur_yr> Kji30_LO     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji30_LO; 
				attribute<Eur_yr> Kji20_LO     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji20_LO; 
				attribute<Eur_yr> Kji15_LO     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji15_LO; 
				attribute<Eur_yr> Kji_gv       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_gv; 
				attribute<Eur_yr> Kji_LTAS     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_LTAS; 
				attribute<Eur_yr> Kji_DK       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_DK; 
				attribute<Eur_yr> Kji_KK       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_KK; 
				attribute<Eur_yr> Kji_VT       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Kji_VT;
				attribute<Eur_yr> Kji_eenmalig (GeschiktObject) := BTW_Factor * add(Kji_Enet, Kji_Gnet, Kji_Asl_Wnet, Kji30_LO, Kji20_LO, Kji15_LO, Kji_LTAS, Kji_DK, Kji_KK, Kji_VT) 
																	+ BTW_Factor_gv * Kji_gv;
			}
			container subsidies
			{
				attribute<Eur_yr> Oji_Gnet     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_Gnet; 
				attribute<Eur_yr> Oji_Asl_Wnet (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_Asl_Wnet; 
				attribute<Eur_yr> Oji30_LO     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji30_LO; 
				attribute<Eur_yr> Oji20_LO     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji20_LO; 
				attribute<Eur_yr> Oji15_LO     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji15_LO; 
				attribute<Eur_yr> Oji_gv       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_gv; 
				attribute<Eur_yr> Oji_LTAS     (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_LTAS; 
				attribute<Eur_yr> Oji_DK       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_DK; 
				attribute<Eur_yr> Oji_KK       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_KK; 
				attribute<Eur_yr> Oji_VT       (GeschiktObject) := Geschikteoptieberekening/Results/kapitaallasten/Oji_VT;
				attribute<Eur_yr> Oji_totaal   (GeschiktObject) := BTW_Factor * add(Oji_Gnet, Oji_Asl_Wnet, Oji30_LO, Oji20_LO, Oji15_LO, Oji_LTAS, Oji_DK, Oji_KK, Oji_VT) 
																	+ BTW_Factor_gv * Oji_gv;
			}
			attribute<Eur_yr> Kj_eenmalig_totaal (GeschiktObject) := kosten/Kji_eenmalig - subsidies/Oji_totaal;
			attribute<Eur_yr> Kj_referentie      (GeschiktObject) := Kj_eenmalig_totaal[referentie/referentie_geschiktobject];
			attribute<Eur_yr> Kj_optie           (GeschiktObject) := Kj_eenmalig_totaal;
			attribute<eur_yr> delta_x            (GeschiktObject) := Kj_referentie - Kj_optie;
		}
	}
	

	attribute<eur_yr> subjective_value_jaarlijks (GeschiktObject) := 
	= loss_aversion_use && diminishing_sensitivity_use ? "deltax_berekening/jaarlijks/delta_x < float64(0) ? neg(loss_aversion_lambda * neg(deltax_berekening/jaarlijks/delta_x)^ dimishing_sensitivity_beta) : deltax_berekening/jaarlijks/delta_x ^ dimishing_sensitivity_alpha"
		: loss_aversion_use                            ? "deltax_berekening/jaarlijks/delta_x < float64(0) ? loss_aversion_lambda * deltax_berekening/jaarlijks/delta_x                                       : deltax_berekening/jaarlijks/delta_x"
		: diminishing_sensitivity_use                  ? "deltax_berekening/jaarlijks/delta_x < float64(0) ? neg(neg(deltax_berekening/jaarlijks/delta_x)^ dimishing_sensitivity_beta)                        : deltax_berekening/jaarlijks/delta_x ^ dimishing_sensitivity_alpha"
		: "deltax_berekening/jaarlijks/delta_x"
		;
	
	attribute<eur_yr> subjective_value_eenmalig (GeschiktObject) := 
	= loss_aversion_use && diminishing_sensitivity_use ? "deltax_berekening/eenmalig/delta_x < float64(0) ? neg(loss_aversion_lambda * neg(deltax_berekening/eenmalig/delta_x)^ dimishing_sensitivity_beta) : deltax_berekening/eenmalig/delta_x ^ dimishing_sensitivity_alpha"
		: loss_aversion_use   						   ? "deltax_berekening/eenmalig/delta_x < float64(0) ? loss_aversion_lambda * deltax_berekening/eenmalig/delta_x   								    : deltax_berekening/eenmalig/delta_x"
		: diminishing_sensitivity_use 			       ? "deltax_berekening/eenmalig/delta_x < float64(0) ? neg(neg(deltax_berekening/eenmalig/delta_x)^ dimishing_sensitivity_beta)                        : deltax_berekening/eenmalig/delta_x ^ dimishing_sensitivity_alpha"
		: "deltax_berekening/eenmalig/delta_x"
		;
	
	// Berekening CPT-score
	//OPM: De CPT-score is een maat van utiliteit. De rest van Hestia rekent met kosten, dus de negatieve van de score wordt gebruikt als kosten
	attribute<eur_yr> CPT_score (GeschiktObject) := subjective_value_jaarlijks + subjective_value_eenmalig;												
}