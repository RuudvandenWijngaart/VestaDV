//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container CPT
{
	parameter<bool> use                         := true;
	
	// Settings voor het meenemen van verschillende cognitive biases
	parameter<bool> loss_aversion_use           := true;
	parameter<bool> diminishing_sensitivity_use := true;
	parameter<bool> probability_weighting_use   := false;

	// Parameterwaarden van de cognitive biases
	parameter<ratio> loss_aversion_lambda        := 2.25;
	parameter<ratio> dimishing_sensitivity_alpha := 1.0;
	parameter<ratio> dimishing_sensitivity_beta  := 1.0;
	
	// Berekenen delta_x
	
	// Kijk naar bouwdelen en installaties on referentiegebouwoptie te vinden
	container bouwdelen_oorsponkelijk   := BO/Bouwdelen/Isolatie;
	container installatie_oorsponkelijk := BO/InstallatiePerProduct;
	container bouwdelen_nieuw           := GeschiktObject/Bouwdelen/Isolatie;
	container installatie_nieuw         := GeschiktObject/InstallatiePerProduct;
	
	container vergelijking_bouwdeel := For_Each_nedv(classifications/bouwdeel/name, 'bouwdelen_oorsponkelijk/' + classifications/bouwdeel/name + '[geschiktobject/BO_rel] == bouwdelen_nieuw/' + classifications/bouwdeel/name, geschiktobject, bool)
	{
		attribute<uint32> bouwdeel_score (GeschiktObject) := ='add(' + AsItemList('uint32(' + classifications/bouwdeel/name + ')') +')';
	}
	
	container vergelijking_installatie := For_Each_nedv(classifications/product/name, 'installatie_oorsponkelijk/' + classifications/product/name + '[geschiktobject/BO_rel] == installatie_nieuw/' + classifications/product/name, geschiktobject, bool)
	{
		attribute<bool>   KK_score          (GeschiktObject) := installatie_oorsponkelijk/KK[GeschiktObject/BO_rel] == installatie_nieuw/KK;
		attribute<bool>   DK_score          (GeschiktObject) := installatie_oorsponkelijk/DK[GeschiktObject/BO_rel] == installatie_nieuw/DK;
		attribute<bool>   VT_score          (GeschiktObject) := installatie_oorsponkelijk/VT[GeschiktObject/BO_rel] == installatie_nieuw/VT;
		attribute<bool>   AS_score          (GeschiktObject) := installatie_oorsponkelijk/AS[GeschiktObject/BO_rel] == installatie_nieuw/AS;
		attribute<uint32> product_score     (GeschiktObject) := ='add(' + AsItemList('uint32(' + classifications/product/name + ')') +')';
		attribute<uint32> installatie_score (GeschiktObject) := add(uint32(KK_score), uint32(DK_score), uint32(VT_score), uint32(AS_score), product_score);
	}
	
	container referentie
	{
		attribute<uint32>         totaal_score              (GeschiktObject) := vergelijking_installatie/installatie_score + vergelijking_bouwdeel/bouwdeel_score;
		attribute<GeschiktObject> referentie_geschiktobject (GeschiktObject) := max_index(totaal_score, GeschiktObject/BO_rel)[GeschiktObject/BO_rel];
	}

	// Kosten van de referentieoptie en van de mogelijke opties
	
	attribute<Eur_yr> Kj_referentie_standaard (GeschiktObject) := kosten_or_undefined_i[referentie/referentie_geschiktobject];
	attribute<Eur_yr> Kj_optie (GeschiktObject):= kosten_or_undefined_i;

	#include <Probability_weighting.dms>
	
	// Kosten kunnen uit prijspaden komen of uit gewone hestia berekeningen of uit prijspaden
	//attribute<Eur_yr> Kj_referentie (BO) := probability_weighting_use ? Probability_weighting/Kj_referentie : Kj_referentie_standaard;
	//attribute<Eur_yr> Kj_optie (GeschiktObject):= probability_weighting_use ? Probability_weighting/Kj_optie : Kj_optie_standaard;
	
	attribute<eur_yr> delta_x (GeschiktObject) := Kj_referentie_standaard - Kj_optie;

	// Rekenregels voor het vinden van de subjectieve waardering
	// DEBUG: negatieve delta_x worden null values als diminishing_sensitivity_use == 1
	attribute<eur_yr> subjective_value (GeschiktObject) := 
	switch(
			case( loss_aversion_use && !diminishing_sensitivity_use && delta_x < float64(0), loss_aversion_lambda * delta_x                              ),
			case(!loss_aversion_use &&  diminishing_sensitivity_use && delta_x > float64(0),                        delta_x ^ dimishing_sensitivity_alpha),
			case(!loss_aversion_use &&  diminishing_sensitivity_use && delta_x < float64(0),                        delta_x ^ dimishing_sensitivity_beta ),
			case( loss_aversion_use &&  diminishing_sensitivity_use && delta_x > float64(0),                        delta_x ^ dimishing_sensitivity_alpha),
			case( loss_aversion_use &&  diminishing_sensitivity_use && delta_x < float64(0), loss_aversion_lambda * delta_x ^ dimishing_sensitivity_beta ),
			delta_x
	);
	
	// Ophalen decision weights 
	// attribute<ratio> decision_weight (GeschiktObject) := Probability_weighting/decision_weights;

	// Sommeer over alle prijspaden om CPT score te verkrijgen
	// attribute<Eur_yr> CPT_score (GeschiktObject) := sum( decision_weight * subjective_value) voor alle prijspaden;
	
	// Als geen probability weighting CPT score is subjective value
	attribute<Eur_yr> CPT_score (GeschiktObject) := subjective_value;

																						
																						
}