//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2023 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//           Dit is de container voor de berekeningen ten behoeve van WP11-3            //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////
container VergelijkingReferentieverbruik
{
	container Class
	{
		unit<uint8> BouwjaarWoningTestWoningen : nrofrows = 7
		{
			attribute<units/yr_uint16> ClassBreak : [ -9998, 1946,  1965,  1975, 1992, 2006, 2014];
			attribute<string>   name       : ['v1946','v1965','v1975','v1922', 'v2006', 'v2014', 'n2014'];
			attribute<string> Excel_code:
			[
				 '< 1946'
				,'1946 - 1964'
				,'1965 - 1974'
				,'1975 - 1991'
				,'1992 - 2005'
				,'2006 - 2014'
				,'> 2014'
			];
			attribute<string> label:
			[
				 'voor 1946 '	
				,'van 1946 t/m 1964'
				,'van 1965 t/m 1974'
				,'van 1975 t/m 1991'			 
				,'van 1992 t/m 2005'	
				,'van 2006 t/m 2014'
				,'na 2014'
			];
			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
			parameter<.> onbekend := V/v1946;
		}
		
		unit<uint32> WoningTypeBouwjaarKlasseTW := combine(Classifications/WoningType, BouwjaarWoningTestWoningen)
		{
			attribute<string> label (.) := Classifications/WoningType/label[first_rel] + '_' + BouwjaarWoningTestWoningen/label[second_rel];
			attribute<string> name (.) := Classifications/WoningType/name[first_rel] + '_' + BouwjaarWoningTestWoningen/name[second_rel];
			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
		}
		
		unit<uint32> WoningTypeBouwjaarKlasseTWPakketSoort := combine(WoningTypeBouwjaarKlasseTW, PakketSoort)
		{
			attribute<string> label (.) := WoningTypeBouwjaarKlasseTW/label[first_rel] + '_' + PakketSoort/label[second_rel];
			attribute<string> name (.) := WoningTypeBouwjaarKlasseTW/name[first_rel] + '_' + PakketSoort/name[second_rel];
			attribute<classifications/schillabel> NTA_Energielabel (.) := Isolatiepakketten_input/Energielabel_NTA8800[invert(Isolatiepakketten_input/WoningTypeBouwjaarKlasseTWPakketSoort_rel)];
			attribute<classifications/schillabel> NEN_Energielabel (.) := Isolatiepakketten_input/Energielabel_NEN7120[invert(Isolatiepakketten_input/WoningTypeBouwjaarKlasseTWPakketSoort_rel)];
			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
		}
		
		unit<uint8> PakketSoort : nrofrows = 2
		{
			attribute<string> name: ['Standaard', 'WarmtenetGeschikt']; 
			attribute<string> label := name;
			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
		}
	}
	unit<uint32> Isolatiepakketten_input: StorageName = "%projDir%/data/20231030_Pakketten_input.csv", StorageType = "gdal.vect", StorageReadOnly = "True"
	{
		attribute<Classifications/WoningType>	WoningtypeHestia (.) := 
			  strcount(Woningtype, 'vrijstaand')       > 0 ? Classifications/WoningType/V/vrijstaand
			: strcount(Woningtype, '2 onder 1 kap')    > 0 ? Classifications/WoningType/V/twee_onder_1_kap
			: strcount(Woningtype, 'galerij')          > 0 ? Classifications/WoningType/V/meergezinspand_laag_midden //OPM: Of hoog?
			: strcount(Woningtype, 'maisonnette')      > 0 ? Classifications/WoningType/V/meergezinspand_laag_midden //OPM: Of hoog?
			: strcount(Woningtype, 'portiek')          > 0 ? Classifications/WoningType/V/meergezinspand_laag_midden //OPM: Of hoog?
			: strcount(Woningtype, 'rijwoning hoek')   > 0 ? Classifications/WoningType/V/hoekwoning
			: strcount(Woningtype, 'rijwoning tussen') > 0 ? Classifications/WoningType/V/tussenwoning																				
			: Classifications/WoningType/V/tussenwoning; // Bovenstaande classificatie omvat alle inputwaardes, dus deze waarde maakt niet uit. 
	
		attribute<class/BouwjaarWoningTestWoningen> BouwJaarKlasseTestWoningen (.) := rlookup(Bouwjaarklasse, class/BouwjaarWoningTestWoningen/excel_code);
		attribute<Classifications/schillabel>       Energielabel_NTA8800       (.) := rlookup(NTA8800_v9, classifications/schillabel/name);
		attribute<Classifications/schillabel>       Energielabel_NEN7120       (.) := rlookup(NEN7120_v9, classifications/schillabel/name);
		attribute<class/PakketSoort>		        PakketSoort		           (.) := rlookup(TypePakket, class/PakketSoort/name);
		
		attribute<class/WoningTypeBouwjaarKlasseTW>            WoningTypeBouwjaarKlasseTW_rel            (.) := combine_data(class/WoningTypeBouwjaarKlasseTW, WoningtypeHestia, BouwJaarKlasseTestWoningen);
		attribute<class/WoningTypeBouwjaarKlasseTWPakketSoort> WoningTypeBouwjaarKlasseTWPakketSoort_rel (.) := combine_data(class/WoningTypeBouwjaarKlasseTWPakketSoort, WoningTypeBouwjaarKlasseTW_rel, PakketSoort);
		
		container bouwdeelIsolatie := for_each_ind(
			'nedv'
			,Classifications/bouwdeel/name
			,'rlookup(IsolatieNiveau_'+Classifications/bouwdeel/name+', Classifications/IsolatieNiveau/name)[invert(WoningTypeBouwjaarKlasseTWPakketSoort_rel)]'
			,class/WoningTypeBouwjaarKlasseTWPakketSoort
			,Classifications/IsolatieNiveau
			);
	}

	// Classificatie naar bouwjaarklasse testwoningen om pakketten op te kunnen leggen
	attribute<class/BouwjaarWoningTestWoningen> BouwjaarklasseTestwoningen     (BO) := classify(bouwjaar, class/BouwjaarWoningTestWoningen/classbreak);
	attribute<class/WoningTypeBouwjaarKlasseTW> WoningTypeBouwjaarKlasseTW_rel (BO) := combine_data(class/WoningTypeBouwjaarKlasseTW, Woningtype_rel, BouwjaarklasseTestwoningen);

	attribute<classifications/schillabel> AfgemeldEnergielabel (BO) := BeginSituatie/StartingStateComponenten/Woning/results/schillabel_rel;

	// WBS_rel voor uitvoer. Gebaseerd op afgemeld energielabel
	attribute<classifications/combines/WBS> WBS_rel (BO) := combine_data(classifications/combines/WBS, combine_data(classifications/combines/WB, woningtype_rel, classify(bouwjaar, classifications/bouwjaarwoning/classbreak)), AfgemeldEnergielabel);

	container UitgangsSituatie
	{
		container Functioneel       := BO/Functioneel;
		container Referentieverbruik := Templates/RV_referentieverbruik(AfgemeldEnergielabel);
		
	//	attribute<GJ_yr> RV_uitganssituatie_vanuit_vivet_als_gedrag_is_een (BO) := (Referentieverbruik/RV + Functioneel/warmtewinst/totaal) * /Invoer/DefaultInstellingen/Basis/RuimtelijkeVraag/Gedrag/RV * Functioneel_base/Klimaateffect  * BeginSituatie/StartingStateComponenten/Woning/results/warmteverlies_theoretisch_startjaar/TemperatuurCorrectie/factor * Functioneel/Correction_RV - Functioneel/warmtewinst/totaal;

	}
	container WarmtenetGeschikt   := Templates/IsolatiepakketOplegT('WarmtenetGeschikt')
	{		
		attribute<classifications/combines/WBSS> WBSS_rel (BO) := WBSS_Hestiamethode_rel;
		container outputs := Templates/outputs();
	}
	
	container StandaardEnStreefwaarden  := Templates/IsolatiepakketOplegT('Standaard')
	{		
		attribute<classifications/combines/WBSS> WBSS_rel (BO) := WBSS_Hestiamethode_rel;
		container outputs := Templates/outputs();
	}

	container Templates
	{
		Template outputs
		{			
			attribute<string> Woningtype              (classifications/combines/WBSS) := classifications/combines/WB/LabelWoningtype[classifications/combines/WBS/nr_1[classifications/combines/WBSS/nr_1]];
			attribute<string> Bouwjaarklasse          (classifications/combines/WBSS) := classifications/combines/WB/LabelBouwjaar[classifications/combines/WBS/nr_1[classifications/combines/WBSS/nr_1]];
			attribute<string> Startlabel              (classifications/combines/WBSS) := classifications/combines/WBS/LabelS[classifications/combines/WBSS/nr_1];
			attribute<string> Doellabel_Hestiamethode (classifications/combines/WBSS) := classifications/combines/WBSS/LabelS;
			
			attribute<nrAsl> AantalWoningen           (classifications/combines/WBSS) := sum(nrAansluitingen, WBSS_rel);
			attribute<nrAsl> AantalWoningenAangepast  (classifications/combines/WBSS) := sum(BouwdelenAangepast/WoningAangepast[float64] * 1[nrAsl], WBSS_rel);
			
			attribute<GJ_yr> RV_UitgangsSituatie_Hestia            (classifications/combines/WBSS) := sum(UitgangsSituatie/Functioneel/RV, WBSS_rel);
			attribute<GJ_yr> RV_UitgangsSituatie_Referentieverbuik (classifications/combines/WBSS) := sum(UitgangsSituatie/Referentieverbruik/RV, WBSS_rel); //OPM: Dit is gelijk aan /BeginSituatie/StartingStateComponenten/Woning/results/warmteverlies_theoretisch_startjaar/Gemeten_RV_i. Verschilt met RV_uitgangssituatie doordat de binnentemperatuurscorrectiefactor niet 
			
			attribute<GJ_yr> RV_Hestia                        (classifications/combines/WBSS) := sum(Functioneel/RV, WBSS_rel);
			attribute<GJ_yr> RV_Referentieverbuik_Pakketlabel (classifications/combines/WBSS) := sum(Referentieverbruik_Pakketlabel/RV, WBSS_rel);		
			attribute<GJ_yr> RV_Referentieverbuik_Hestialabel (classifications/combines/WBSS) := sum(Referentieverbruik_Hestialabel/RV, WBSS_rel);
		}
		
		Template IsolatiepakketOplegT
		{
			// Start inputs
			parameter<string> Pakketsoort_str;
			// End inputs
						
			attribute<class/PakketSoort>                           PakketSoort                               (BO) := const(rlookup(Pakketsoort_str, class/PakketSoort/name), BO);
			attribute<class/WoningTypeBouwjaarKlasseTWPakketSoort> WoningTypeBouwjaarKlasseTWPakketSoort_rel (BO) := combine_data(class/WoningTypeBouwjaarKlasseTWPakketSoort, WoningTypeBouwjaarKlasseTW_rel, PakketSoort);
			
			attribute<classifications/schillabel> NTA_energielabel_pakket (BO) := class/WoningTypeBouwjaarKlasseTWPakketSoort/NTA_energielabel[WoningTypeBouwjaarKlasseTWPakketSoort_rel];
			attribute<classifications/schillabel> NEN_energielabel_pakket (BO) := class/WoningTypeBouwjaarKlasseTWPakketSoort/NEN_energielabel[WoningTypeBouwjaarKlasseTWPakketSoort_rel];
			
			attribute<bool> LabelSlechterDanPakketlabel (BO) := AfgemeldEnergielabel > NEN_energielabel_pakket; // OPM: > ipv < omdat een beter label een kleiner getal heeft in de classificatie
			attribute<bool> LabelBekend					(BO) := AfgemeldEnergielabel != Classifications/Schillabel/V/n;
			
			container IsolatieNiveausPakket := for_each_ind(
				'nedv'
				,Classifications/bouwdeel/name
				,replace('lookup(WoningTypeBouwjaarKlasseTWPakketSoort_rel, Isolatiepakketten_input/BouwdeelIsolatie/@BD@)','@BD@',Classifications/bouwdeel/name)
				,BO
				,Classifications/IsolatieNiveau
				);
			
			container IsolatieNiveaus := for_each_ind( //OPM: gaat nu op NENlabel. Daarnaast worden woningen zonder label nu niet meegenomen. Kijken hoe we dat anders operationaliseren, als we dat wel willen.
				'nedv'
				,Classifications/bouwdeel/name
				,replace('LabelSlechterDanPakketlabel && LabelBekend && IsolatieNiveausPakket/@BD@ > BO/Bouwdelen/Isolatie/@BD@ ? IsolatieNiveausPakket/@BD@ : BO/Bouwdelen/Isolatie/@BD@','@BD@',Classifications/bouwdeel/name)
				,BO
				,Classifications/IsolatieNiveau
				);
				
			container BouwdelenAangepast := for_each_ind( //OPM: gaat nu op NENlabel. Daarnaast worden woningen zonder label nu niet meegenomen. Kijken hoe we dat anders operationaliseren, als we dat wel willen.
				'nedv'
				,Classifications/bouwdeel/name
				,replace('IsolatieNiveaus/@BD@ != BO/Bouwdelen/Isolatie/@BD@ ? True : False','@BD@',Classifications/bouwdeel/name)
				,BO
				,Bool
				)
				{
					attribute<bool> WoningAangepast (BO) := ='or('+AsItemList(Classifications/bouwdeel/name)+')';
				}
			
			container Functioneel                     := Templates/BerekenFunctioneel(BO, BO, id(BO), IsolatieNiveaus);
			
			attribute<classifications/schillabel> Doellabel_pakket         (BO) := LabelSlechterDanPakketlabel ? NEN_energielabel_pakket : AfgemeldEnergielabel;
			attribute<classifications/schillabel> Doellabel_Hestiamethode  (BO) := LabelSlechterDanPakketlabel ? Functioneel/schillabel_rel : AfgemeldEnergielabel;
			
			attribute<classifications/combines/WBSS> WBSS_pakket_rel        (BO) := combine_data(classifications/combines/WBSS, WBS_rel, Doellabel_pakket);
			attribute<classifications/combines/WBSS> WBSS_Hestiamethode_rel (BO) := combine_data(classifications/combines/WBSS, WBS_rel, Doellabel_Hestiamethode);


			container Referentieverbruik_Pakketlabel := Templates/RV_referentieverbruik(Doellabel_pakket);    //OPM: Gaat op NEN energielabel behorend bij maatregelepakket. 
			container Referentieverbruik_Hestialabel := Templates/RV_referentieverbruik(Doellabel_Hestiamethode); //OPM: Gaat op Hestia energielabel behorend bij maatregelpakket.
		}
	
		Template RV_referentieverbruik
		{
			// Start inputs
			attribute<classifications/schillabel> energielabel (BO);
			// End inputs
		

		
			attribute<GJ_yr> RV_Basevalues (BO) := =
				'nrAansluitingen_i * merge(energielabel, GJ_yr_asl,'
					+ AsItemList('Invoer/Kengetallen/Bebouwing/Woning/Results/Asl/RV_'+Classifications/SchilLabel/name+'[ModelObject_rel]')+')'
					'+ Oppervlakte_i   * merge(energielabel, GJ_yr_m2,'
					+ AsItemList('Invoer/Kengetallen/Bebouwing/Woning/Results/Opp/RV_'+Classifications/SchilLabel/name+'[ModelObject_rel]')+')';
			
			container gemeten_correctie
			{
				attribute<Geography/RegioIndelingen/Wijk>                                WK_rel         (BO) := Invoer/RuimtelijkeData/StudieGebied/Buurt/Wijk_rel[Planregio_rel];
				attribute<Invoer/Kengetallen/Bebouwing/Woning/Verschilfactordata/W_E>    W_E_rel        (BO) := combine_data(Invoer/Kengetallen/Bebouwing/Woning/Verschilfactordata/W_E, Woningtype_rel, Eigendom_rel);
				attribute<Invoer/Kengetallen/Bebouwing/Woning/Verschilfactordata/WK_W_E> WK_W_E_rel     (BO) := combine_data(Invoer/Kengetallen/Bebouwing/Woning/Verschilfactordata/WK_W_E, WK_rel, W_E_rel);
				attribute<ratio>                                                         Verschilfactor (BO) := Invoer/Kengetallen/Bebouwing/Woning/Verschilfactordata/WK_W_E/Verschilfactor[WK_W_E_rel];
			}
			
			attribute<GJ_yr> RV (BO) := nrAansluitingen * 1d/1[nrAsl] *  RV_Basevalues * gemeten_correctie/Verschilfactor;
		}
		
		Template BerekenFunctioneel
		{
			unit<uint32> BOdomain;
			unit<uint32> PrevState;
			attribute<PrevState> PrevState_rel (BOdomain);
			container IsolatieNiveaus;

			attribute<GJ_yr> VT (BOdomain) :=
				  Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V_E_asl[PrevState/InstallatiePerProduct/VT[PrevState_rel]]
				* PrevState/nrAansluitingen[PrevState_rel]
				* PrevState/Functioneel_base/Gedragfactor/VT;
				
			attribute<GJ_yr> KK (BOdomain) := PrevState/Functioneel_base/KK[PrevState_rel];
			attribute<GJ_yr> EA (BOdomain) := PrevState/Functioneel_base/EA[PrevState_rel];
			attribute<GJ_yr> TW (BOdomain) := PrevState/Functioneel_base/TW[PrevState_rel];
			attribute<GJ_yr> KD (BOdomain) := PrevState/Functioneel_base/KD[PrevState_rel];
			attribute<GJ_yr> RV (BOdomain) := nrAansluitingen * 1d/1[nrAsl] * (RV_per_Bouwdeel_now/Totaal  + Vrv_VT) * Correction_RV - warmtewinst/totaal;
			
			attribute<GJ_yr> Vrv_VT (BOdomain) :=
				  Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/V_RV_asl[PrevState/InstallatiePerProduct/VT[PrevState_rel]]
				* PrevState/nrAansluitingen[PrevState_rel]
				// * PrevState/Functioneel_base/Klimaateffect[PrevState_rel] OPM: Klimaateffect wordt uit de berekening gehouden omdat het referentieverbuik klimaatgecorrigeerd is, waardoor we voor een goede vergelijking ook geen klimaatefefct mee moeten nemen bij Hestia
				* PrevState/Functioneel_base/Gedragfactor/VT
				* PrevState/Functioneel_base/Fitfactor_VT[PrevState_rel], ishidden = "True";

			attribute<Kwh_yr_m2>                  Kwh_m2_RV      (BOdomain) := makedefined(((RV_per_Bouwdeel_now/Totaal + Vrv_VT) / 3.6[MJ / kWh] * 1000 [ MJ / GJ]) / PrevState/Oppervlakte[PrevState_rel],0.0[Kwh_yr_m2]), ishidden = "True";
			attribute<Kwh_yr_m2>                  Kwh_m2_tot     (BOdomain) := makedefined(((PrevState/Functioneel_base/VT[PrevState_rel]+KK+ EA / Invoer/Kengetallen/Constanten/Efficiency_EA + TW/0.72+KD*0.0+RV/1.04) / 3.6[MJ / kWh] * 1000 [ MJ / GJ]) / PrevState/Oppervlakte[PrevState_rel],0.0[Kwh_yr_m2]), ishidden = "True";//, IntegrityCheck = "Kwh_m2_tot < 1000[Kwh_yr_m2]";
			attribute<Classifications/Schillabel> Schillabel_rel (BOdomain) := classify(Kwh_m2_tot, classifications/Schillabel/classbreak), ishidden = "True";
			attribute<ratio>                      Correction_RV  (BOdomain) := 1.0[ratio] + Invoer/Kengetallen/Constanten/BinnenTemp_A * Invoer/Kengetallen/Constanten/BinnenTemp_B ^ Kwh_m2_RV, ishidden = "True";

			container IsolatieNiveau_rel := IsolatieNiveaus;
				
			container BouwdeelIsolatie_rel := for_each_nedv(
				classifications/Bouwdeel/name,
				replace(
					'combine_data(Classifications/BouwdeelIsolatie, classifications/Bouwdeel/V/@BN@, IsolatieNiveau_rel/@BN@)'
				,	'@BN@', classifications/Bouwdeel/name),
				BOdomain,
				Classifications/BouwdeelIsolatie), ishidden = "True";

			attribute<ratio> R_RV (Classifications/BouwdeelIsolatie):= Classifications/BouwdeelIsolatie/R_RV / 100[percent], ishidden = "True";
			
			container RV_per_Bouwdeel_now := for_each_nedv(
				classifications/Bouwdeel/name,
				replace(
					'PrevState/Functioneel_base/RV_N0_per_Bouwdeel_now/@BN@[PrevState_rel] * makedefined(1.0[ratio] - R_RV[BouwdeelIsolatie_rel/@BN@], 1.0[ratio])'
				,	'@BN@', classifications/Bouwdeel/name),
				BOdomain,
				GJ_yr)
				{
				attribute<GJ_yr> Totaal (BOdomain):= ='add('+AsItemList(Classifications/bouwdeel/name)+')';
				}

			container warmtewinst := Model/CalculationSchemes/BerekenWarmtewinst(BOdomain, '((RV_per_Bouwdeel_now/totaal + Vrv_VT) * Correction_RV)');
		}
	}
}