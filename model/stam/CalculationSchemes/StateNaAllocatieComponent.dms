//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template StateNaAllocatieComponent
{
	// begin case parameters
	unit<uint32> BO_base;
	// end case parameters

	unit<uint32> BO := BO_base
	{
		container Metervraag   := BO_base/Metervraag;
		container BC_kentallen := BO_base/BC_kentallen;

		container Aansluitingen := BO_base/Aansluitingen
		{
			attribute<nrAsl> Gnet   (BO) := nrAansluitingen * float64(Metervraag/gas > 0[GJ_yr]);
			attribute<nrAsl> Warmte (BO) := = 'nrAansluitingen * float64(or('+AsItemList(replace('BO/InstallatiePerProduct/@PD@ == Classifications/Installatie/V/Gebiedsoptie','@PD@',Classifications/product/name))+'))';

			attribute<nrAsl> W70    (BO) := Warmte;
			attribute<nrAsl> W50    (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> W30    (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> WK70   (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> WK50   (BO) := const(0.0[nrAsl],BO);
			attribute<nrAsl> WK30   (BO) := const(0.0[nrAsl],BO);
		}

		container eenmalig := for_each_nedv(
			Classifications/GebouwOptie_eenmalig/name,
			'BO_base/eenmalig/'+ Classifications/GebouwOptie_eenmalig/name,
			BO,
			Eur)
		{
			//Aansluitbijdrages
			attribute<Eur> Ki_Asl_Enet (BO) := BC_kentallen/Ki_Aansl_e_asl * nraansluitingen + BC_kentallen/Ki_Aansl_e_opp * oppervlakte;
			attribute<Eur> Ki_Asl_Gnet (BO) := Metervraag/gas <= 0[GJ_yr]
				? 0[Eur]
				: BC_kentallen/Ki_Aansl_g_asl * nraansluitingen + BC_kentallen/Ki_Aansl_g_opp * oppervlakte;
		}
		container Kapitaallasten := for_each_nedv(
			Classifications/Gebouw_Kapitaallasten/name, 
			'BO_base/Kapitaallasten/'+ Classifications/Gebouw_Kapitaallasten/name,
			BO,
			Eur_yr);

		container Jaarlijks := for_each_nedv(
			Classifications/GebouwOptie_jaarlijks/name,
			'BO_base/jaarlijks/'+ Classifications/GebouwOptie_jaarlijks/name,
			BO,
			Eur_yr)
		{
			attribute<eur_yr> oh_KD      (BO) := BO_base/jaarlijks/oh_KD;
			attribute<eur_yr> adm_KD     (BO) := BO_base/jaarlijks/adm_KD;
			
			container Eindgebruikerskosten
			{
				//====== Placeholder Huurverhoging

				attribute<Invoer/Kengetallen/Eindgebruikerskosten/SSOKWT> HV_rel (BO) := rlookup((
					Classifications/Schillabel/name[BO/Energielabel_rel] + '_' + Classifications/Schillabel/name[BebouwingsComponenten/Woning/BO/Energielabel_rel] //Schilsprong
					+ '_' + Invoer/Kengetallen/Eindgebruikerskosten/OK/Label[classify(BO/oppervlakte, Invoer/Kengetallen/Eindgebruikerskosten/OK/ClassBreaks)]
					+ '_' + (BO/isMeergezins ? 'MGW' : 'EGW')
					),Invoer/Kengetallen/Eindgebruikerskosten/SSOKWT/Label)
					;
				attribute<eur_yr> Oj_hv  (BO) :=
					  BO/Eigendom_rel == Classifications/Eigendom/V/PartHuur ? Invoer/Kengetallen/Eindgebruikerskosten/SSOKWT/Oj_hv_Punten[HV_rel]
					: BO/Eigendom_rel == Classifications/Eigendom/V/WoonCorp ? Invoer/Kengetallen/Eindgebruikerskosten/SSOKWT/Oj_hv_WoonCo[HV_rel]
					: 0.0[eur_yr];

				container Huurcommissiemethode
				{
					parameter<ratio> Mr   := 0.0469 / 12.0 , Descr = "Maandrente";

					parameter<_yr> r15 := 12.0[_yr] * ( Mr / (1.0-((1.0 + Mr)^-180.0)) );
					parameter<_yr> r20 := 12.0[_yr] * ( Mr / (1.0-((1.0 + Mr)^-240.0)) );
					parameter<_yr> r25 := 12.0[_yr] * ( Mr / (1.0-((1.0 + Mr)^-300.0)) );
					parameter<_yr> r30 := 12.0[_yr] * ( Mr / (1.0-((1.0 + Mr)^-360.0)) );

					attribute<Eur> Ki_15 (BO) := eenmalig/Ki15_LO + eenmalig/Ki_VT - eenmalig/Oi15_LO - eenmalig/Oi_VT;
					attribute<Eur> Ki_20 (BO) := eenmalig/Ki20_LO - eenmalig/Oi20_LO;
					attribute<Eur> Ki_25 (BO) := eenmalig/Ki_gv - eenmalig/Oi_gv;
					attribute<Eur> Ki_30 (BO) := eenmalig/Ki30_LO + eenmalig/Ki_LTAS - eenmalig/Oi30_LO;

					attribute<Eur_yr> Oj_hv_15 (BO) := r15 * Ki_15;
					attribute<Eur_yr> Oj_hv_20 (BO) := r20 * Ki_20;
					attribute<Eur_yr> Oj_hv_25 (BO) := r25 * Ki_25;
					attribute<Eur_yr> Oj_hv_30 (BO) := r30 * Ki_30;

					attribute<Eur_yr> Oj_hv (BO) := add(Oj_hv_15,Oj_hv_20,Oj_hv_25,Oj_hv_30);
				}

				//====== Placeholder Hypotheekrenteaftrek
				container Hypotheekrenteaftrek
				{
					parameter<ratio> BelastingSchijf := 0.37[ratio]; // 0.371 of 0.495 (2022)

					attribute<Eur_yr> KL_totaal    (BO) := = 'add('+AsItemlist('float64('+string(Classifications/Gebouw_Kapitaallasten/isEindgebruikerskosten)+ ') * Kapitaallasten/'+ Classifications/Gebouw_Kapitaallasten/name)+')';
					attribute<Eur_yr> wv_Aflossing (BO) := = 'add('+AsItemlist('eenmalig/'+ Classifications/Gebouwoptie_eenmalig/name + ' / float64(' + string(Classifications/GebouwOptie_eenmalig/AT) +')[yr]' ) +')' ;
					attribute<Eur_yr> RenteBedrag  (BO) := KL_totaal - wv_Aflossing;
					attribute<Eur_yr> Aftrek       (BO) := RenteBedrag * BelastingSchijf;
				}
			}
		}
	}
}

