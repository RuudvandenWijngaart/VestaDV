//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container AanbodOpties
{
	#include <WarmtenetTempl.dms>
	
	template W70
	{
		// begin case parameters
		container BeginStatus;
		// end
		container impl := WarmtenetTempl(BeginStatus, Classifications/GebiedsOptie/V/W70);
		container Results := impl/Results
		{
			container W70 := impl/Results/PlanregioResults;
		}
	}
	template W50
	{
		// begin case parameters
		container BeginStatus;
		// end
		container impl := WarmtenetTempl(BeginStatus, Classifications/GebiedsOptie/V/W50);
		container Results := impl/Results
		{
			container W50 := impl/Results/PlanregioResults;
		}
	}
	template W30
	{
		// begin case parameters
		container BeginStatus;
		// end
		container impl := WarmtenetTempl(BeginStatus, Classifications/GebiedsOptie/V/W30);
		container Results := impl/Results
		{
			container W30 := impl/Results/PlanregioResults;
		}
	}
	template WK70
	{
		// begin case parameters
		container BeginStatus;
		// end
		container impl := WarmtenetTempl(BeginStatus, Classifications/GebiedsOptie/V/WK70);
		container Results := impl/Results
		{
			container WK70 := impl/Results/PlanregioResults;
		}
	}
	template WK50
	{
		// begin case parameters
		container BeginStatus;
		// end
		container impl := WarmtenetTempl(BeginStatus, Classifications/GebiedsOptie/V/WK50);
		container Results := impl/Results
		{
			container WK50 := impl/Results/PlanregioResults;
		}
	}
	template WK30
	{
		// begin case parameters
		container BeginStatus;
		// end
		container impl := WarmtenetTempl(BeginStatus, Classifications/GebiedsOptie/V/WK30);
		container Results := impl/Results
		{
			container WK30 := impl/Results/PlanregioResults;
		}
	}


	template PlanregioOptieResultaat
	{
		unit<uint32> BebouwingsObject;
		parameter<Classifications/GebiedsOptie> Optie;
		attribute<bool> GebruikOptie (BebouwingsObject);

		unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;

		unit<uint8> GebouwOptie := Classifications/GebouwOptie;
		
		parameter<GebouwOptie> Gebieds_GebouwOptie_rel := Classifications/GebiedsOptie/GebouwOptie_rel[Optie], IntegrityCheck = "IsDefined(this)";
		
		unit<uint32> results := BebouwingsObject
		{			
			container InstallatiePerProduct := for_each_nedv(
					classifications/product/name
				,	KoudeLevering ? replace('Connect ? Classifications/V/GebiedsOptie : BebouwingsObject/InstallatiePerProduct/@PD@', '@PD@', classifications/product/name)
								  : replace('Connect && (Classifications/Product != Classifications/Product/KDb && Classifications/Product != Classifications/Product/KDp) ? Classifications/V/GebiedsOptie : BebouwingsObject/InstallatiePerProduct/@PD@', '@PD@', classifications/product/name)
				,	BebouwingsObject
				,	Classifications/Installatie
				);
						
			container aansluitingen := BebouwingsObject/aansluitingen
			{
				attribute<nrAsl> GNet      (BebouwingsObject) := Connect ? 0.0[nrAsl] : BebouwingsObject/aansluitingen/GNet;
				attribute<nrAsl> Warmtenet (BebouwingsObject) := Connect ? BebouwingsObject/nrAansluitingen : BebouwingsObject/aansluitingen/Warmtenet;
				attribute<nrAsl> Koudenet  (BebouwingsObject) := Connect && KoudeLevering ? BebouwingsObject/nrAansluitingen : BebouwingsObject/aansluitingen/Koudenet;
			}
		}
	}

	template GebiedsAllocatieResultaat_cumuleren 
	{
		container Cumulator;
		container Increment;

		container jaarlijks:= for_each_nedv(classifications/gebiedsoptie_jaarlijks/full_name, replace('                         Increment/jaarlijks/@X@', '@X@', classifications/gebiedsoptie_jaarlijks/full_name), PlanRegio, Eur_yr);
		container eenmalig := for_each_nedv(classifications/gebiedsoptie_eenmalig/name,       replace('Cumulator/eenmalig/@X@ + Increment/eenmalig/@X@' , '@X@', classifications/gebiedsoptie_eenmalig/name      ), PlanRegio, Eur   );
		container Verbruik := for_each_nedv(classifications/gebiedsoptie_verbruik/name,       replace('                         Increment/Verbruik/@X@' , '@X@', classifications/gebiedsoptie_verbruik/name      ), PlanRegio, GJ_yr );
		container Uitstoot := for_each_nedv(classifications/gebiedsoptie_uitstoot/name,       replace('                         Increment/Uitstoot/@X@' , '@X@', classifications/gebiedsoptie_uitstoot/name      ), PlanRegio, kg_yr );
	}
	
	template GebiedsAllocatieResultaat_verzamelen 
	{
		container Cumulaties;
		unit<uint8> GebiedsOptieSet;

		container jaarlijks:= for_each_nedv(
			classifications/gebiedsoptie_jaarlijks/full_name,
			replace('add('+AsItemList('Cumulaties/'+GebiedsOptieSet/name+'/jaarlijks/@X@')+', BestaandWarmtenet/result/jaarlijks/@X@) ', '@X@', classifications/gebiedsoptie_jaarlijks/full_name),
			PlanRegio,
			Eur_yr);
		container eenmalig := for_each_nedv(
			classifications/gebiedsoptie_eenmalig/name,
			replace('add('+AsItemList('Cumulaties/'+GebiedsOptieSet/name+'/eenmalig/@X@' )+', BestaandWarmtenet/result/eenmalig/@X@)', '@X@', classifications/gebiedsoptie_eenmalig/name),
			PlanRegio,
			Eur);
		container Verbruik := for_each_nedv(
			classifications/gebiedsoptie_verbruik/name,
			replace('add('+AsItemList('Cumulaties/'+GebiedsOptieSet/name+'/Verbruik/@X@' )+', BestaandWarmtenet/result/Verbruik/@X@)', '@X@', classifications/gebiedsoptie_verbruik/name),
			PlanRegio,
			GJ_yr);
		container Uitstoot := for_each_nedv(
			classifications/gebiedsoptie_uitstoot/name,
			replace('add('+AsItemList('Cumulaties/'+GebiedsOptieSet/name+'/Uitstoot/@X@' )+', BestaandWarmtenet/result/Uitstoot/@X@)', '@X@', classifications/gebiedsoptie_uitstoot/name),
			PlanRegio,
			kg_yr);
	}
}
