//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template GeoThermie
{
	// begin case parameters
	container BeginStatus;
	container AanbodKentallen;
	container EnergiePrijzen;
	parameter<units/yr_uint16> Jaar;
	parameter<Classifications/gebiedsOptie> gebiedsoptie_rel;
	// end case parameters

	unit<uint32> PlanRegio := Invoer/SpecifiekeInstellingen/PlanRegio;
	container TypeInfo     := Kengetallen/WarmteBronnen/GeoThermie/TypeInfo;

	container KostenBaten := CalculationSchemes/KostenBatenT(BeginStatus/Bebouwing);

	parameter<kg_GJ> CO2_GJb := TypeInfo/RekenType/Elektriciteit_Factor * Prijzen/Elektriciteit/CO2_GJ;
	parameter<g_GJ>  NOx_GJb := 0[g_GJ];
	parameter<g_GJ>  SO2_GJb := 0[g_GJ];
	parameter<g_GJ>  VOS_GJb := 0[g_GJ];
	parameter<g_GJ>  TS_GJb  := 0[g_GJ];

	unit<uint32> bron := PlanRegio
	{
		unit<uint32>    ContourSet := RuimtelijkeData/WarmteBronnen/GeoThermie/ContourSet;
		unit<uint32>    pointSet   := ContourSet/pointSet;
		attribute<bool> InContour  := IsDefined(ContourSet/grid[point[Geography/rdc_grids/m100]]), FreeData = "False"; // > value(0, ContourSet);

		unit<uint32> OutsideContourSet := Subset(not(InContour))
		{
			attribute<rdc_meter> Usage_point := bron/point[nr_OrgEntity];
			attribute<pointSet>  Connections := connect(pointSet/point, Usage_point);
			attribute<rdc_meter> Drill_point := pointSet/point[Connections];
			attribute<m>         dist        := value(dist(Usage_point, Drill_point), m);
		}
		attribute<m> dist := VoorkEuren/Afweging/GEOcontour
			? (InContour
				? 0[m]
				: OutsideContourSet/dist[invert(OutsideContourSet/nr_OrgEntity)])
			: const(0[m], planregio);
	}

	container Kosten
	{
		attribute<Eur>      Ki_ow           (PlanRegio) :=
			  (TypeInfo/Ki_kW_min * Schuiven/KostenMin + TypeInfo/Ki_kW_max * Schuiven/KostenMax)
			* max_elem(TypeInfo/P_cap * KostenBaten/CapaciteitsVraagD, TypeInfo/MWth_min) * 1000[kW / MW]
			* LeerCurves/GeoThermie/Curve;

		attribute<Eur_yr>   Kji_ow          (PlanRegio) := Ki_ow * NCW/ow28/AnnualisationFactor;
		attribute<Eur_yr>   Kmi_ow          (PlanRegio) := Ki_ow * NCW/mr28/AnnualisationFactor;

		container           LeidingKosten               := BuisKosten(PlanRegio, TypeInfo/P_cap * KostenBaten/CapaciteitsVraagD);
		attribute<Eur>      Ki_pt           (PlanRegio) := LeidingKosten/aK_m * bron/dist;
		attribute<Eur_yr>   Kji_pt          (PlanRegio) := Ki_pt * NCW/pt28/AnnualisationFactor;
		attribute<Eur_yr>   Kmi_pt          (PlanRegio) := Ki_pt * NCW/mr28/AnnualisationFactor;
		attribute<Eur>      Ki_Totaal       (PlanRegio) := Ki_ow + ki_pt;

		parameter<Eur_GJ>   K_GJ                        := ='TypeInfo/K_GJ/' +RekenstapName;
		parameter<Eur_GJ>   Km_GJ                       := ='TypeInfo/Km_GJ/'+RekenstapName;
		parameter<_yr>      R_OenM                      := 0.5 * TypeInfo/Rj_Onderhoud;

		attribute<Eur_yr>   Kj_pt_adm       (PlanRegio) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_pt_admin     * Ki_pt;
		attribute<Eur_yr>   Kj_pt_oh        (PlanRegio) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_pt_onderhoud * Ki_pt;
		attribute<Eur_yr>   Kj_ow_adm       (PlanRegio) := Leercurves/OenM/Curve * R_OenM * Ki_ow;
		attribute<Eur_yr>   Kj_ow_oh        (PlanRegio) := Leercurves/OenM/Curve * R_OenM * Ki_ow;
		attribute<Eur_yr>   Kj_wd_gas       (PlanRegio) := (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/Kj_wd_gas;
		attribute<Eur_yr>   Km_wd_gas       (PlanRegio) := (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/Km_wd_gas;

		attribute<Eur_yr>   Kj_Totaal       (PlanRegio) := Kj_pt_adm + Kj_pt_oh + Kj_ow_adm + Kj_ow_oh + Kj_WarmteWaarde;
		attribute<Eur_yr>   Km_Totaal       (PlanRegio) := Kj_pt_adm + Kj_pt_oh + Kj_ow_adm + Kj_ow_oh + Km_WarmteWaarde;

		attribute<Eur_yr>   Kj_WarmteWaarde (PlanRegio) := TypeInfo/P_vol * KostenBaten/V_WarmtePrimairD * K_GJ;
		attribute<Eur_yr>   Km_WarmteWaarde (PlanRegio) := TypeInfo/P_vol * KostenBaten/V_WarmtePrimairD * Km_GJ;
		attribute<Eur_yr>   Oj_SDE          (PlanRegio) := TypeInfo/P_vol * KostenBaten/V_WarmtePrimairD * SpecifiekeInstellingen/Beleid/SDE/SDE[TypeInfo/TypeInfoList_rel];
	}
	attribute<Eur>          Oi_Totaal       (PlanRegio) := KostenBaten/Oi_Aansluitbijdrage;
	attribute<Eur>          Ki_Totaal       (PlanRegio) := KostenBaten/Ki_wd_bruto + Kosten/Ki_Totaal; // eenmalige bruto Maatschappelijke investeringskosten (dus zonder aftrenk van aansluitbijdrage)
	attribute<Eur>          Ki_Netto        (PlanRegio) := Ki_Totaal - NCW/ow28/StartDiscountFactor * Oi_Totaal; // : eenmalige investering minus netto aansluitbijdrage
	attribute<Eur_yr>       Km_Totaal       (PlanRegio) := KostenBaten/Km_TotaalD + Kosten/Km_Totaal; // jaarlijkse bruto kosten zonder aftrek van vastrecht en verbruiksvergoeding
	attribute<Eur_yr>       Oji_Netto       (PlanRegio) := KostenBaten/Oji_NettoD  - Kosten/Km_Totaal; // Rentabiliteit: jaarlijkse opbrengst
	attribute<kg_yr>        CO2_Primair     (PlanRegio) := TypeInfo/P_vol * KostenBaten/V_WarmtePrimairD * CO2_GJb;
	attribute<kg_yr>        CO2             (PlanRegio) := (1d - TypeInfo/P_vol) * KostenBaten/CO2_BijstookD + CO2_Primair;
	attribute<GJ_yr>        GJe_Totaal      (PlanRegio) := const(0[GJ_yr], PlanRegio);
	attribute<KG_yr>        CO2_e           (PlanRegio) := const(0[KG_yr], PlanRegio);

	attribute<Eur_yr> Oj_Afweging           (PlanRegio) := 
		  Oji_Netto + kosten/Oj_SDE
		- Kosten/Kji_ow * (1.0 - SpecifiekeInstellingen/Beleid/EIA/ow[TypeInfo/TypeInfoList_rel])
		- Kosten/Kji_pt * (1.0 - SpecifiekeInstellingen/Beleid/EIA/pt)
		+ KostenBaten/KostenD/Bijstook/Kj_wd_gas - Kosten/Kj_wd_gas;

	attribute<bool> RentabiliteitsAfweging (PlanRegio) := VoorkEuren/Afweging/AlwaysGEO 
		? const(true, PlanRegio)
		: Oj_Afweging > 0[Eur_yr];

	attribute<bool>   OldGebruik             (PlanRegio) := IsDefined(BeginStatus/PlanRegioWarmteAllocatie_REMOVE);                                   // een optie (deze of andere) was al in gebruik
	attribute<bool>   GebruiktOptie          (PlanRegio) := BeginStatus/PlanRegioWarmteAllocatie_REMOVE == Classifications/GebiedsOptie/V/Geothermie; // deze optie was al in gebruik;
	attribute<bool>   NewGebruik             (PlanRegio) := VoorkEuren/Afweging/AlwaysGEO 
		? RentabiliteitsAfweging && not(OldGebruik)
		: RentabiliteitsAfweging && bron/InContour && not(OldGebruik);
	attribute<bool>   GebruikOptie           (PlanRegio) := NewGebruik || GebruiktOptie;
	attribute<Eur_yr> Kj_Netto               (PlanRegio) := Ki_Netto * NCW/ow28/AnnualisationFactor - Oji_Netto; // Rentabiliteit: jaarlijkse opbrengsten voor de energieproducent

	container Results := BeginStatus
	{
		container BebouwingMutatie :=
			for_each_ne(Classifications/BebouwingsComponent/name
				, 'PlanRegioOptieResultaat(BeginStatus/Bebouwing/'+Classifications/BebouwingsComponent/name+', Classifications/GebiedsOptie/V/GeoThermie, .../GebruikOptie, BeginStatus/AfnameGebied)'
			);
		container Bebouwing := for_each_nex(Classifications/BebouwingsComponent/name, 'BebouwingMutatie/'+Classifications/BebouwingsComponent/name+'/results', uint32);

		container Factoren
		{
			parameter<float64> Aardgas       := 0.0;
			parameter<float64> Biogas        := 0.0;
			parameter<float64> Biovast       := 0.0;
			parameter<float64> Ondergrond    := 1.0;
			parameter<float64> Opwekking     := 0.0;
			parameter<float64> Elektriciteit := 1.0 / 20.0;
		}

		attribute<Classifications/GebiedsOptie> PlanRegioWarmteAllocatie_REMOVE (PlanRegio) :=
			../GebruikOptie
				? Classifications/GebiedsOptie/V/GeoThermie
				: BeginStatus/PlanRegioWarmteAllocatie_REMOVE;

		container Geothermie
		{
			container VorigePeriode := BeginStatus/GeoThermie;

			attribute<float64> P_vol(PlanRegio)              := VorigePeriode/P_Vol;
			attribute<bool>    heeftNieuwGebruik (PlanRegio) := GebiedsAllocatie/Geothermie/NewGebruik;

			container jaarlijks
			{
				container ge
				{
					attribute<Eur_yr> Kj_ge_hv        (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kj_ge_hv  : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Kj_ge_hv;
					attribute<Eur_yr> Kji_ge_ov       (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kji_ge_ov : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Kji_ge_ov;
					attribute<Eur_yr> Kji_ge_pm       (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kji_ge_pm : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Kji_ge_pm;
	
					attribute<Eur_yr> Kmi_ge_ov       (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kmi_ge_ov : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Kmi_ge_ov;
					attribute<Eur_yr> Kmi_ge_pm       (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kmi_ge_pm : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Kmi_ge_pm;
					attribute<Eur_yr> Om_ge_comfort   (PlanRegio) := const(0[Eur_yr], PlanRegio);

					attribute<Eur_yr> Bji_ge_Aansl    (PlanRegio) := eenmalig/Oi_lv_Aansl * NCW/bw28/AnnualisationFactor;
					attribute<Eur_yr> Oji_ge_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_ge_EIA * NCW/bw28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Oji_ge_EIA;
					attribute<Eur_yr> Omi_ge_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_ge_EIA * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/ge/Omi_ge_EIA;
				}

				container id
				{
					attribute<Eur_yr> Kj_id_gas       (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_id_gas_EH    (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_id_gas_CO2   (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Km_id_gas       (PlanRegio) := const(0[Eur_yr], PlanRegio);

					attribute<Eur_yr> Kj_id_elek      (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_id_elek_EH   (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_id_elek_CO2  (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Km_id_elek      (PlanRegio) := const(0[Eur_yr], PlanRegio);

					attribute<Eur_yr> Kj_id_oh        (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/KostenD/Kj_id_oh : 0[Eur_yr]) + VorigePeriode/jaarlijks/id/Kj_id_oh;
					attribute<Eur_yr> Kj_id_adm       (PlanRegio) := const(0[Eur_yr], PlanRegio);

					attribute<Eur_yr> Kji_id          (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kji_id : 0[Eur_yr]) + VorigePeriode/jaarlijks/id/Kji_id;
					attribute<Eur_yr> Kmi_id          (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kmi_id : 0[Eur_yr]) + VorigePeriode/jaarlijks/id/Kmi_id;

					attribute<Eur_yr> Oji_id_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_id_EIA * NCW/id28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/id/Oji_id_EIA;
					attribute<Eur_yr> Omi_id_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_id_EIA * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/id/Omi_id_EIA;

					attribute<Eur_yr> Oj_id_SDE       (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kji_id_LO       (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kmi_id_LO       (PlanRegio) := const(0[Eur_yr], PlanRegio);	
					attribute<Eur_yr> Kj_id_LO_oh     (PlanRegio) := const(0[Eur_yr], PlanRegio);	
				}

				container wd
				{
					attribute<Eur_yr> Kj_wd_gas       (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/Kj_wd_gas     : 0[Eur_yr];
					attribute<Eur_yr> Kj_wd_gas_EH    (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/Kj_wd_gas_EH  : 0[Eur_yr];
					attribute<Eur_yr> Kj_wd_gas_CO2   (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/Kj_wd_gas_CO2 : 0[Eur_yr];
					attribute<Eur_yr> Km_wd_gas       (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/Km_wd_gas     : 0[Eur_yr];

					attribute<Eur_yr> Kj_wd_elek      (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/SecundairNet/Kj_wd_elek     : 0[Eur_yr];
					attribute<Eur_yr> Kj_wd_elek_EH   (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/SecundairNet/Kj_wd_elek_eh  : 0[Eur_yr];
					attribute<Eur_yr> Kj_wd_elek_CO2  (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/SecundairNet/Kj_wd_elek_co2 : 0[Eur_yr];
					attribute<Eur_yr> Km_wd_elek      (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/SecundairNet/Km_wd_elek     : 0[Eur_yr];

					attribute<Eur_yr> Kj_wd_oh        (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/KostenD/Kj_wd_oh  : 0[Eur_yr]) + VorigePeriode/jaarlijks/wd/Kj_wd_oh;
					attribute<Eur_yr> Kj_wd_adm       (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/KostenD/Kj_wd_adm : 0[Eur_yr]) + VorigePeriode/jaarlijks/wd/Kj_wd_adm;
					attribute<Eur_yr> Kji_wd          (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kji_wd            : 0[Eur_yr]) + VorigePeriode/jaarlijks/wd/Kji_wd;
					attribute<Eur_yr> Kmi_wd          (PlanRegio) := (heeftNieuwGebruik ? KostenBaten/Kmi_wd            : 0[Eur_yr]) + VorigePeriode/jaarlijks/wd/Kmi_wd;

					attribute<Eur_yr> Oji_wd_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_wd_EIA * NCW/wd28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/wd/Oji_wd_EIA;
					attribute<Eur_yr> Omi_wd_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_wd_EIA * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/wd/Omi_wd_EIA;

					attribute<Eur_yr> Oj_wd_SDE       (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kji_wd_Gnet     (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kmi_wd_Gnet     (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_wd_Gnet_oh   (PlanRegio) := const(0[Eur_yr], PlanRegio);
				}

				container pt
				{
					attribute<Eur_yr> Kj_pt_oh        (PlanRegio) := (heeftNieuwGebruik ? Kosten/Kj_pt_oh  : 0[Eur_yr]) + VorigePeriode/jaarlijks/pt/Kj_pt_oh;
					attribute<Eur_yr> Kj_pt_adm       (PlanRegio) := (heeftNieuwGebruik ? Kosten/Kj_pt_adm : 0[Eur_yr]) + VorigePeriode/jaarlijks/pt/Kj_pt_adm;

					attribute<Eur_yr> Kji_pt          (PlanRegio) := (heeftNieuwGebruik ? Kosten/Kji_pt                               : 0[Eur_yr]) + VorigePeriode/jaarlijks/pt/Kji_pt;
					attribute<Eur_yr> Kmi_pt          (PlanRegio) := (heeftNieuwGebruik ? Kosten/Ki_pt * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/pt/Kmi_pt;

					attribute<Eur_yr> Oji_pt_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_pt_EIA * NCW/ow28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/pt/Oji_pt_EIA;
					attribute<Eur_yr> Omi_pt_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_pt_EIA * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/pt/Omi_pt_EIA;
				}

				container ow
				{
					attribute<Eur_yr> Kj_ow_gas       (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_ow_gas_EH    (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_ow_gas_CO2   (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Km_ow_gas       (PlanRegio) := const(0[Eur_yr], PlanRegio);

					attribute<Eur_yr> Kj_ow_elek      (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_ow_elek_EH   (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_ow_elek_CO2  (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Km_ow_elek      (PlanRegio) := const(0[Eur_yr], PlanRegio);

					attribute<Eur_yr> Kj_ow_productie (PlanRegio) := GebruikOptie ? Kosten/Kj_WarmteWaarde : 0[Eur_yr]; // geen opsplitsing naar EH, CO2 etc.

					attribute<Eur_yr> Kj_ow_oh        (PlanRegio) := (heeftNieuwGebruik ? Kosten/Kj_ow_oh  : 0[Eur_yr]) + VorigePeriode/jaarlijks/ow/Kj_ow_oh;
					attribute<Eur_yr> Kj_ow_adm       (PlanRegio) := (heeftNieuwGebruik ? Kosten/Kj_ow_adm : 0[Eur_yr]) + VorigePeriode/jaarlijks/ow/Kj_ow_adm;

					attribute<Eur_yr> Kji_ow          (PlanRegio) := (heeftNieuwGebruik ? Kosten/Kji_ow                               : 0[Eur_yr]) + VorigePeriode/jaarlijks/ow/Kji_ow;
					attribute<Eur_yr> Kmi_ow          (PlanRegio) := (heeftNieuwGebruik ? Kosten/Ki_ow * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/ow/Kmi_ow;

					attribute<Eur_yr> Oji_ow_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_ow_EIA * NCW/ow28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/ow/Oji_ow_EIA;
					attribute<Eur_yr> Omi_ow_EIA      (PlanRegio) := (heeftNieuwGebruik ? eenmalig/Oi_ow_EIA * NCW/mr28/AnnualisationFactor : 0[Eur_yr]) + VorigePeriode/jaarlijks/ow/Omi_ow_EIA;

					attribute<Eur_yr> Oj_ow_SDE       (PlanRegio) := const(0[Eur_yr], PlanRegio);
				}

				container lv
				{
					attribute<Eur_yr> Oji_lv_Aansl    (PlanRegio) := eenmalig/Oi_lv_Aansl * NCW/ow28/AnnualisationFactor;
					attribute<Eur_yr> Omi_lv_Aansl    (PlanRegio) := eenmalig/Oi_lv_Aansl * NCW/mr28/AnnualisationFactor;
					
					attribute<Eur_yr> Oj_lv_verbruik  (PlanRegio) := GebruikOptie ? KostenBaten/Opbrengsten/jaarlijksD/Warmtevraag  : 0[Eur_yr];
					attribute<Eur_yr> Oj_lv_vastrecht (PlanRegio) := GebruikOptie ? KostenBaten/Opbrengsten/jaarlijksD/Oj_vastrecht : 0[Eur_yr];
					attribute<Eur_yr> Oj_lv_SDE       (PlanRegio) := (heeftNieuwGebruik ? kosten/Oj_SDE : 0[Eur_yr]) + VorigePeriode/jaarlijks/lv/Oj_lv_SDE;
				}
			}

			container eenmalig
			{
				attribute<Eur> Oi_lv_Aansl (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Opbrengsten/eenmaligD/Oi_Totaal : 0[Eur];
				attribute<Eur> Ki_ge_ov    (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Ki_ge_ov : 0[Eur];
				attribute<Eur> Ki_ge_pm    (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Ki_ge_pm : 0[Eur];
				attribute<Eur> Oi_ge_EIA   (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Oi_ge_subsidie: 0[Eur];

				attribute<Eur> Ki_id       (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Ki_id_Bruto : 0[Eur];
				attribute<Eur> Oi_id_EIA   (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Ki_id_Bruto * SpecifiekeInstellingen/Beleid/EIA/id : 0[Eur];

				attribute<Eur> Ki_wd       (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Ki_wd_Bruto : 0[Eur];
				attribute<Eur> Oi_wd_EIA   (PlanRegio) := heeftNieuwGebruik ? KostenBaten/Ki_wd_Bruto * SpecifiekeInstellingen/Beleid/EIA/wd : 0[Eur];

				attribute<Eur> Ki_pt       (PlanRegio) := heeftNieuwGebruik ? Kosten/Ki_pt : 0[Eur];
				attribute<Eur> Oi_pt_EIA   (PlanRegio) := heeftNieuwGebruik ? Kosten/Ki_pt * SpecifiekeInstellingen/Beleid/EIA/pt : 0[Eur];

				attribute<Eur> Ki_ow       (PlanRegio) := heeftNieuwGebruik ? Kosten/Ki_ow : 0[Eur];
				attribute<Eur> Oi_ow_EIA   (PlanRegio) := heeftNieuwGebruik ? Kosten/Ki_ow * SpecifiekeInstellingen/Beleid/EIA/ow[TypeInfo/TypeInfoList_rel] : 0[Eur];

				attribute<Eur> Ki_wd_Gnet  (PlanRegio) := const(0[Eur], PlanRegio);
				attribute<Eur> Ki_id_lo    (PlanRegio) := const(0[Eur], PlanRegio);
			}

			container Verbruik
			{
				attribute<Gj_yr> V_id_gas     (PlanRegio) := const(0[Gj_yr], PlanRegio);
				attribute<Gj_yr> V_wd_gas     (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/V_Bijstook : 0[GJ_yr];
				attribute<Gj_yr> V_ow_gas     (PlanRegio) := const(0[Gj_yr], PlanRegio);

				attribute<Gj_yr> V_id_elek    (PlanRegio) := const(0[Gj_yr], PlanRegio);
				attribute<Gj_yr> V_wd_elek    (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/SecundairNet/V_wd_elek : 0[GJ_yr];

				// TODO_OV_RELEASE: gebruik /Invoer/Kengetallen/WarmteBronnen/MetaData/RekenTypes/GeoThermie/Elektriciteit_Factor en EH, en CO2 van elektriciteit
				attribute<Gj_yr> V_ow_elek    (PlanRegio) := GebruikOptie ? TypeInfo/P_vol * KostenBaten/V_WarmtePrimairD * Factoren/Elektriciteit : 0[gj_yr];

				attribute<Gj_yr> V_id_verlies (PlanRegio) := const(0[Gj_yr], PlanRegio); // niet specifiek benoemd, alles in WD: specifiek maken
				attribute<Gj_yr> V_wd_verlies (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/KostenD/Bijstook/V_Verlies : 0[GJ_yr];
				attribute<Gj_yr> V_pt_verlies (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/V_LeidingVerlies : 0[GJ_yr];

				attribute<Gj_yr> V_warmte     (PlanRegio) := GebruikOptie ? KostenBaten/KostenD/V_WarmteVraag : 0[GJ_yr];
				attribute<Gj_yr> V_koude      (PlanRegio) := const(0[Gj_yr], PlanRegio); // geen koude bij RW.

				// generieke netto warmte onttrekking:
				attribute<Gj_yr> V_id_warmte  (PlanRegio) := V_warmte    - V_id_gas + V_id_verlies;
				attribute<Gj_yr> V_wd_warmte  (PlanRegio) := V_id_warmte - V_wd_gas + V_wd_verlies;
				attribute<Gj_yr> V_ow_warmte  (PlanRegio) := V_wd_warmte - V_ow_gas + V_pt_verlies;
				attribute<Gj_yr> V_ow_koude   (PlanRegio) := V_Koude;
				attribute<Gj_yr> V_H2         (PlanRegio) := const(0[Gj_yr], PlanRegio);
			}

			container Uitstoot
			{
				attribute<KG_yr> CO2_id_gas  (PlanRegio) := const(0[KG_yr], PlanRegio); // geen gasverbruik bij LT netten
				attribute<KG_yr> CO2_wd_gas  (PlanRegio) := GebruikOptie ? (1d - TypeInfo/P_vol) * KostenBaten/CO2_BijstookD : 0[kg_yr]; // geen gasverbruik bij LT netten
				attribute<KG_yr> CO2_ow_gas  (PlanRegio) := Verbruik/V_ow_gas * prijzen/Elektriciteit/CO2_GJ;

				attribute<KG_yr> CO2_id_elek (PlanRegio) := Verbruik/V_id_elek * prijzen/Elektriciteit/CO2_GJ;
				attribute<KG_yr> CO2_wd_elek (PlanRegio) := Verbruik/V_wd_elek * prijzen/Elektriciteit/CO2_GJ;
				attribute<KG_yr> CO2_ow_elek (PlanRegio) := GebruikOptie ? TypeInfo/P_vol * KostenBaten/V_WarmtePrimairD * MakeDefined(CO2_GJb, 0[kg_GJ]) : 0[kg_yr];
			}
		}
	}
}
