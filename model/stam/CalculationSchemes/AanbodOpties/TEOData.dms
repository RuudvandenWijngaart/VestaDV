//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template TEOData
{
	// begin case parameters
	unit<uint32> BO;
	container DataComponent;
	parameter<string> ComponentNaam;
	parameter<Celsius> T_sec;
	parameter<bool> IsWKO := true;
	parameter<string> labelConditie := '';
	// end case parameters
	
	container Gebied
	{
		// accumulators
		attribute<float64> n      (BO) := value(BO/Gebied/n, float64);

		attribute<float64> MEAN_x (BO) := BO/Gebied/MEAN_x + rnd_uniform(0, BO, Range(float64, -1.0, 1.0));
		attribute<float64> MEAN_y (BO) := BO/Gebied/MEAN_y + rnd_uniform(0, BO, Range(float64, -1.0, 1.0));
		attribute<float64> SSD_xx (BO) := BO/Gebied/SSD_xx;
		attribute<float64> SSD_xy (BO) := BO/Gebied/SSD_xy;
		attribute<float64> SSD_yy (BO) := BO/Gebied/SSD_yy;
	}
	
	container SelectCandidates
	{
		//controle of gebouw geschikt is en in contour ligt
		parameter<bool> UseContour :=  =IsWKO ? '!AanbodKentallen/BuitenContour' : 'false';
		
		attribute <bool> InWKOContour            (BO) := =UseContour
			? 'IsDefined( RuimtelijkeData/WarmteBronnen/WKO/GeschikteContour/grid[BO/point[Geography/rdc_grids/m100]] )'
			: 'const(true, BO)';	
			
		attribute <bool> InTEOContour            (BO) := =UseContour
			? 'IsDefined( RuimtelijkeData/WarmteBronnen/TEO/GeschikteContour/grid[BO/point[Geography/rdc_grids/m100]] )'
			: 'const(true, BO)';		
			
		unit<uint32> bron := BO
		{
			unit<uint32>    ContourSet := RuimtelijkeData/WarmteBronnen/TEO/ContourSet;
			unit<uint32>    GeschikteContour := RuimtelijkeData/WarmteBronnen/TEO/GeschikteContour;
			unit<uint32>    pointSet   := GeschikteContour/pointSet;
			attribute<bool> InContour  := InTEOcontour;
	
			unit<uint32> OutsideContourSet := Subset(not(InContour))
			{
				attribute<rdc_meter> Usage_point := bron/point[nr_OrgEntity];
				attribute<pointSet>  Connections := connect(pointSet/point, Usage_point);
				attribute<rdc_meter> Drill_point := pointSet/point[Connections];
				attribute<m>         dist        := value(dist(Usage_point, Drill_point), m);
			}
			attribute<m> dist := InContour ? 1[m] : OutsideContourSet/dist[invert(OutsideContourSet/nr_OrgEntity)];
		}
		
		attribute<bool>		KanGebiedsOptie (BO)	:=	Classifications/WarmteOptie/KanGebiedsOptie[BO/WarmteOptie_rel];
		attribute<bool>		LocatieOK		(BO)	:=	InWKOContour && bron/dist <= Kengetallen/Constanten/L_max_TEObron;
		
		attribute<bool>     E_of_Beter      (BO)    :=  =Voorkeuren/Afweging/LTversusWP ? 'const(true, BO)' : 'BO/SchillabelOrDefault_rel <= Classifications/Schillabel/V/E';
			
	}
	attribute<bool>			Geschikt			(BO)	:=	SelectCandidates/LocatieOK && SelectCandidates/E_of_Beter && SelectCandidates/KanGebiedsOptie;
	parameter<classifications/gebruiksgrootteklasse> ow_gebruiksgrootteklasse_rel := last(id(Prijzen_elec));
	
	//Vraag objectgerelateerd in capaciteit en volume
	attribute<kW>			P_sec				(BO)	:=	DataComponent/P_sec,																	Descr = "gevraagde capaciteit aan het secundaire net";
	attribute<kW>			P_sec_primair		(BO)	:=	P_sec * Efficiency/AandeelPrimairVermogen,												Descr = "vermogen dat voor rekening van de primaire bron wordt gerekend";
	attribute<kW>			P_sec_hulp			(BO)	:=	P_sec * Efficiency/AandeelHulpVermogen,													Descr = "vermogen dat voor rekening van de hulpvoorziening wordt gerekend";
	attribute<kW>			P_sec_TEO			(BO)	:=	V_TEO * Efficiency/AandeelTEOVermogen;
	
	attribute<GJ_yr>		V_TEO				(BO)	:=	max_elem(V_Warmte_primair - V_Koude_primair, 0.0[GJ_yr]);
	attribute<GJ_yr>		V_Warmte			(BO)	:=	DataComponent/V_Warmte,																Descr = "jaalijkse volumevraag warmte";
	attribute<GJ_yr>		V_Koude				(BO)	:=	DataComponent/V_Koude,																Descr = "jaarlijkse volumevraag koude";
	attribute<GJ_yr>		V_Warmte_primair	(BO)	:=	DataComponent/V_Wsec_netto * Efficiency/AandeelPrimairVolume,						Descr = "jaalijkse volumevraag warmte";
	attribute<GJ_yr>		V_Koude_primair		(BO)	:=	DataComponent/V_Ksec_netto * Efficiency/AandeelPrimairVolume,						Descr = "jaarlijkse volumevraag koude";
	attribute<GJ_yr>		V_Warmte_hulp		(BO)	:=	DataComponent/V_Wsec_netto * Efficiency/AandeelHulpVolume,							Descr = "jaalijkse volumevraag warmte";
	attribute<GJ_yr>		V_Koude_hulp		(BO)	:=	DataComponent/V_Ksec_netto * Efficiency/AandeelHulpVolume,							Descr = "jaarlijkse volumevraag koude";
	
	attribute<GJ_yr>		V_id_elek			(BO)	:=	DataComponent/V_id_Elek,																Descr = "jaarlijkse elektriciteitsvraag gebouwinstallatie";
	attribute<GJ_yr>		V_wd_elek			(BO)	:=	DataComponent/V_wd_Elek,																Descr = "jaarlijkse elektriciteitsvraag collectieve warmtepomp";
	attribute<GJ_yr>		V_ow_elek			(BO)	:=	Efficiencies/V_elek_WKO * V_Warmte_primair + Efficiencies/V_elek_TEO * V_TEO;
	attribute<GJ_yr>		V_wd_verlies		(BO)	:=	DataComponent/V_wd_verlies;
	
	//Uitstoot en verbruik
	attribute<GJ_yr>		GJe					(BO)	:=	V_id_elek + V_wd_elek,																	Descr = "elektriciteitsverbruik van gebiedsoptie";
	attribute<GJ_yr>		GJw					(BO)	:=	DataComponent/V_WKO,																	Descr = "warmte geleverd uit gebiedsoptie";
	attribute<KG_yr>		CO2					(BO)	:=	Prijzen/Elektriciteit/CO2_GJ * GJe,														Descr = "co2-uitstoot door elektriciteitsverbruik gebiedsoptie";
	
	//Investeringskosten vergoedingen gebouweigenaar
	attribute<Eur>			Ki_ge_pm			(BO)	:=	DataComponent/Kosten/Ki_ge_pm,														Descr = "investeringskosten vergoeding gebouweigenaar projectmanagement";
	attribute<Eur>			Ki_ge_ov			(BO)	:=	DataComponent/Kosten/Ki_ge_ov,														Descr = "investeringskosten vergoeding gebouweigenaar ongerief";
	attribute<Eur>			Ki_ge				(BO)	:=	Ki_ge_ov + Ki_ge_pm,																	Descr = "investeringskosten vergoeding gebouweigenaar";
	attribute<Eur>			Oi_ge_EIA			(BO)	:=	DataComponent/Kosten/Oi_ge_EIA,														Descr = "investeringssubsidie vergoeding gebouweigenaar ongerief";
	attribute<Eur_yr>		Kji_ge				(BO)	:=	(Ki_ge_pm + Ki_ge_ov - Oi_ge_EIA) * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor),	Descr = "geannualiseerde investeringskosten vergoedingen gebouweigenaar";
	
	//Investeringskosten inpandige distributie
	attribute<Eur>			Ki_id				(BO)	:=	DataComponent/Kosten/Ki_id,															Descr = "investeringskosten inpandige distributie";
	attribute<Eur>			Oi_id_EIA			(BO)	:=	Ki_id * SpecifiekeInstellingen/Beleid/EIA/id,											Descr = "investeringssubsidie inpandige distributie";
	attribute<Eur_yr>		Kji_id				(BO)	:=	(Ki_id - Oi_id_EIA) * BO/NcwRefs/_30/AnnualisationFactor,							Descr = "geannualiseerde investeringskosten inpandige distributie";
	
	//Investeringskosten wijkdistributie gebouwgerelateerd
	attribute<Eur>			Ki_wd_gebouw		(BO)	:=	DataComponent/Kosten/Ki_wd,															Descr = "investeringskosten wijkdistributie gebouwgerelateerd";
	attribute<Eur>			Ki_wd_eWP			(BO)	:=	CollectieveWP ? P_sec_hulp * (Kostenkentallen/Ki_eWP_coll + Kostenkentallen/Ki_WOS) : 0 [Eur],							Descr = "investeringskosten voor het installeren van de collectieve elektrische warmtepomp";
	attribute<Eur>			Oi_wd_EIA_gebouw	(BO)	:=	Ki_wd * SpecifiekeInstellingen/Beleid/EIA/wd,											Descr = "investeringssubsidie inpandige distributie";	
	attribute<Eur>			Oi_wd_EIA_eWP		(BO)	:=	Ki_wd * SpecifiekeInstellingen/Beleid/EIA/wd,											Descr = "investeringssubsidie inpandige distributie";	
	attribute<Eur>			Oi_wd_EIA			(BO)	:=	Oi_wd_EIA_gebouw + Oi_wd_EIA_eWP,														Descr = "investeringssubsidie inpandige distributie";	
	attribute<Eur>			Ki_wd				(BO)	:=	Ki_wd_gebouw + Ki_wd_eWP;
	attribute<Eur_yr>		Kji_wd_gebouw		(BO)	:=	(Ki_wd_eWP - Oi_wd_EIA_eWP) * NCW/wd13/AnnualisationFactor,								Descr = "geannualiseerde investeringskosten wijkdistributie";
	attribute<Eur_yr>		Kji_wd_eWP			(BO)	:=	(Ki_wd_gebouw - Oi_wd_EIA_gebouw) * NCW/wd28/AnnualisationFactor,						Descr = "geannualiseerde investeringskosten wijkdistributie";
	attribute<Eur_yr>		Kji_wd				(BO)	:=	Kji_wd_gebouw + Kji_wd_eWP,																Descr = "geannualiseerde investeringskosten wijkdistributie";
	
	//Investeringskosten opwekking gebouwgerelateerd
	attribute<Eur>			Ki_ow_TEO			(BO)	:=	Kostenkentallen/Ki_TEO_var * P_sec_TEO;
	attribute<Eur>			Ki_ow_WKO			(BO)	:=	Kostenkentallen/Ki_WKO_var * P_sec_primair;
	attribute<Eur>			Ki_ow				(BO)	:=	Ki_ow_TEO + Ki_ow_WKO,																	Descr = "investeringskosten WKO doublet";
	attribute<Eur>			Oi_ow_TEO_EIA		(BO)	:=	Ki_ow * SpecifiekeInstellingen/Beleid/EIA/WKO,											Descr = "investeringssubsidie opwekking gebouwgerelateerd";
	attribute<Eur>			Oi_ow_WKO_EIA		(BO)	:=	Ki_ow * SpecifiekeInstellingen/Beleid/EIA/WKO,											Descr = "investeringssubsidie opwekking gebouwgerelateerd";
	attribute<Eur>			Oi_ow_EIA			(BO)	:=	Oi_ow_TEO_EIA + Oi_ow_WKO_EIA,															Descr = "investeringssubsidie opwekking gebouwgerelateerd";
	attribute<Eur_yr>		Kji_ow_TEO			(BO)	:=	(Ki_ow_TEO - Oi_ow_TEO_EIA) * NCW/ow13/AnnualisationFactor,								Descr = "geannualiseerde investeringskosten bronzijde opwekking";
	attribute<Eur_yr>		Kji_ow_WKO			(BO)	:=	(Ki_ow_WKO - Oi_ow_WKO_EIA) * NCW/ow28/AnnualisationFactor,								Descr = "geannualiseerde investeringskosten bronzijde opwekking";
	attribute<Eur_yr>		Kji_ow				(BO)	:=	Kji_ow_TEO + Kji_ow_WKO,																Descr = "geannualiseerde investeringskosten bronzijde opwekking";
	
	//Elektriciteitskosten
	attribute<Eur_yr>		Kj_id_elek_EH		(BO)	:=	DataComponent/Kosten/Kj_id_elek_EH,													Descr = "eindgebruikerskosten elektriciteit individueel: component energieheffing";
	attribute<Eur_yr>		Kj_id_elek_CO2		(BO)	:=	DataComponent/Kosten/Kj_id_elek_CO2,													Descr = "eindgebruikerskosten elektriciteit individueel: component CO2 heffing";
	attribute<Eur_yr>		Kj_id_elek			(BO)	:=	DataComponent/Kosten/Kj_id_elek,														Descr = "eindgebruikerskosten elektriciteit individueel, totaal exclusief btw";
	attribute<Eur_yr>		Km_id_elek			(BO)	:=	DataComponent/Kosten/Km_id_elek,														Descr = "Maatschappelijke kosten elektriciteit individueel";
	
	attribute<Eur_yr>		Kj_wd_elek_EH		(BO)	:=	DataComponent/Kosten/Kj_wd_elek_EH,													Descr = "eindgebruikerskosten elektriciteit collectief: component energieheffing";
	attribute<Eur_yr>		Kj_wd_elek_CO2		(BO)	:=	DataComponent/Kosten/Kj_wd_elek_CO2,													Descr = "eindgebruikerskosten elektriciteit collectief: component CO2 heffing";
	attribute<Eur_yr>		Kj_wd_elek			(BO)	:=	DataComponent/Kosten/Kj_wd_elek,														Descr = "eindgebruikerskosten elektriciteit collectief, totaal exclusief btw";
	attribute<Eur_yr>		Km_wd_elek			(BO)	:=	DataComponent/Kosten/Km_wd_elek,														Descr = "Maatschappelijke kosten elektriciteit collectief";

	attribute<Eur_yr>		Kj_ow_elek			(BO)	:=	V_ow_Elek * Prijzen_elec/KGJ_eindgebruik_excl[ow_gebruiksgrootteklasse_rel],			Descr = "jaarlijkse elektriciteitskosten bron eindgebruiker";
	attribute<Eur_yr>		Km_ow_elek			(BO)	:=	V_ow_Elek * Prijzen_elec/KGJ_Maatschappelijk [ow_gebruiksgrootteklasse_rel],			Descr = "jaarlijkse elektriciteitskosten bron Maatschappelijk";
	attribute<Eur_yr>		Kj_ow_elek_EH		(BO)	:=	V_ow_Elek * Prijzen_elec/KGJ_EnergieHeffing[ow_gebruiksgrootteklasse_rel],				Descr = "energieheffing over elektriciteitsverbruik bron";
	attribute<Eur_yr>		Kj_ow_elek_CO2		(BO)	:=	V_ow_Elek * Prijzen_elec/KGJ_CO2Heffing[ow_gebruiksgrootteklasse_rel],					Descr = "co2heffing over elektriciteitsverbruik bron";

	//Onderhoud en administratie
	attribute<Eur_yr>		Kj_wd_oh_ewp		(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wpColl_onderhoud * Ki_wd_eWP,			Descr = "jaarlijkse onderhoudskosten collectieve warmtepomp";
	attribute<Eur_yr>		Kj_wd_oh			(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wd_onderhoud * Ki_wd + Kj_wd_oh_ewp,	Descr = "jaarlijkse onderhoudskosten wijkdistributie";
	attribute<Eur_yr>		Kj_id_oh			(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_id_onderhoud * Ki_id,					Descr = "jaarlijkse onderhoudskosten inpandige distributie";
	attribute<Eur_yr>		Kj_ow_oh_TEO		(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_TEO_onderhoud * Ki_ow_TEO,				Descr = "jaarlijkse onderhoudskosten uitkoppeling primaire bron";
	attribute<Eur_yr>		Kj_ow_oh_WKO		(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_WKO_onderhoud * Ki_ow_WKO,				Descr = "jaarlijkse onderhoudskosten uitkoppeling primaire bron";
	attribute<Eur_yr>		Kj_ow_oh			(BO)	:=	Kj_ow_oh_TEO + Kj_ow_oh_WKO;
	attribute<Eur_yr>		Kj_oh				(BO)	:=	Kj_id_oh + Kj_wd_oh + Kj_ow_oh,															Descr = "jaarlijkse onderhoudskosten totaal";
	
	attribute<Eur_yr>		Kj_wd_adm_ewp		(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wpColl_admin * Ki_wd_eWP,				Descr = "jaarlijkse administratiekosten collectieve warmtepomp";
	attribute<Eur_yr>		Kj_wd_adm			(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wd_admin * Ki_wd + Kj_wd_oh_ewp,		Descr = "jaarlijkse administratiekosten wijkdistributie";
	attribute<Eur_yr>		Kj_id_adm			(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_id_admin * Ki_id,						Descr = "jaarlijkse administratiekosten inpandige distributie";
	attribute<Eur_yr>		Kj_ow_adm_TEO		(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_TEO_admin * Ki_ow_TEO,					Descr = "jaarlijkse onderhoudskosten uitkoppeling primaire bron";
	attribute<Eur_yr>		Kj_ow_adm_WKO		(BO)	:=	Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_WKO_admin * Ki_ow_WKO,					Descr = "jaarlijkse onderhoudskosten uitkoppeling primaire bron";
	attribute<Eur_yr>		Kj_ow_adm			(BO)	:=	Kj_ow_adm_TEO + Kj_ow_adm_WKO;
	attribute<Eur_yr>		Kj_adm				(BO)	:=	Kj_id_adm + Kj_wd_adm + Kj_ow_adm,														Descr = "jaarlijkse administratiekosten totaal";

	//Opbrengsten
	attribute<Eur>			Oi_Aansl			(BO)	:=	DataComponent/Opbrengsten/Oi_Aansl,													Descr = "initiele opbrengsten uit aansluitbijdrage";
	attribute<Eur_yr>		Oj_verbruik			(BO)	:=	DataComponent/Opbrengsten/Oj_Warmte + DataComponent/Opbrengsten/Oj_Koude,			Descr = "jaarlijkse opbrengsten uit levering";
	attribute<Eur_yr>		Oj_vastrecht		(BO)	:=	DataComponent/Opbrengsten/Oj_Vastrecht,												Descr = "jaarlijkse opbrengsten uit vastrecht";
	attribute<Eur_yr>		Oji_Aansl			(BO)	:=	Oi_Aansl * (NCW/id28/AnnualisationFactor * NCW/id28/StartDiscountFactor),				Descr = "geannualiseerde aansluitbijdrage";
	attribute<Eur_yr>		Om_comfort			(BO)	:=	DataComponent/Opbrengsten/Om_comfort,												Descr = "Maatschappelijke opbrengsten door koudelevering";
	attribute<Eur_yr>		Oj_SDE				(BO)	:=	GJw [Gj_yr] * SpecifiekeInstellingen/Beleid/SDE/SDE_WKO [Eur_Gj],						Descr = "jaarlijkse opbrengsten uit SDE op lage temperatuur warmte";		
		
	//Netto contributiemarge
	attribute<Eur_yr>		Oj_totaal			(BO)	:=	Oji_aansl + Oj_verbruik + Oj_vastrecht + Oj_SDE,	        							Descr = "totale jaarlijkse opbrengsten";
	attribute<Eur_yr>		Kji_totaal			(BO)	:=	Kji_id + Kji_wd + Kji_ow + Kji_ge,														Descr = "totale jaarlijkse kapitaallasten";
	attribute<Eur_yr>		Kj_totaal			(BO)	:=	Kj_id_elek + Kj_wd_elek + Kj_ow_elek + Kj_oh + Kj_adm,									Descr = "totale jaarlijkse kapitaallasten";
	
	attribute<Eur_yr>		Kj_eWP_ref			(BO)	:=	DataComponent/RetabiliteitWP/Delta_totaal;
	
	attribute<Eur_yr>		Contributiemarge	(BO)	:=	Oj_totaal - Kji_totaal - Kj_totaal + Kj_eWP_ref,	Descr = "Netto contributiemarge per object";																																	
	
	//selectie van geschikte kandidaten uit alle bebouwingsobjecten op basis van rentabiliteit en geselecteerde criteria
	attribute<bool>		RentabiliteitsAfweging	(BO)	:=	Contributiemarge > 0[Eur_yr],															Descr = "heeft dit bebouwingsobject individueel een positieve aansluitmarge, ja of nee";
	attribute<bool>		MarginaleAfweging		(BO)	:=	geschikt && RentabiliteitsAfweging;
	attribute<bool>		WasAllocated			(BO)	:=	not(SelectCandidates/kanGebiedsOptie);
	attribute<bool>		Toegestaan				(BO)	:=	MarginaleAfweging && !WasAllocated;

	unit<uint32>		AllowedObjects	:=	select_with_org_rel(Toegestaan)
	{
		attribute<string> label := '(' + BO/label[org_rel]+')';
	}
}