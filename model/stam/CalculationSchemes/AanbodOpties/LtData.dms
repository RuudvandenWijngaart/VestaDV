//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template LtData
{
	// begin case parameters
	unit<uint32> BO;
	container DataComponent;
	parameter<string> ComponentNaam;
	parameter<Celsius> T_sec;
	parameter<bool> IsWKO := false;
	parameter<string> labelConditie := '';
	// end case parameters

	//selectie op basis van eisen potentiecontour en minimaal schillabel, indien van toepassing
	parameter<bool> UseContour := =IsWKO
		? '!AanbodKentallen/BuitenContour'
		: 'false'
		, Descr = "indien de gebiedsoptie WKO is wordt gebruik gemaakt van een potentiecontour";

	attribute<bool> InContour                (BO) := = UseContour
		? 'IsDefined( RuimtelijkeData/WarmteBronnen/WKO/GeschikteContour/grid[RuimtelijkeVraagComponent/point[Geography/rdc_grids/m100]] )'
		: 'const(true, BO)'                                                                                                                           ,Descr = "controle of objecten wel of niet binnen de potentiecontour vallen";

	attribute<bool> LabelOK                  (BO) :=  =Voorkeuren/Afweging/LTversusWP ? 'const(true, BO)' : 'BO/SchillabelOrDefault_rel <= Classifications/Schillabel/V/E';
	
	attribute<bool> KanGebiedsOptie          (BO) := Classifications/WarmteOptie/KanGebiedsOptie[BO/WarmteOptie_rel];
	attribute<bool> Geschikt                 (BO) := =(UseContour ? 'InContour && ' : '') 
		+ 'LabelOK && KanGebiedsOptie'       ,Descr = "controle of het minimum vereiste schillabel aanwezig is";

	//Vraag objectgerelateerd in capaciteit en volume
	attribute<kW>    P_sec                   (BO) := DataComponent/P_sec                                                                              ,Descr = "gevraagde capaciteit aan het secundaire net";
	attribute<kW>    P_sec_primair           (BO) := P_sec * Efficiency/AandeelPrimairVermogen                                                        , Descr = "vermogen dat voor rekening van de primaire bron wordt gerekend";
	attribute<kW>    P_sec_hulp              (BO) := P_sec * Efficiency/AandeelHulpVermogen                                                           , Descr = "vermogen dat voor rekening van de hulpvoorziening wordt gerekend";

	attribute<GJ_yr> V_Warmte                (BO) := DataComponent/V_Warmte                                                                           , Descr = "jaalijkse volumevraag warmte";
	attribute<GJ_yr> V_Koude                 (BO) := DataComponent/V_Koude                                                                            , Descr = "jaarlijkse volumevraag koude";
	attribute<GJ_yr> V_Warmte_primair        (BO) := DataComponent/V_Wsec_netto * Efficiency/AandeelPrimairVolume                                     , Descr = "jaalijkse volumevraag warmte";
	attribute<GJ_yr> V_Koude_primair         (BO) := DataComponent/V_Ksec_netto * Efficiency/AandeelPrimairVolume                                     , Descr = "jaarlijkse volumevraag koude";
	attribute<GJ_yr> V_Warmte_hulp           (BO) := DataComponent/V_Wsec_netto * Efficiency/AandeelHulpVolume                                        , Descr = "jaalijkse volumevraag warmte";
	attribute<GJ_yr> V_Koude_hulp            (BO) := DataComponent/V_Ksec_netto * Efficiency/AandeelHulpVolume                                        , Descr = "jaarlijkse volumevraag koude";

	attribute<GJ_yr> V_id_elek               (BO) := DataComponent/V_id_Elek                                                                          , Descr = "jaarlijkse elektriciteitsvraag gebouwinstallatie";
	attribute<GJ_yr> V_wd_elek               (BO) := DataComponent/V_wd_Elek                                                                          , Descr = "jaarlijkse elektriciteitsvraag collectieve warmtepomp";
	attribute<GJ_yr> V_wd_verlies            (BO) := DataComponent/V_wd_verlies;

	//Uitstoot en verbruik
	attribute<GJ_yr>  GJe                    (BO) := V_id_elek + V_wd_elek                                                                            , Descr = "elektriciteitsverbruik van gebiedsoptie";
	attribute<GJ_yr>  GJw                    (BO) := V_warmte - GJe                                                                                   , Descr = "warmte geleverd uit gebiedsoptie";
	attribute<KG_yr>  CO2                    (BO) := Prijzen/Elektriciteit/CO2_GJ * GJe                                                               , Descr = "co2-uitstoot door elektriciteitsverbruik gebiedsoptie";

	//Investeringskosten vergoedingen gebouweigenaar
	attribute<Eur>    Ki_ge_pm               (BO) := DataComponent/Kosten/Ki_ge_pm                                                                    , Descr = "investeringskosten vergoeding gebouweigenaar projectmanagement";
	attribute<Eur>    Ki_ge_ov               (BO) := DataComponent/Kosten/Ki_ge_ov                                                                    , Descr = "investeringskosten vergoeding gebouweigenaar ongerief";
	attribute<Eur>    Ki_ge                  (BO) := Ki_ge_ov + Ki_ge_pm                                                                              , Descr = "investeringskosten vergoeding gebouweigenaar";
	attribute<Eur>    Oi_ge_EIA              (BO) := DataComponent/Kosten/Oi_ge_EIA                                                                   , Descr = "investeringssubsidie vergoeding gebouweigenaar ongerief";
	attribute<Eur_yr> Kji_ge                 (BO) := (Ki_ge_pm + Ki_ge_ov - Oi_ge_EIA) * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor), Descr = "geannualiseerde investeringskosten vergoedingen gebouweigenaar";
	attribute<Eur_yr> Kji_ge_pm              (BO) := Ki_ge_pm * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor);
	attribute<Eur_yr> Kji_ge_ov              (BO) := Ki_ge_ov * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor);

	//Investeringskosten inpandige distributie
	attribute<Eur>    Ki_id                  (BO) := DataComponent/Kosten/Ki_id                                                                       , Descr = "investeringskosten inpandige distributie";
	attribute<Eur>    Oi_id_EIA              (BO) := Ki_id * SpecifiekeInstellingen/Beleid/EIA/id                                                     , Descr = "investeringssubsidie inpandige distributie";
	attribute<Eur_yr> Kji_id                 (BO) := (Ki_id - Oi_id_EIA) * BO/NcwRefs/_30/AnnualisationFactor                                         , Descr = "geannualiseerde investeringskosten inpandige distributie";

	//Investeringskosten wijkdistributie gebouwgerelateerd
	attribute<Eur>    Ki_wd_pandOS           (BO) := DataComponent/Kosten/Ki_wd_pandOS;
	attribute<Eur>    Ki_wd_gebouw           (BO) := DataComponent/Kosten/Ki_wd + Ki_wd_pandOS                                                        , Descr = "investeringskosten wijkdistributie gebouwgerelateerd";
	attribute<Eur>    Ki_wd_eWP              (BO) := CollectieveWP ? P_sec_hulp * (Kostenkentallen/Ki_eWP_coll + Kostenkentallen/Ki_WOS) : 0 [Eur]    , Descr = "investeringskosten voor het installeren van de collectieve elektrische warmtepomp";
	attribute<Eur>    Oi_wd_EIA_gebouw       (BO) := Ki_wd * SpecifiekeInstellingen/Beleid/EIA/wd                                                     , Descr = "investeringssubsidie inpandige distributie";
	attribute<Eur>    Oi_wd_EIA_eWP          (BO) := Ki_wd * SpecifiekeInstellingen/Beleid/EIA/wd                                                     , Descr = "investeringssubsidie inpandige distributie";
	attribute<Eur>    Oi_wd_EIA              (BO) := Oi_wd_EIA_gebouw + Oi_wd_EIA_eWP                                                                 , Descr = "investeringssubsidie inpandige distributie";
	attribute<Eur>    Ki_wd                  (BO) := Ki_wd_gebouw + Ki_wd_eWP;
	attribute<Eur_yr> Kji_wd_gebouw          (BO) := (Ki_wd_eWP - Oi_wd_EIA_eWP) * NCW/wd13/AnnualisationFactor                                       , Descr = "geannualiseerde investeringskosten wijkdistributie";
	attribute<Eur_yr> Kji_wd_eWP             (BO) := (Ki_wd_gebouw - Oi_wd_EIA_gebouw) * NCW/wd28/AnnualisationFactor                                 , Descr = "geannualiseerde investeringskosten wijkdistributie";
	attribute<Eur_yr> Kji_wd                 (BO) := Kji_wd_gebouw + Kji_wd_eWP                                                                       , Descr = "geannualiseerde investeringskosten wijkdistributie";

	//Investeringskosten opwekking gebouwgerelateerd
	attribute<Eur>    Ki_ow_Uitkoppel        (BO) := P_sec_primair * Kostenkentallen/Ki_uitkoppel                                                     , Descr = "investeringskosten voor het uitkoppelen van de primaire bron";
	attribute<Eur>    Ki_ow_buffer           (BO) := const(Kostenkentallen/Ki_buffer, BO)                                                             , Descr = "voorlopige inschatting van investeringskosten voor warmtebuffer";
	attribute<Eur>    Ki_ow                  (BO) := Ki_ow_Uitkoppel + Ki_ow_buffer                                                                   , Descr = "investeringskosten opwekking gebouwgerelateerd";
	attribute<Eur>    Oi_ow_EIA              (BO) := Ki_ow * SpecifiekeInstellingen/Beleid/EIA/LT                                                     , Descr = "investeringssubsidie opwekking gebouwgerelateerd";
	attribute<Eur_yr> Kji_ow                 (BO) := (Ki_ow - Oi_ow_EIA) * NCW/ow28/AnnualisationFactor                                               , Descr = "geannualiseerde investeringskosten bronzijde opwekking";

	//Elektriciteitskosten
	attribute<Eur_yr> Kj_id_elek_EH          (BO) := DataComponent/Kosten/Kj_id_elek_EH                                                               , Descr = "eindgebruikerskosten elektriciteit individueel: component energieheffing";
	attribute<Eur_yr> Kj_id_elek_CO2         (BO) := DataComponent/Kosten/Kj_id_elek_CO2                                                              , Descr = "eindgebruikerskosten elektriciteit individueel: component CO2 heffing";
	attribute<Eur_yr> Kj_id_elek             (BO) := DataComponent/Kosten/Kj_id_elek                                                                  , Descr = "eindgebruikerskosten elektriciteit individueel, totaal exclusief btw";
	attribute<Eur_yr> Km_id_elek             (BO) := DataComponent/Kosten/Km_id_elek                                                                  , Descr = "Maatschappelijke kosten elektriciteit individueel";

	attribute<Eur_yr> Kj_wd_elek_EH          (BO) := DataComponent/Kosten/Kj_wd_elek_EH                                                               , Descr = "eindgebruikerskosten elektriciteit collectief: component energieheffing";
	attribute<Eur_yr> Kj_wd_elek_CO2         (BO) := DataComponent/Kosten/Kj_wd_elek_CO2                                                              , Descr = "eindgebruikerskosten elektriciteit collectief: component CO2 heffing";
	attribute<Eur_yr> Kj_wd_elek             (BO) := DataComponent/Kosten/Kj_wd_elek                                                                  , Descr = "eindgebruikerskosten elektriciteit collectief, totaal exclusief btw";
	attribute<Eur_yr> Km_wd_elek             (BO) := DataComponent/Kosten/Km_wd_elek                                                                  , Descr = "Maatschappelijke kosten elektriciteit collectief";

	//Onderhoud en administratie
	attribute<Eur_yr> Kj_wd_oh_ewp           (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wpColl_onderhoud * Ki_wd_eWP                     , Descr = "jaarlijkse onderhoudskosten collectieve warmtepomp";
	attribute<Eur_yr> Kj_wd_oh               (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wd_onderhoud * Ki_wd + Kj_wd_oh_ewp              , Descr = "jaarlijkse onderhoudskosten wijkdistributie";
	attribute<Eur_yr> Kj_id_oh               (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_id_onderhoud * Ki_id                             , Descr = "jaarlijkse onderhoudskosten inpandige distributie";
	attribute<Eur_yr> Kj_ow_oh               (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_ow_onderhoud * Ki_ow                             , Descr = "jaarlijkse onderhoudskosten uitkoppeling primaire bron";
	attribute<Eur_yr> Kj_oh                  (BO) := Kj_id_oh + Kj_wd_oh + Kj_ow_oh                                                                   , Descr = "jaarlijkse onderhoudskosten totaal";

	attribute<Eur_yr> Kj_wd_adm_ewp          (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wpColl_admin * Ki_wd_eWP                         , Descr = "jaarlijkse administratiekosten collectieve warmtepomp";
	attribute<Eur_yr> Kj_wd_adm              (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wd_admin * Ki_wd + Kj_wd_oh_ewp                  , Descr = "jaarlijkse administratiekosten wijkdistributie";
	attribute<Eur_yr> Kj_id_adm              (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_id_admin * Ki_id                                 , Descr = "jaarlijkse administratiekosten inpandige distributie";
	attribute<Eur_yr> Kj_ow_adm              (BO) := Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_ow_admin * Ki_ow                                 , Descr = "jaarlijkse administratiekosten uitkoppeling primaire bron";
	attribute<Eur_yr> Kj_adm                 (BO) := Kj_id_adm + Kj_wd_adm + Kj_ow_adm                                                                , Descr = "jaarlijkse administratiekosten totaal";

	//Opbrengsten
	attribute<Eur> 	Oi_Aansl                 (BO) := DataComponent/Opbrengsten/Oi_Aansl                                                               , Descr = "initiele opbrengsten uit aansluitbijdrage";
	attribute<Eur_yr> Oj_verbruik            (BO) := DataComponent/Opbrengsten/Oj_Warmte + DataComponent/Opbrengsten/Oj_Koude                         , Descr = "jaarlijkse opbrengsten uit levering";
	attribute<Eur_yr> Oj_vastrecht           (BO) := DataComponent/Opbrengsten/Oj_Vastrecht                                                           , Descr = "jaarlijkse opbrengsten uit vastrecht";
	attribute<Eur_yr> Oji_Aansl              (BO) := Oi_Aansl * (NCW/id28/AnnualisationFactor * NCW/id28/StartDiscountFactor)                         , Descr = "geannualiseerde aansluitbijdrage";
	attribute<Eur_yr> Om_comfort             (BO) := DataComponent/Opbrengsten/Om_comfort                                                             , Descr = "Maatschappelijke opbrengsten door koudelevering";
	attribute<Eur_yr> Oj_SDE                 (BO) := GJw [Gj_yr] * SpecifiekeInstellingen/Beleid/SDE/SDE_LT [Eur_Gj]                                  , Descr = "jaarlijkse opbrengsten uit SDE op lage temperatuur warmte";

	//Netto contributiemarge
	attribute<Eur_yr> Oj_totaal              (BO) := Oji_aansl + Oj_verbruik + Oj_vastrecht + Oj_SDE                                                  , Descr = "totale jaarlijkse opbrengsten";
	attribute<Eur_yr> Kji_totaal             (BO) := Kji_id + Kji_wd + Kji_ow + Kji_ge                                                                , Descr = "totale jaarlijkse kapitaallasten";
	attribute<Eur_yr> Kj_totaal              (BO) := Kj_id_elek + Kj_wd_elek + Kj_oh + Kj_adm                                                         , Descr = "totale jaarlijkse kapitaallasten";

	attribute<Eur_yr> Kj_eWP_ref             (BO) := DataComponent/RetabiliteitWP/Delta_totaal;

	attribute<Eur_yr> Contributiemarge       (BO) := Oj_totaal - Kji_totaal - Kj_totaal + Kj_eWP_ref                                                  , Descr = "Netto contributiemarge per object";
	
	//selectie van geschikte kandidaten uit alle bebouwingsobjecten op basis van rentabiliteit en geselecteerde criteria
	attribute<bool>   RentabiliteitsAfweging (BO) := Contributiemarge > 0[Eur_yr]                                                                     , Descr = "heeft dit bebouwingsobject individueel een positieve aansluitmarge, ja of nee";
	attribute<bool>   MarginaleAfweging      (BO) := geschikt && RentabiliteitsAfweging                                                               , Descr = "is zowel de aansluitmarge positief als het minimale schillabel aanwezig, ja of nee";
	attribute<bool>   WasAllocated           (BO) := not(kanGebiedsOptie)                                                                             , Descr = "is het gebouw al eerder aangesloten op een andere verwarmingsoptie, ja of nee";
	attribute<bool>   Toegestaan             (BO) := MarginaleAfweging && !WasAllocated                                                               , Descr = "selectie op alle bebouwingsobjecten dioe voldoen aan de gestelde criteria";

	unit<uint32> AllowedObjects := select_with_org_rel(Toegestaan)
	{
		attribute<string>    label := '(' + BO/label[org_rel]+')', Descr = "koppelveld om relatie tussen eerder domein en domein van geselecteerde kandidaten te leggen";
		attribute<rdc_meter> point := BO/point[org_rel];
	}
}