//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template TEO
{
	// begin case parameters
	container BeginStatus;
	container AanbodKentallen;
	container EnergiePrijzen;
	parameter<yr_uint16> ZichtJaar;
	// end case parameters
	
	parameter<Classifications/gebiedsOptie> GebiedsOptie_rel := Classifications/gebiedsOptie/V/TEO;

	unit<uint8>  WkoComponent := Classifications/WoonUtilComponent;
	unit<uint32> PlanRegio    := Invoer/SpecifiekeInstellingen/PlanRegio;
	unit<uint8>  Prijzen_elec := Prijzen/Elektriciteit/Staffel;

	container Bebouwing := BeginStatus/Bebouwing;

	parameter<Celsius> T_ow              := 15[Celsius]   , Descr = "brontemperatuur";
	parameter<Celsius> T_sec             := 15[Celsius]   , Descr = "temperatuur in het secundaire net";
	parameter<bool>    CollectieveWP     := T_ow < T_sec  , Descr = "is er een collectieve warmtepomp nodig ja/nee";
	parameter<bool>    KoudeBeschikbaar  := false         , Descr = "wordt er collectief koude geleverd ja/nee";

	// =========  Enkele zaken op gebouwniveau worden op gelijke wijze bepaalt als MT opties
	container KostenBaten
	{
		attribute<string> BCname(WkoComponent) := WkoComponent/name;
		container KanGebiedsOptie := for_each_nednv( BCname
			, replace('float64(Classifications/WarmteOptie/KanGebiedsOptie[bebouwing/@BC/WarmteOptie_rel])', '@BC', BCname)
			, bebouwing, BCname, float64
			);

		container WarmteVraag     := for_each_ne(BCname, replace('CalculationSchemes/WarmteVraagT(bebouwing/@BC, T_sec, false, KanGebiedsOptie/@BC)', '@BC', BCname));
		container Kostenkentallen := Kengetallen/MTkentallen/Kosten_MT(LeerCurves/MTnet/curve, LeerCurves/OenM/curve, LeerCurves/Inpand/curve);

		container KostenD
		{
			container Wonen
			{
				container bw := CalculationSchemes/KostenWoningen(WarmteVraag/BestaandeWoning/BO, PlanRegio);                                 // berekeningen op objectniveau bestaande woningen
				container nw := = Classifications/BebouwingsComponentBase/isActive[Classifications/BebouwingsComponentBase/V/NieuwbouwWoning] // berekeningen op objectniveau nieuwbouw woningen
					? 'CalculationSchemes/KostenWoningen(WarmteVraag/NieuwbouwWoning/BO, PlanRegio)'
					: 'Model/CalculationSchemes/BebouwingsComponentDoetNietMee()';
			}
			container Utiliteit
			{
				container bu := CalculationSchemes/KostenUtiliteit(WarmteVraag/BestaandeUtil/BO, PlanRegio);                                  // berekeningen op objectniveau bestaande utiliteit
				container nu := = Classifications/BebouwingsComponentBase/isActive[Classifications/BebouwingsComponentBase/V/NieuwbouwUtil]   // berekeningen op objectniveau nieuwbouw utiliteit
					? 'CalculationSchemes/KostenUtiliteit(WarmteVraag/NieuwbouwUtil/BO, PlanRegio)'
					: 'Model/CalculationSchemes/BebouwingsComponentDoetNietMee()';
			}
		}
	}

	// =========  Invoerkentallen over kosten en performance worden opgehaald en verwerkt met leercurves
	container Efficiency      := Kengetallen/Efficiency/Efficiency_LT(T_ow, T_sec);
	container Kostenkentallen := Kengetallen/LTkentallen/Kosten_LT(Leercurves/Inpand/Curve, Leercurves/eWPww/Curve, Leercurves/LTnet/Curve, Leercurves/MTnet/Curve);

	// =========  Voor alle woon en utiliteit bebouwingscomponenten worden op gebouwniveau attributen voor kosten en energie bepaald
	container BestaandeWoningData := WKOWoningData(bebouwing/BestaandeWoning, KostenBaten/WarmteVraag/BestaandeWoning, false, KoudeBeschikbaar, KostenBaten/KostenD/Wonen/bw);
	container NieuwbouwWoningData := WKOWoningData(bebouwing/NieuwbouwWoning, KostenBaten/WarmteVraag/NieuwbouwWoning, true , KoudeBeschikbaar, KostenBaten/KostenD/Wonen/nw);
	container BestaandeUtilData   := WKOUtilData  (bebouwing/BestaandeUtil,   KostenBaten/WarmteVraag/BestaandeUtil  , false, KoudeBeschikbaar, KostenBaten/KostenD/Utiliteit/bu);
	container NieuwbouwUtilData   := WKOUtilData  (bebouwing/NieuwbouwUtil,   KostenBaten/WarmteVraag/NieuwbouwUtil  , true , KoudeBeschikbaar, KostenBaten/KostenD/Utiliteit/nu);

	container CandidateSets := for_each_ne(WkoComponent/name, replace('TEOData(bebouwing/@WC, @WCData, ''@WC'', T_sec)', '@WC', WkoComponent/name));

	unit <uint32> UnitedCandidates := ='union_unit('+AsItemList('CandidateSets/' + WkoComponent/name + '/AllowedObjects')+')'
	, DialogType = "Map"
	, DialogData = "point"
	{
		attribute<string>    label            := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/AllowedObjects/label') + ')', DialogType = "labelText";
		attribute<.>         Partitioning     := id(.);
		attribute<rdc_meter> point            := point_yx(MEAN_Y, MEAN_X, rdc_meter);

		attribute<Eur_yr>    Oj_verbruik      := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Oj_verbruik               [CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<Eur_yr>    Contributiemarge := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Contributiemarge          [CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<kW>        P_sec            := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/DataComponent/P_sec       [CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<m>         LengthProxy      := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/SelectCandidates/bron/dist[CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';

		attribute<float64>   n                := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Gebied/n     [CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<float64>   MEAN_x           := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Gebied/MEAN_x[CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<float64>   MEAN_y           := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Gebied/MEAN_y[CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<float64>   SSD_xx           := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Gebied/SSD_xx[CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<float64>   SSD_xy           := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Gebied/SSD_xy[CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
		attribute<float64>   SSD_yy           := ='union_data(., ' + asItemList('CandidateSets/' + WkoComponent/name + '/Gebied/SSD_yy[CandidateSets/' + WkoComponent/name + '/AllowedObjects/org_rel]') + ')';
	}

	parameter<uint32> NrIterations: [25];
	unit<uint32> Iteration := Range(uint32, 0, NrIterations)
	{
		attribute<string> name := 'I'+string(id(.));
		attribute<string> Prev := MakeDefined(name[sub_or_null(id(.),1)] + '/SelectedClusters', 'UnitedCandidates');

		attribute<.> NrSelectedObjects          := ='union_data(Iteration, '+AsItemList('#Iterations/'+Iteration/name+'/Selected')+')';
		attribute<.> CumulNrPrevSelectedObjects := #(BeginStatus/Wko15_15/Cluster) + cumulate(NrSelectedObjects) - NrSelectedObjects;
	}

	container Iterations := for_each_ne(Iteration/name, 'WKOIter(' + Iteration/Prev + ', UnitedCandidates)');
	
	// decouple the cluster to the individual object level to support reporting of the allocation result
	unit<uint32> Selected := ='union_unit('+asItemList('Iterations/'+Iteration/name+'/Selected')+')', DialogType = "Map", DialogData = "point"
	{
		attribute<rdc_meter> point            := ='union_data(., '+asItemList('Iterations/' + Iteration/name + '/Selected/point')+')';
		attribute<string>    label            := ='union_data(., '+asItemList('Iterations/' + Iteration/name + '/Selected/label')+')';
		attribute<kW>        P_sec            := sum(UnitedCandidates/P_sec, Partitioning);
		attribute<Eur_yr>    Contributiemarge := sum(UnitedCandidates/Contributiemarge, Partitioning);
		attribute<m>         LengthProxy      := min(UnitedCandidates/LengthProxy, Partitioning);

		attribute<.>         Partitioning (UnitedCandidates) := ='value(MakeDefined('+asItemList('Iterations/'+Iteration/name+'/Selected/Partitioning+Iteration/CumulNrPrevSelectedObjects['+string(id(Iteration))+']')+'),.)';

		//Afweging tot aansluiten op clusterniveau, inclusief berekening bronkosten vast deel
		attribute<MW>        P_sec_MW         := P_sec * 0.001[MW / kW];
		attribute<MW>        P_bronnet        := P_sec_MW * Efficiency/AandeelPrimairVermogen;
		container            LeidingKosten    := BuisKostenBC(Selected, P_bronnet);

		attribute<Eur>    Ki_wd               := ='union_data(., ' + AsItemList('Iterations/'+Iteration/name + '/Selected/Ki_wd') + ')';
		attribute<Eur_yr> Kj_wd_oh            := Ki_wd * Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wd_onderhoud;
		attribute<Eur_yr> Kj_wd_adm           := Ki_wd * Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_wd_admin;

		attribute<Eur>    Oi_wd_EIA           := Ki_wd * SpecifiekeInstellingen/Beleid/EIA/wd , Descr ="investeringssubsidie wijkdistributie";
		attribute<Eur_yr> Kji_wd              := Ki_wd     * NCW/wd28/AnnualisationFactor     , Descr ="jaarlijkse kapitaallasten wijkdistributie";
		attribute<Eur_yr> Oji_wd_EIA          := Oi_wd_EIA * NCW/wd28/AnnualisationFactor     , Descr ="jaarlijkse subsidie wijkdistributie";

		attribute<Eur>    Ki_ow_WKO           := ='union_data(., '+AsItemList('Iterations/'+Iteration/name+'/Selected/Ki_ow_WKO') + ')';
		attribute<Eur>    Ki_ow_TEO           := ='union_data(., '+AsItemList('Iterations/'+Iteration/name+'/Selected/Ki_ow_bronleiding') +')';

		attribute<Eur>    Ki_ow               := Ki_ow_TEO + Ki_ow_WKO;
		attribute<Eur_yr> Kj_ow_TEO_oh        := Ki_ow_TEO * Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_TEO_onderhoud;
		attribute<Eur_yr> Kj_ow_TEO_adm       := Ki_ow_TEO * Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_TEO_admin;
		attribute<Eur_yr> Kj_ow_WKO_oh        := Ki_ow_WKO * Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_WKO_onderhoud;
		attribute<Eur_yr> Kj_ow_WKO_adm       := Ki_ow_WKO * Leercurves/OenM/Curve * Kengetallen/Onderhoud/R_WKO_admin;
		attribute<Eur_yr> Kj_ow_oh            := Kj_ow_TEO_oh  + Kj_ow_WKO_oh;
		attribute<Eur_yr> Kj_ow_adm           := Kj_ow_TEO_adm + Kj_ow_WKO_adm;

		attribute<Eur>    Oi_ow_EIA           := Ki_ow * SpecifiekeInstellingen/Beleid/EIA/LT , Descr ="investeringssubsidie opwekking";
		attribute<Eur_yr> Oji_ow_EIA          := Oi_ow_EIA * NCW/ow28/AnnualisationFactor     , Descr ="jaarlijkse subsidie opwekking";
		attribute<Eur_yr> Kji_ow              := Ki_ow     * NCW/ow28/AnnualisationFactor;

		attribute<Eur_yr> Oji_netto           :=  Contributiemarge
			- Kji_ow - Kji_wd - Kj_wd_oh - Kj_wd_adm - Kj_ow_oh - Kj_ow_adm
			+ Oji_ow_EIA + Oji_wd_EIA;

		attribute<bool> Afweging (selected) := VoorkEuren/Afweging/LTversusWP ? const(true, selected) : Oji_netto > 0[Eur_yr];
	}
	unit<uint32> RendabelCluster := subset(Selected/Afweging)
	{
		attribute<Selected>  Selected_rel := nr_OrgEntity;
		attribute<rdc_meter> point        := Selected/point[nr_OrgEntity];

		attribute<.>         Partitioning (UnitedCandidates) := invert(nr_OrgEntity)[Selected/Partitioning];
	}
	unit<uint32> NewAfnameGebied := union_unit(BeginStatus/AfnameGebied, RendabelCluster) 
	{
		attribute<Classifications/GebiedsOptie> GebiedsOptie_rel := union_data(., BeginStatus/AfnameGebied/GebiedsOptie_rel, const(Classifications/GebiedsOptie/V/TEO, RendabelCluster));
		attribute<string>                       label            := union_data(., BeginStatus/AfnameGebied/label           , const('TEO', RendabelCluster));
	}

	attribute<uint32> NrAllowedObjects          (WkoComponent) := ='union_data(WkoComponent, '+AsItemList('#CandidateSets/'+WkoComponent/name+'/AllowedObjects') + ')';
	attribute<uint32> NrAllObjects              (WkoComponent) := ='union_data(WkoComponent, '+AsItemList('#CandidateSets/'+WkoComponent/name+'/BO') + ')';
	attribute<uint32> CumulNrPrevAllowedObjects (WkoComponent) := cumulate(NrAllowedObjects)-NrAllowedObjects;
	attribute<uint32> CumulNrPrevAllObjects     (WkoComponent) := cumulate(NrAllObjects)-NrAllObjects;

	unit<uint32> AllObjects := ='union_unit('+AsItemList('ObjectResults/'+WkoComponent/name+'/BO')+')'
	{
		attribute<string>          label       := ='union_data(., ' + asItemList('bebouwing/'     + WkoComponent/name + '/label')         + ')', DialogType = "labelText";
		attribute<RendabelCluster> Cluster_rel := ='union_data(., ' + AsItemList('ObjectResults/' + WkoComponent/name + '/Cluster_Rel')   + ')';
		attribute<kw>              P_sec       := ='union_data(., ' + AsItemList('ObjectResults/' + WkoComponent/name + '/WkoData/P_sec') + ')';

		attribute<Eur>    Ki_ow_gebied      := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Ki_ow     [RendabelCluster/Selected_rel]);
		attribute<Eur>    Ki_wd_gebied      := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Ki_wd     [RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Kji_ow_gebied     := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Kji_ow    [RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Kji_wd_gebied     := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Kji_wd    [RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Kj_ow_oh_gebied   := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Kj_ow_oh  [RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Kj_wd_oh_gebied   := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Kj_wd_oh  [RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Kj_ow_adm_gebied  := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Kj_ow_adm [RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Kj_wd_adm_gebied  := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Kj_wd_adm [RendabelCluster/Selected_rel]);

		attribute<Eur_yr> Oji_ow_EIA_gebied := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Oji_ow_EIA[RendabelCluster/Selected_rel]);
		attribute<Eur_yr> Oji_wd_EIA_gebied := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Oji_wd_EIA[RendabelCluster/Selected_rel]);
		attribute<Eur>    Oi_ow_EIA_gebied  := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Oi_ow_EIA [RendabelCluster/Selected_rel]);
		attribute<Eur>    Oi_wd_EIA_gebied  := scalesum(max_elem(P_sec, 1[kw]), Cluster_rel, Selected/Oi_wd_EIA [RendabelCluster/Selected_rel]);
	}
	
	container ObjectResults :=
		for_each_ne(WkoComponent/name,
			'WkoResults('
				'UnitedCandidates, RendabelCluster, NewAfnameGebied, CandidateSets/'+WkoComponent/name+',Classifications/WarmteOptie/V/TEO,'
				'CumulNrPrevAllowedObjects['+string(id(WkoComponent))+'[WkoComponent]],'
				'CumulNrPrevAllObjects['+string(id(WkoComponent))+'[WkoComponent]]'
			')'
		);

	container Results := BeginStatus
	{
		container Bebouwing :=
			for_each_nex(Classifications/BebouwingsComponent/name
				, Classifications/BebouwingsComponent/KanWKO 
					? 'ObjectResults/'+Classifications/BebouwingsComponent/name+'/Result' 
					: 'BeginStatus/Bebouwing/'+Classifications/BebouwingsComponent/name
				, uint32
			);

		unit<uint32> AfnameGebied := NewAfnameGebied;

		container TEO
		{
			container VorigePeriode := BeginStatus/TEO;
			unit<uint32> Cluster    := Selected;

			container Oi_Aansl     := for_each_nedv(WkoComponent/name, replace('VorigePeriode/Oi_Aansl/@W@ + ObjectResults/@W@/PR/nieuw/Oi_Aansl', '@W@', WkoComponent/name), PlanRegio, Eur);
			container Oj_Vastrecht := for_each_nedv(WkoComponent/name, replace('ObjectResults/@W@/PR/Totaal/Oj_Vastrecht', '@W@', WkoComponent/name), PlanRegio, Eur_yr);
			container Oj_Verbruik  := for_each_nedv(WkoComponent/name, replace('ObjectResults/@W@/PR/Totaal/Oj_Verbruik', '@W@', WkoComponent/name), PlanRegio, Eur_yr);
			container Om_comfort   := for_each_nedv(WkoComponent/name, replace('ObjectResults/@W@/PR/Totaal/Om_comfort' , '@W@', WkoComponent/name), PlanRegio, Eur_yr);

			attribute<float64> P_vol (PlanRegio) := VorigePeriode/P_Vol;

			container eenmalig
			{
				attribute<Eur> Ki_ge_pm    (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Ki_ge_pm') + ')';
				attribute<Eur> Ki_ge_ov    (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Ki_ge_ov') + ')';
				attribute<Eur> Ki_ow       (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Ki_ow'   ) + ')', Descr = "investering opwekker, gebouwzijde en brongerelateerd";
				attribute<Eur> Ki_wd       (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Ki_wd'   ) + ')', Descr = "investering wijkdistributEur, gebouwzijde en brongerelateerd";
				attribute<Eur> Ki_id       (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Ki_id'   ) + ')';
				attribute<Eur> Ki_pt       (PlanRegio) := const(0[Eur], PlanRegio); // geen primair transport bij WKO
				attribute<Eur> Oi_lv_aansl (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/nieuw/Oi_Aansl')+')';

				attribute<Eur> Oi_ow_EIA   (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Oi_ow_EIA') + ')';
				attribute<Eur> Oi_wd_EIA   (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Oi_wd_EIA') + ')';
				attribute<Eur> Oi_id_EIA   (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Oi_id_EIA') + ')';
				attribute<Eur> Oi_ge_EIA   (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Oi_ge_EIA') + ')';
				attribute<Eur> Oi_pt_EIA   (PlanRegio) := const(0[Eur], PlanRegio); // geen primair transport bij WKO
				attribute<Eur> Ki_wd_Gnet  (PlanRegio) := const(0[Eur], PlanRegio);
				attribute<Eur> Ki_id_lo    (PlanRegio) := const(0[Eur], PlanRegio);
			}

			container jaarlijks
			{
				container ge
				{
					attribute<Eur_yr> Kj_ge_hv      (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen huurverlaging bij LT netten
					attribute<Eur_yr> Kji_ge_ov     (PlanRegio) := eenmalig/ki_ge_ov    * (NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Kji_ge_ov;
					attribute<Eur_yr> Kji_ge_pm     (PlanRegio) := eenmalig/ki_ge_pm    * (NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Kji_ge_pm;
					attribute<Eur_yr> Kmi_ge_ov     (PlanRegio) := eenmalig/ki_ge_ov    * (NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Kmi_ge_ov;
					attribute<Eur_yr> Kmi_ge_pm     (PlanRegio) := eenmalig/ki_ge_pm    * (NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Kmi_ge_pm;
					attribute<Eur_yr> Om_ge_comfort (PlanRegio) := ='add('+AsItemList('.../Om_Comfort/'+WkoComponent/name)+')';
					attribute<Eur_yr> Bji_ge_Aansl  (PlanRegio) := eenmalig/Oi_lv_Aansl * (NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Bji_ge_Aansl;
					attribute<Eur_yr> Oji_ge_EIA    (PlanRegio) := eenmalig/Oi_ge_EIA   * (NCW/bw28/StartDiscountFactor * NCW/bw28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Oji_ge_EIA;
					attribute<Eur_yr> Omi_ge_EIA    (PlanRegio) := eenmalig/Oi_ge_EIA   * (NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor) + VorigePeriode/jaarlijks/ge/Omi_ge_EIA;
				}

				container id
				{
					attribute<Eur_yr> Kj_id_elek    (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Kj_id_elek		')+') + VorigePeriode/jaarlijks/id/Kj_id_elek';
					attribute<Eur_yr> Km_id_elek    (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Km_id_elek		')+') + VorigePeriode/jaarlijks/id/Km_id_elek';
					attribute<Eur_yr> Kj_id_elek_EH (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Kj_id_elek_EH	')+') + VorigePeriode/jaarlijks/id/Kj_id_elek_EH';
					attribute<Eur_yr> Kj_id_elek_CO2(PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Kj_id_elek_CO2	')+') + VorigePeriode/jaarlijks/id/Kj_id_elek_CO2';

					attribute<Eur_yr> Kj_id_gas     (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Km_id_gas     (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Kj_id_gas_CO2 (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Kj_id_gas_EH  (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten

					attribute<Eur_yr> Kji_id        (PlanRegio) := eenmalig/ki_id * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor)       + VorigePeriode/jaarlijks/id/Kji_id;
					attribute<Eur_yr> Kmi_id        (PlanRegio) := eenmalig/ki_id * (NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor)       + VorigePeriode/jaarlijks/id/Kmi_id;
					attribute<Eur_yr> Kj_id_oh      (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/OenM/Kj_id_oh ') + ') + VorigePeriode/jaarlijks/id/Kj_id_oh';
					attribute<Eur_yr> Kj_id_adm     (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/OenM/Kj_id_adm') + ') + VorigePeriode/jaarlijks/id/Kj_id_adm';

					attribute<Eur_yr> Oji_id_EIA    (PlanRegio) := eenmalig/Oi_id_EIA * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor)   + VorigePeriode/jaarlijks/id/Oji_id_EIA;
					attribute<Eur_yr> Omi_id_EIA    (PlanRegio) := eenmalig/Oi_id_EIA * (NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor)   + VorigePeriode/jaarlijks/id/Omi_id_EIA;
					attribute<Eur_yr> Oj_id_SDE     (PlanRegio) := const(0[Eur_yr], PlanRegio);// geen aparte SDE voor inpandig distributEur
					attribute<Eur_yr> Kji_id_LO     (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kmi_id_LO     (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_id_LO_oh   (PlanRegio) := const(0[Eur_yr], PlanRegio);
				}

				container wd
				{
					attribute<Eur_yr> Kji_wd         (PlanRegio) := eenmalig/ki_wd * NCW/wd28/AnnualisationFactor + VorigePeriode/jaarlijks/wd/Kji_wd;
					attribute<Eur_yr> Kmi_wd         (PlanRegio) := eenmalig/ki_wd * NCW/mr28/AnnualisationFactor + VorigePeriode/jaarlijks/wd/Kmi_wd;
					attribute<Eur_yr> Kj_wd_gas      (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij WKO
					attribute<Eur_yr> Kj_wd_elek     (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Kj_wd_elek') + ')';
					attribute<Eur_yr> Km_wd_elek     (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Km_wd_elek') + ')';
					attribute<Eur_yr> Km_wd_gas      (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Kj_wd_gas_EH   (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Kj_wd_gas_CO2  (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Kj_wd_elek_EH  (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Kj_wd_elek_EH' ) + ')';
					attribute<Eur_yr> Kj_wd_elek_CO2 (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/Kj_wd_elek_CO2') + ')';
					attribute<Eur_yr> Oj_wd_SDE      (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen aparte SDE voor wijkdistributEur
					attribute<Eur_yr> Oji_wd_EIA     (PlanRegio) := eenmalig/Oi_wd_EIA * NCW/wd28/AnnualisationFactor + VorigePeriode/jaarlijks/wd/Oji_wd_EIA;
					attribute<Eur_yr> Omi_wd_EIA     (PlanRegio) := eenmalig/Oi_wd_EIA * NCW/mr28/AnnualisationFactor + VorigePeriode/jaarlijks/wd/Omi_wd_EIA;
					attribute<Eur_yr> Kj_wd_adm      (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/OenM/Kj_wd_adm')+ ') + VorigePeriode/jaarlijks/wd/Kj_wd_adm';
					attribute<Eur_yr> Kj_wd_oh       (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/OenM/Kj_wd_oh') + ') + VorigePeriode/jaarlijks/wd/Kj_wd_oh';
					attribute<Eur_yr> Kji_wd_Gnet    (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kmi_wd_Gnet    (PlanRegio) := const(0[Eur_yr], PlanRegio);
					attribute<Eur_yr> Kj_wd_Gnet_oh  (PlanRegio) := const(0[Eur_yr], PlanRegio);
				}

				container pt
				{
					attribute<Eur_yr> Omi_pt_EIA (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen primair transport bij LT netten
					attribute<Eur_yr> Kj_pt_oh   (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen primair transport bij WKO
					attribute<Eur_yr> Kj_pt_adm  (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen primair transport bij LT netten
					attribute<Eur_yr> Kji_pt     (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen primair transport bij LT netten
					attribute<Eur_yr> Kmi_pt     (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen primair transport bij LT netten
					attribute<Eur_yr> Oji_pt_EIA (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen primair transport bij LT netten
				}

				container ow
				{
					attribute<Eur_yr> Kji_ow          (PlanRegio) := eenmalig/ki_ow * NCW/ow28/AnnualisationFactor + VorigePeriode/jaarlijks/ow/Kji_ow;
					attribute<Eur_yr> Kmi_ow          (PlanRegio) := eenmalig/ki_ow * NCW/mr28/AnnualisationFactor + VorigePeriode/jaarlijks/ow/Kji_ow;
					attribute<Eur_yr> Kj_ow_gas_EH    (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Km_ow_gas       (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Km_ow_elek      (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen elektriciteitsverbruik bij opwekker
					attribute<Eur_yr> Kj_ow_gas_CO2   (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij LT netten
					attribute<Eur_yr> Kj_ow_elek_EH   (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen elektriciteitsverbruik bij opwekker
					attribute<Eur_yr> Kj_ow_elek_CO2  (PlanRegio) := const(0[Eur_yr], PlanRegio);  // geen elektriciteitsverbruik bij opwekker
					attribute<Eur_yr> Kj_ow_adm       (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/OenM/Kj_ow_adm') + ') + VorigePeriode/jaarlijks/ow/Kj_ow_adm';
					attribute<Eur_yr> Kj_ow_productie (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen productiekosten bij WKO
					attribute<Eur_yr> Kj_ow_elek      (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen extra elektriciteitsverbruik bij WKO
					attribute<Eur_yr> Kj_ow_gas       (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen gasverbruik bij WKO
					attribute<Eur_yr> Kj_ow_oh        (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/OenM/Kj_ow_oh') + ') + VorigePeriode/jaarlijks/ow/Kj_ow_oh';
					attribute<Eur_yr> Oji_ow_EIA      (PlanRegio) := eenmalig/Oi_ow_EIA * NCW/ow28/AnnualisationFactor;
					attribute<Eur_yr> Omi_ow_EIA      (PlanRegio) := eenmalig/Oi_ow_EIA * NCW/mr28/AnnualisationFactor;
					attribute<Eur_yr> Oj_ow_SDE       (PlanRegio) := const(0[Eur_yr], PlanRegio); // geen aparte SDE voor opwekker
				}

				container lv
				{
					attribute<Eur_yr> Oj_lv_SDE       (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Oj_SDE ')+')+ VorigePeriode/jaarlijks/lv/Oj_lv_SDE';
					attribute<Eur_yr> Oji_lv_aansl    (PlanRegio) := eenmalig/Oi_lv_aansl * (NCW/id28/StartDiscountFactor * NCW/id28/AnnualisationFactor) + VorigePeriode/jaarlijks/lv/Oji_lv_aansl;
					attribute<Eur_yr> Omi_lv_aansl    (PlanRegio) := eenmalig/Oi_lv_aansl * (NCW/mr28/StartDiscountFactor * NCW/mr28/AnnualisationFactor) + VorigePeriode/jaarlijks/lv/Omi_lv_aansl;
					attribute<Eur_yr> Oj_lv_vastrecht (PlanRegio) := ='add('+AsItemList('Oj_Vastrecht/' + WkoComponent/name)+ ')';
					attribute<Eur_yr> Oj_lv_verbruik  (PlanRegio) := ='add('+AsItemList('Oj_Verbruik/' + WkoComponent/name)+ ')';
				}
			}

			container Verbruik
			{
				attribute<Gj_yr> V_id_gas     (PlanRegio) := const(0[Gj_yr], PlanRegio); // geen gasverbruik bij LT netten
				attribute<Gj_yr> V_wd_gas     (PlanRegio) := const(0[Gj_yr], PlanRegio); // geen gasverbruik bij LT netten
				attribute<Gj_yr> V_ow_gas     (PlanRegio) := const(0[Gj_yr], PlanRegio); // geen gasverbruik bij LT netten

				attribute<Gj_yr> V_id_elek    (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/V_id_elek') + ')';
				attribute<Gj_yr> V_wd_elek    (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/V_wd_elek') + ')';
				attribute<Gj_yr> V_ow_elek    (PlanRegio) := const(0[Gj_yr], PlanRegio);

				attribute<Gj_yr> V_id_verlies (PlanRegio) := const(0[Gj_yr], PlanRegio);
				attribute<Gj_yr> V_wd_verlies (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/V_wd_verlies') + ')';
				attribute<Gj_yr> V_pt_verlies (PlanRegio) := const(0[Gj_yr], PlanRegio); // geen primair transport bij LT netten

				attribute<Gj_yr> V_warmte     (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/V_warmte') + ')';
				attribute<Gj_yr> V_koude      (PlanRegio) := ='add('+AsItemList('ObjectResults/' + WkoComponent/name + '/PR/Totaal/V_koude')  + ')';

				// generieke netto warmte onttrekking:
				attribute<Gj_yr> V_id_warmte  (PlanRegio) := V_warmte    - (V_id_gas + V_id_elek - V_id_verlies);
				attribute<Gj_yr> V_wd_warmte  (PlanRegio) := V_id_warmte - (V_wd_gas + V_wd_elek - V_wd_verlies);
				attribute<Gj_yr> V_ow_warmte  (PlanRegio) := V_wd_warmte - (V_ow_gas + V_ow_elek - V_pt_verlies);
				attribute<Gj_yr> V_ow_koude   (PlanRegio) := V_Koude;
				attribute<Gj_yr> V_H2         (PlanRegio) := const(0[Gj_yr], PlanRegio);
			}

			container Uitstoot
			{
				attribute<KG_yr> CO2_id_gas  (PlanRegio) := const(0[KG_yr], PlanRegio); // geen gasverbruik bij WKO
				attribute<KG_yr> CO2_wd_gas  (PlanRegio) := const(0[KG_yr], PlanRegio); // geen gasverbruik bij WKO
				attribute<KG_yr> CO2_ow_gas  (PlanRegio) := const(0[KG_yr], PlanRegio); // geen gasverbruik bij WKO

				attribute<KG_yr> CO2_id_elek (PlanRegio) := verbruik/V_id_elek * prijzen/Elektriciteit/CO2_GJ;
				attribute<KG_yr> CO2_wd_elek (PlanRegio) := verbruik/V_wd_elek * prijzen/Elektriciteit/CO2_GJ;
				attribute<KG_yr> CO2_ow_elek (PlanRegio) := verbruik/V_ow_elek * prijzen/Elektriciteit/CO2_GJ;
			}
		}
	}
}
