container OSM
{  
	parameter<string> file_date := '20240524';  // 20_09_2022  20240524
	// parameter<string> localdir  := '%SourceDataProjDir%/OSM/Snapshots/Netwerk_'+file_date;
	parameter<string> dir       := '%SourceDataProjDir%/OSM/'+file_date;

	unit<uint32> Regios : nrofrows = 12
	{
		unit<uint32> Elements  := Range(uint32, 0, nrAttr*#.)
		{
			attribute<String> Text:
			[
			'Drenthe',
			'Flevoland',
			'Friesland',
			'Gelderland',
			'Groningen',
			'Limburg',
			'Noord-Brabant',
			'Noord-Holland',
			'Overijssel',
			'Utrecht',
			'Zeeland',
			'Zuid-Holland'
			]; 
		}
		
		attribute<string>        label          := Elements/Text[value(UInt32(ID(.))* nrAttr + 0, Elements)], DialogType = "LabelText";
		attribute<string>        name           := AsItemName(label);
		
		parameter<uint32> nrAttr := 1;
	}
	
	unit<uint8> wegtype: NrOfRows = 78
	{
		attribute<String>       Name                 := Label;
		attribute<km_hr>        CarSpeedOutside      := Elements/Text[value(UInt32(ID(.))* nrAttr + 0, Elements)][km_hr];
		attribute<km_hr>        CarSpeedInside       := Elements/Text[value(UInt32(ID(.))* nrAttr + 1, Elements)][km_hr];
		attribute<km_hr>        BikeSpeed            := Elements/Text[value(UInt32(ID(.))* nrAttr + 2, Elements)][km_hr];
		attribute<bool>         IsMain               := bool(Elements/Text[value(UInt32(ID(.))* nrAttr + 3, Elements)]);
		attribute<wegtypegroep> wegtypegroepnr       := Elements/Text[value(UInt32(ID(.))* nrAttr + 4, Elements)][wegtypegroep];
		attribute<String>       Label                := Elements/Text[value(UInt32(ID(.))* nrAttr + 5, Elements)], DialogType = "LabelText";
		attribute<km_hr>        TruckSpeedOutside    := Elements/Text[value(UInt32(ID(.))* nrAttr + 6, Elements)][km_hr];
		attribute<km_hr>        TruckSpeedInside     := Elements/Text[value(UInt32(ID(.))* nrAttr + 7, Elements)][km_hr];
		attribute<uint8>        Rank                 := Elements/Text[value(UInt32(ID(.))* nrAttr + 8, Elements)][uint8];

		attribute<bool>         IsPartOfCarNetwork    := CarSpeedInside  > value(1, km_hr);
		attribute<bool>         IsPartOfBikeNetwork   := BikeSpeed       > value(1, km_hr);
		// attribute<bool>         IsPartOfTruckNetwork  :  = TruckSpeedInside  > value(1, km_hr);
		
		attribute<bool>         IsPartOfPedestrianNetwork := !(Label = 'motorway' || Label = 'motorway_link' || Label = 'trunk' || Label = 'trunk_link');

		// attribute<m_s>          TruckSpeedOutside_ms:= TruckSpeedOutside / value(3600, s / hr) * value(1000, m / km);
		// attribute<m_s>          TruckSpeedInside_ms:= TruckSpeedInside  / value(3600, s / hr) * value(1000, m / km);

		attribute<m_s>          CarSpeedOutside_ms   := CarSpeedOutside / value(3600, s / hr) * value(1000, m / km);
		attribute<m_s>          CarSpeedInside_ms    := CarSpeedInside  / value(3600, s / hr) * value(1000, m / km);
		attribute<m_s>          BikeSpeed_ms         := BikeSpeed       / value(3600, s / hr) * value(1000, m / km);
	

		parameter<uint32> nrAttr := 9;
		unit<UInt32> Elements := Range(uint32, 0, nrAttr*#.)
		{
			attribute<String> Text:
			[
				//Car speed outside,Car speed inside,Bike speed, IsMain, group,Label, Truck speed outside, Truck speed inside, Rank
				' 30',' 30','15','True' ,'2','access','50','30','0',
				' 40',' 40','15','False','2','binnenweg','50','30','0',
				'  1','  1','10','False','0','bridleway',' -1',' -1','0',
				'  1','  1',' 1','False','3','bus_guideway',' -1',' -1','0',
				'  1','  1',' 1','False','3','bus_stop',' -1',' -1','0',
				'  1','  1',' 1','False','5','closed',' -1',' -1','0',
				'  1','  1',' 1','False','4','construction',' -1',' -1','2',
				'  1','  1',' 1','False','2','crossing',' -1',' -1','0',
				'  1','  1','15','False','1','cycleway',' -1',' -1','2',
				'  1','  1','15','False','1','cycleway;service',' -1',' -1','2',
				'  1','  1',' 1','False','5','disused',' -1',' -1','0',
				'  1','  1','10','False','0','dog track',' -1',' -1','0',
				'  1','  1','10','False','2','driveway',' -1',' -1','0',
				'  1','  1','15','False','1','fi',' -1',' -1','0',
				'  1','  1','15','False','1','fiets-/voetpad',' -1',' -1','0',
				'  1','  1',' 1','False','3','FIXME',' -1',' -1','0',
				'  1','  1',' 1','False','0','footpath',' -1',' -1','0',
				'  1','  1',' 1','False','0','footway',' -1',' -1','2',
				'  1','  1',' 1','False','2','gate',' -1',' -1','0',
				' 20',' 20','15','False','2','living_street','20','20','2',
				' 30',' 30','15','False','2','local','20','20','0',
				' 40',' 40','15','False','2','minor','50','30','0',
				'  1','  1','15','False','0','Molenpad',' -1',' -1','0',
				'100',' 90',' 1','True', '2','motorway','80','70','0',
				' 60',' 50',' 1','True', '2','motorway_link','60','50','0',
				'  1','  1',' 1','False','5','no_track_anymore',' -1',' -1','0',
				'  1','  1',' 1','False','0','pah',' -1',' -1','0',
				'  1','  1',' 1','False','0','pat',' -1',' -1','0',
				'  1','  1',' 1','False','0','path',' -1',' -1','0',
				'  1','  1',' 1','False','0','pedestrian',' -1',' -1','2',
				'  1','  1',' 1','False','3','platform',' -1',' -1','0',
				' 75',' 40',' 1','True', '2','primary','70','40','0',
				' 55',' 35',' 1','True', '2','primary_link','65','35','0',
				'  1','  1',' 1','False','2','private','-1','-1','0',
				'  1','  1',' 1','False','4','proposed','-1','-1','0',
				'  1','  1',' 1','False','2','race_track','-1','-1','0',
				'  1','  1',' 1','False','2','raceway','-1','-1','0',
				'  1','  1',' 1','False','5','removed?','-1','-1','0',
				' 30',' 30','15','False','2','res','20','20','2',
				' 30',' 30','15','False','2','residential','20','20','2',
				' 30',' 30','15','False','2','residential;uncl','20','20','2',
				' 20',' 20',' 1','False','2','rest_area','20','20','0',
				' 40',' 40','15','False','2','road','50','30','2',
				' 70',' 40','15','True', '2','secondary','70','40','1',
				' 50',' 30',' 1','True', '2','secondary_link','65','35','1',
				' 10',' 10','10','False','2','service','10','10','2',
				' 10',' 10','10','False','2','service; unclass','10','10','2',
				' 10',' 10','10','False','2','services','10','10','2',
				'  1','  1',' 1','False','3','stairs','-1','-1','0',
				'  1','  1',' 1','False','3','steps','-1','-1','0',
				' 50',' 40','15','False','2','tertiary','50','30','2',
				' 50',' 40','15','False','2','tertiary;unclass','50','30','2',
				' 30',' 30','15','False','2','tertiary_link','45','25','2',
				'  1','  1',' 1','False','2','track','-1','-1','2',
				'  1','  1',' 1','False','3','traffic_signals','-1','-1','0',
				'  1','  1',' 1','False','0','trail','-1','-1','0',
				'100',' 90',' 1','True', '2','trunk','80','70','0',
				' 90',' 80',' 1','True', '2','trunk_link','60','50','0',
				' 20',' 20','15','False','2','turning_circle','10','10','0',
				' 70',' 40','15','True', '2','unclassified','60','30','2',
				' 70',' 40','15','False','2','undefined','60','30','0',
				' 10',' 10',' 5','False','0','unpaved','10','10','0',
				' 10',' 10',' 5','False','2','unpaved road','10','10','0',
				' 10',' 10',' 5','False','0','unsurfaced','10','10','0',
				'  1','  1',' 1','False','3','virtual','-1','-1','0',
				'  1','  1',' 1','False','1','walkway','-1','-1','0',
				'  1','  1',' 1','False','1','Weddeloop','-1','-1','0',
				'  1','  1',' 1','False','3','Ãºn','-1','-1','0',
				'  7','  7',' 7','False','3','texel_ferry','7','7','0',
				' 25',' 25','15','False','3','connectlink','25','25','0',
				'  5','  5',' 5','False','3','riverferry','5','5','0',
				' 15',' 15','15','False','3','vlieland_ferry','13','13','0',
				' 15',' 15','15','False','3','vlieland_terschelling','25','25','0',
				' 13',' 13','13','False','3','terschelling_ferry','25','25','0',
				' 10',' 10','10','False','3','ameland_ferry','13','13','0',
				'  7','  7',' 7','False','3','schiermonnikoog_ferry','11','11','0',
				'  7','  7',' 7','False','3','ferry','10','10','0',
				'120','110',' 1','True' ,'2','motorway_abroad','80','70','0'
			];
		}
		container V := for_each_nedv(AsItemName(name), String(ID(.))+'[..]', void, .);
	}
	
	container Prepare_SourceData :=
		for_each_ne(
			Regios/name
			, 'Prepare_SourceData_T('+quote(Regios/label)+')'
		);
	
	Template Prepare_SourceData_T
	{
		parameter<string> Regio;
		///
		unit<uint32> Read_Roads_shp 
		:	StorageName     = "= dir + '/'+Regio+'-latest-free.shp/gis_osm_roads_free_1.shp'"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	DialogType = "Map"
		,	DialogData = "geometry_rd"
		{
			attribute<wgs84_base>        geometry    (arc);
			attribute<rdc_meter>         geometry_rd (arc)   := LatLongWgs842RD(geometry, dpoint)[rdc_meter];
			attribute<string>            fclass;
			attribute<wegtype>           wegtype_rel    := rlookup(fclass, wegtype/name);  
		}
	}

	unit<uint32>  Road_Network := ='union_unit('+AsList('Prepare_SourceData/'+Regios/name+'/Read_Roads_shp', ',')+')'
	{
		attribute<rdc_meter>         geometry (arc)                   := ='union_data(., '+AsList('Prepare_SourceData/'+Regios/name+'/Read_Roads_shp/geometry_rd', ',')+')';
		attribute<wegtype>           wegtype_rel                      := ='union_data(., '+AsList('Prepare_SourceData/'+Regios/name+'/Read_Roads_shp/wegtype_rel', ',')+')';
		attribute<uint8>             rank := wegtype_rel->rank;
		attribute<float64>           length                           := mls_length(geometry, float64);
		attribute<string>            wegtype_label                    := wegtype/label[wegtype_rel];
	}
	attribute<uint32> wegtype_count(wegtype) := pcount(Road_Network/wegtype_rel);
	unit<uint32> dynapoints := dyna_point(first_point(Road_Network/geometry), last_point(Road_Network/geometry), 10.0[units/m]);
}