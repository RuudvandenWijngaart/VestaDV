//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       Deze DMS-file wordt aangeroepen door stam.dms                                  //
//       In deze configuratiefile worden de bebouwingscomponenten geconfigureerd.       //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Bebouwing
{
	unit<uint32> Woning := BAG/vbo_woonfunctie_studiegebied, DialogData = "point", DialogType = "Map"
	{
		unit<uint8>  BebouwingsTypeDomein  := Classifications/WoningType, IsHidden = "True";
		unit<uint8>  BouwjaarDomein        := Classifications/BouwjaarWoning, IsHidden = "True";
		unit<uint16> ModelObjectKeyDomein  := Classifications/combines/WBE, IsHidden = "True";
		unit<uint8>  WoningtypeBouwjaarBestaandRapportageDomein := Classifications/combines/WoningtypeBouwjaarBestaandRapportage, IsHidden = "True";

		attribute<string>                                    code      := BAG/vbo_woonfunctie_studiegebied/identificatie;
		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt> buurt_rel := BAG/vbo_woonfunctie_studiegebied/buurt_rel;

		attribute<nrAsl>                nrAansluitingen_i := impl/nrWon, IsHidden = "True";
		attribute<m2>                   Oppervlakte_i     := BAG/vbo_woonfunctie_studiegebied/oppervlakte[m2];
		//attribute<m2>                   Oppervlakte_i     := median(BAG/vbo_woonfunctie_studiegebied/oppervlakte[m2], interval(50[m2], 200[m2]));

		attribute<BebouwingsTypeDomein> BebouwingsType := impl/WoningType, isHidden = "True";
		attribute<ModelObjectKeyDomein> ModelObjectKey := combine_data(ModelObjectKeyDomein, BebouwingsType, combine_data(Classifications/combines/BE, impl/BouwjaarWoning_rel, Eigendom_rel)), IsHidden = "True";
		attribute<WoningtypeBouwjaarBestaandRapportageDomein> RapObjectKey   := combine_data(WoningtypeBouwjaarBestaandRapportageDomein, BebouwingsType, Impl/BouwjaarWoningRapportage_rel), IsHidden = "True";
		attribute<BouwjaarDomein>       BouwJaar       := classify(BAG/vbo_woonfunctie_studiegebied/bouwjaar, Classifications/BouwjaarWoning/ClassBreak), isHidden = "True";

		attribute<rdc_meter>            point          := BAG/vbo_woonfunctie_studiegebied/geometry, IsHidden = "True";

		container Gebied: IsHidden = "True"
		{
			attribute<float64> n      (..) := const(1.0,..);
			attribute<float64> MEAN_x (..) := float64(PointCol(point));
			attribute<float64> MEAN_y (..) := float64(PointRow(point));
			attribute<float64> SSD_xx (..) := const(0.0, ..);
			attribute<float64> SSD_xy (..) := const(0.0, ..);
			attribute<float64> SSD_yy (..) := const(0.0, ..);
		}

		unit<uint32> EnergieLabelData := RuimtelijkeData/EnergieLabel/Data, IsHidden = "True";
		attribute<Classifications/SchilLabel> SchilLabel_rel := rjoin(code, EnergieLabelData/VBO_id, EnergieLabelData/schillabel_rel);
/*		attribute<Classifications/RVOEnergieLabel> RVOLabel_inclusief_voorlopig_rel := 
			MakeDefined(
				SchilLabel_rel
				, rjoin(code, RuimtelijkeData/EnergieLabel/Data_voorlopig/VBO_id, RuimtelijkeData/EnergieLabel/Data_voorlopig/schillabel_rel)
			)[Classifications/RVOEnergieLabel];
		attribute<uint8> ellabel_type := 
				isDefined(SchilLabel_rel) 
					? 1b
					: isDefined(rjoin(code, RuimtelijkeData/EnergieLabel/Data_voorlopig/VBO_id, RuimtelijkeData/EnergieLabel/Data_voorlopig/schillabel_rel))
						? 2b
						: 0b;*/

		container Criteria : IsHidden = "True";

		container impl : isHidden = "True"
		{
			attribute<nrAsl>                                  nrWon                      (..) := const(1,..,nrAsl);

			attribute<Classifications/BouwjaarWoning> BouwjaarWoning_rel (..) := BAG/vbo_woonfunctie_studiegebied/BouwjaarWoning_rel;
			attribute<string>                                 BouwJaarExcel              (..) := Classifications/BouwjaarWoning/excel_code[BouwjaarWoning_rel];
			
			attribute<Classifications/BouwjaarWoningRapportage> BouwjaarWoningRapportage_rel (..) := 
				isNull(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/bouwjaar) 
					? Classifications/BouwjaarWoningRapportage/onbekend 
					: classify(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/bouwjaar, Classifications/BouwjaarWoningRapportage/ClassBreak);

			attribute<classifications/WoningType> WoningType     (..) := BAG/vbo_woonfunctie_studiegebied/Woningtype_rel;
			attribute<BebouwingsTypeDomein>       BebouwingsType (..) := WoningType;
		}
	}

	unit<uint32> Util := BAG/vbo_utiliteit_studiegebied, IsHidden = "True"
	{
		unit<uint8>  BebouwingsTypeDomein := Classifications/UtilTypeBestaand ,isHidden = "True";
		unit<uint8>  BouwjaarDomein       := Classifications/BouwjaarUtilBestaand, IsHidden = "True";
		unit<uint8>  ModelObjectKeyDomein := Classifications/combines/UtiltypeBouwjaarBestaand, IsHidden = "True";

		attribute<string> code     := BAG/vbo_utiliteit_studiegebied/identificatie;
		attribute<string> postcode := BAG/vbo_utiliteit_studiegebied/postcode;

		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt> buurt_rel := BAG/vbo_utiliteit_studiegebied/buurt_rel, isHidden = "True";

		attribute<rdc_meter>                point    := BAG/vbo_utiliteit_studiegebied/locatie, isHidden = "True";
		attribute<Classifications/BouwJaarUtilBestaand> BouwJaar := classify(BAG/vbo_utiliteit_studiegebied/bouwjaar, Classifications/BouwJaarUtilBestaand/ClassBreak), isHidden = "True";

		attribute<nrAsl>                    nrAansluitingen_i := const(1[nrAsl], .);
		attribute<m2>                       Oppervlakte_i     := BAG/vbo_utiliteit_studiegebied/oppervlakte[m2];

		container Gebied: IsHidden = "True"
		{
			attribute<float64> n      (..) := const(1.0, ..);
			attribute<float64> MEAN_x (..) := PointCol(point);
			attribute<float64> MEAN_y (..) := PointRow(point);
			attribute<float64> SSD_xx (..) := const(0.0, ..);
			attribute<float64> SSD_xy (..) := const(0.0, ..);
			attribute<float64> SSD_yy (..) := const(0.0, ..);
		}

		// foreign key to model data
		attribute<Classifications/BouwjaarUtilBestaand> BouwjaarUtilBestaand_rel := BAG/vbo_utiliteit_studiegebied/BouwjaarUtilBestaand_rel, isHidden = "True";
		attribute<BebouwingsTypeDomein>                 BebouwingsType           := BAG/vbo_utiliteit_studiegebied/gebruiksdoel, isHidden = "True";
		attribute<ModelObjectKeyDomein>                 ModelObjectKey           := combine_data(ModelObjectKeyDomein, BebouwingsType, impl/BouwjaarUtilBestaand_rel);
		attribute<int16>                                SymbolIndex              := BebouwingsTypeDomein/SymbolIndex[BebouwingsType], DialogType = "SymbolIndex", isHidden = "True";

		container Criteria
		{
		}

		container impl : isHidden = "True"
		{
			attribute<nrAsl>                                nrWon                    (..) := const(1,..,nrAsl);

			attribute<Classifications/BouwjaarUtilBestaand> BouwjaarUtilBestaand_rel (..) := BAG/vbo_utiliteit_studiegebied/BouwjaarUtilBestaand_rel;
			attribute<string>                               BouwJaarExcel            (..) := Classifications/BouwjaarUtilBestaand/excel_code[BouwjaarUtilBestaand_rel];

//				attribute<BebouwingsTypeDomein>                 BebouwingsType           (..) := UtilType;
		}
	}

/*		container Util_Nieuwbouw_Inbreiding :=
			for_each_nedv(
				RuimtelijkeData/Nieuwbouw/ZU/hasNieuwbouw ? RuimtelijkeData/Nieuwbouw/ZU/name : ''
				,	RuimtelijkeData/Nieuwbouw/ZU/Periode_Eindjaar > 2010w && strlen(RuimtelijkeData/Nieuwbouw/ZU/wlo_filename_Nieuwbouw) > 0 
				?	'int32(sum( '
						'Util/Oppervlakte_i * ' +
						'float64(Util/BebouwingsTypeDomein/UtilTypeNieuwbouw_rel[Util/BebouwingsType] == '+string(RuimtelijkeData/Nieuwbouw/ZU/nr_2)+'[uint8])'
					+	', Util/point[rdc_grids/m100]'
					')'
					'*max_elem(float64(RuimtelijkeData/Nieuwbouw/InbreidingUtilFactor/'+RuimtelijkeData/Nieuwbouw/ZU/name+') - 1.0 , 0.0)'
					')'
				:	'const(0i, Geography/rdc_grids/m100)'
				,	Geography/rdc_grids/m100, int32
			);

		container Util_Nieuwbouw_Nieuwbouw :=
			for_each_nedv(
				RuimtelijkeData/Nieuwbouw/ZU/hasNieuwbouw ? RuimtelijkeData/Nieuwbouw/ZU/name : ''
				,	RuimtelijkeData/Nieuwbouw/ZU/Periode_Eindjaar > 2010w && strlen(RuimtelijkeData/Nieuwbouw/ZU/wlo_filename_Nieuwbouw) > 0 
					?	'int32(RuimtelijkeData/Nieuwbouw/UtilOppervlak/'+RuimtelijkeData/Nieuwbouw/ZU/name +')'
						''
					:	'const(0i, Geography/rdc_grids/m100)'
				,	Geography/rdc_grids/m100, int32
			);

		container NieuwbouwUtil :=
			for_each_nedv(
				RuimtelijkeData/Nieuwbouw/ZU/hasNieuwbouw ? RuimtelijkeData/Nieuwbouw/ZU/name : ''
				,	'Util_Nieuwbouw_Nieuwbouw/'+RuimtelijkeData/Nieuwbouw/ZU/name + ' + Util_Nieuwbouw_Inbreiding/'+RuimtelijkeData/Nieuwbouw/ZU/name
				,	Geography/rdc_grids/m100, int32
			);
		container Nieuwbouw := =SpecifiekeInstellingen/NieuwbouwInputTemplate + '()';*/
	
}
