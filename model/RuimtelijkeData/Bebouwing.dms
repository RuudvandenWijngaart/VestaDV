//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//       Deze DMS-file wordt aangeroepen door stam.dms                                  //
//       In deze configuratiefile worden de bebouwingscomponenten geconfigureerd.       //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Bebouwing : isHidden = "True"
{
	unit<uint32> BagWoning := BAG/vbo_woonfunctie_studiegebied
	{
		unit<uint8>  BouwjaarDomein        := Classifications/BouwjaarWoning, IsHidden = "True";
		unit<uint8>  WoningtypeBouwjaarBestaandRapportageDomein := Classifications/combines/WoningtypeBouwjaarBestaandRapportage, IsHidden = "True";

		attribute<classifications/WoningType> WoningType_rel := BAG/vbo_woonfunctie_studiegebied/Woningtype_rel;
		
		attribute<nrAsl>                nrAansluitingen_i := const(1, ., nrAsl);
		attribute<m2>                   Oppervlakte_i     := BAG/vbo_woonfunctie_studiegebied/oppervlakte[m2];
		attribute<string>               code              := identificatie;
		
		attribute<Classifications/Combines/WBE> ModelObjectKey := combine_data(Classifications/Combines/WBE, Woningtype_rel, combine_data(Classifications/combines/BE, impl/BouwjaarWoning_rel, Eigendom_rel)), IsHidden = "True";
		attribute<WoningtypeBouwjaarBestaandRapportageDomein> RapObjectKey   := combine_data(WoningtypeBouwjaarBestaandRapportageDomein, Woningtype_rel, Impl/BouwjaarWoningRapportage_rel), IsHidden = "True";
		attribute<BouwjaarDomein>       BouwJaarKlasse := classify(BAG/vbo_woonfunctie_studiegebied/bouwjaar, Classifications/BouwjaarWoning/ClassBreak), isHidden = "True";
		
		unit<uint32> EnergieLabelData := RuimtelijkeData/EnergieLabel/Data, IsHidden = "True";

		attribute<Classifications/SchilLabel> SchilLabel_rel  := /Invoer/RuimtelijkeData/EnergieLabel/LabelToFSS/VBO/Schillabel_afgemeld[/Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/org_rel];
		attribute<uint32>                     SchilLabel_date := /Invoer/RuimtelijkeData/EnergieLabel/LabelToFSS/VBO/SchilLabel_datum[/Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/org_rel];
		
		attribute<Geography/rdc_grids/m25> grid25m_rel := geometry[Geography/rdc_grids/m25];
		
		parameter<string> RF_expr := 'merge(WoningType_rel, bool, '+AsItemList('Invoer/RuimtelijkeData/VastgoedProjectie/VastgoedPeriode/@YR/ResterendFactor/'+Classifications/WoningType/name+'[grid25m_rel] > 0.0')+')'; 
		
		container Resterend := for_each_nedv(Invoer/RuimtelijkeData/VastgoedProjectie/Periode/name, replace(RF_expr, '@YR', Invoer/RuimtelijkeData/VastgoedProjectie/Periode/name), BagWoning, bool);
		attribute<yr_uint16> Sloopjaar_impl := 
			=AsList( replace('not(Resterend/@P) ? Classifications/Periode/V/@P->BeginJaar : ', '@P', Invoer/RuimtelijkeData/VastgoedProjectie/Periode/name), '') + '9999[yr_uint16]'; 
		attribute<yr_uint16> Sloopjaar := max_elem(Sloopjaar_impl, 2023[yr_uint16]);
				
		container impl
		{
			attribute<Classifications/BouwjaarWoning> BouwjaarWoning_rel (..) := BAG/vbo_woonfunctie_studiegebied/BouwjaarWoning_rel;
			attribute<string>                         BouwJaarExcel      (..) := Classifications/BouwjaarWoning/excel_code[BouwjaarWoning_rel];
			
			attribute<Classifications/BouwjaarWoningRapportage> BouwjaarWoningRapportage_rel (..) := 
				isNull(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/bouwjaar) 
					? Classifications/BouwjaarWoningRapportage/onbekend 
					: classify(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/bouwjaar, Classifications/BouwjaarWoningRapportage/ClassBreak);
		}
	}
	
	parameter<string> unionExpr := 'union_data(Woning, BagWoning/@ATTR, VastgoedProjectie/results/@ATTR)';

	unit<uint32> Woning := union_unit(BagWoning, VastgoedProjectie/results)
	{
		attribute<string> code  := =replace(unionExpr, '@ATTR', 'code');
		attribute<string> label := =replace(unionExpr, '@ATTR', 'label');
		attribute<rdc_meter> Geometry := =replace(unionExpr, '@ATTR', 'Geometry');
		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt> buurt_rel := =replace(unionExpr, '@ATTR', 'buurt_rel');
		attribute<Invoer/RuimtelijkeData/BestaandeWarmtenetten/Aflevergebied_data> Aflevergebied_rel := =replace(unionExpr, '@ATTR', 'Aflevergebied_rel');

		attribute<nrAsl> nrAansluitingen_i := =replace(unionExpr, '@ATTR', 'nrAansluitingen_i');
		attribute<m2> Oppervlakte_i        := =replace(unionExpr, '@ATTR', 'Oppervlakte_i');

		attribute<Classifications/combines/WBE> ModelObjectKey := =replace(unionExpr, '@ATTR', 'ModelObjectKey');

		attribute<classifications/WoningType> Woningtype_rel := =replace(unionExpr, '@ATTR', 'Woningtype_rel');
		attribute<classifications/WoningType> BebouwingsType := Woningtype_rel;
		unit<uint8>  	  BebouwingsTypeDomein := Classifications/WoningType;
		attribute<bool> Gasloos                              := =replace(unionExpr, '@ATTR', 'Gasloos');
		attribute<bool> isMeergezins := Woningtype_rel->isMeergezins; // TODO: verwijder en leid af op gebruikspunten.
		attribute<units/pand_asl> Pand_aandeel               := =replace(unionExpr, '@ATTR', 'Pand_aandeel');
		attribute<yr_uint16> bouwjaar                        := =replace(unionExpr, '@ATTR', 'bouwjaar');
		attribute<yr_uint16> Sloopjaar                       := =replace(unionExpr, '@ATTR', 'Sloopjaar');
//		attribute<Geography/rdc_grids/m100> gridm100_rel := =replace(unionExpr, '@ATTR', 'gridm100_rel');
		attribute<Classifications/Eigendom> Eigendom_rel     := =replace(unionExpr, '@ATTR', 'Eigendom_rel');
		attribute<Classifications/SchilLabel> SchilLabel_rel := =replace(unionExpr, '@ATTR', 'SchilLabel_rel');
		attribute<Classifications/SchilLabel> Default_Energielabel_rel := =replace(unionExpr, '@ATTR', 'Default_Energielabel_rel');
		
		attribute<uint32> SchilLabel_date := =replace(unionExpr, '@ATTR', 'SchilLabel_date');
		
		container Bouwdelen := for_each_nedv(Classifications/bouwdeel/name, replace(unionExpr, '@ATTR', 'Bouwdelen/'+Classifications/bouwdeel/name), Woning, m2)
		{
			container Isolatie := for_each_nedv(Classifications/bouwdeel/name, replace(unionExpr, '@ATTR', 'Bouwdelen/Isolatie/'+Classifications/bouwdeel/name), Woning, Classifications/IsolatieNiveau);			
		}

		container Gebied: IsHidden = "True"
		{
			attribute<float64> n      (..) := const(1.0,..);
			attribute<float64> MEAN_x (..) := float64(PointCol(point));
			attribute<float64> MEAN_y (..) := float64(PointRow(point));
			attribute<float64> SSD_xx (..) := const(0.0, ..);
			attribute<float64> SSD_xy (..) := const(0.0, ..);
			attribute<float64> SSD_yy (..) := const(0.0, ..);
		}

		container Criteria : IsHidden = "True";		
	}

	unit<uint32> Util := BAG/vbo_utiliteit_studiegebied, IsHidden = "True"
	{
		unit<uint8>  BebouwingsTypeDomein := Classifications/UtilTypeBestaand ,isHidden = "True";
		unit<uint8>  BouwjaarDomein       := Classifications/BouwjaarUtilBestaand, IsHidden = "True";
		unit<uint8>  ModelObjectKeyDomein := Classifications/combines/UtiltypeBouwjaarBestaand, IsHidden = "True";

		attribute<string> code     := BAG/vbo_utiliteit_studiegebied/identificatie;
		attribute<string> postcode := BAG/vbo_utiliteit_studiegebied/postcode;

		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt> buurt_rel := BAG/vbo_utiliteit_studiegebied/buurt_rel, isHidden = "True";

		attribute<rdc_meter>                point    := BAG/vbo_utiliteit_studiegebied/locatie, isHidden = "True";
		attribute<Classifications/BouwJaarUtilBestaand> BouwJaar := classify(BAG/vbo_utiliteit_studiegebied/bouwjaar, Classifications/BouwJaarUtilBestaand/ClassBreak), isHidden = "True";

		attribute<nrAsl>                    nrAansluitingen_i := const(1[nrAsl], .);
		attribute<m2>                       Oppervlakte_i     := BAG/vbo_utiliteit_studiegebied/oppervlakte[m2];

		container Gebied: IsHidden = "True"
		{
			attribute<float64> n      (..) := const(1.0, ..);
			attribute<float64> MEAN_x (..) := PointCol(point);
			attribute<float64> MEAN_y (..) := PointRow(point);
			attribute<float64> SSD_xx (..) := const(0.0, ..);
			attribute<float64> SSD_xy (..) := const(0.0, ..);
			attribute<float64> SSD_yy (..) := const(0.0, ..);
		}

		// foreign key to model data
		attribute<Classifications/BouwjaarUtilBestaand> BouwjaarUtilBestaand_rel := BAG/vbo_utiliteit_studiegebied/BouwjaarUtilBestaand_rel, isHidden = "True";
		attribute<BebouwingsTypeDomein>                 WoningType_rel           := BAG/vbo_utiliteit_studiegebied/gebruiksdoel, isHidden = "True";
		attribute<ModelObjectKeyDomein>                 ModelObjectKey           := combine_data(ModelObjectKeyDomein, WoningType_rel, impl/BouwjaarUtilBestaand_rel);
		attribute<int16>                                SymbolIndex              := BebouwingsTypeDomein/SymbolIndex[WoningType_rel], DialogType = "SymbolIndex", isHidden = "True";

		container Criteria
		{
		}

		container impl : isHidden = "True"
		{
			attribute<nrAsl>                                nrWon                    (..) := const(1,..,nrAsl);

			attribute<Classifications/BouwjaarUtilBestaand> BouwjaarUtilBestaand_rel (..) := BAG/vbo_utiliteit_studiegebied/BouwjaarUtilBestaand_rel;
			attribute<string>                               BouwJaarExcel            (..) := Classifications/BouwjaarUtilBestaand/excel_code[BouwjaarUtilBestaand_rel];
		}
	}

/*		container Util_Nieuwbouw_Inbreiding :=
			for_each_nedv(
				RuimtelijkeData/Nieuwbouw/ZU/hasNieuwbouw ? RuimtelijkeData/Nieuwbouw/ZU/name : ''
				,	RuimtelijkeData/Nieuwbouw/ZU/Periode_Eindjaar > 2010w && strlen(RuimtelijkeData/Nieuwbouw/ZU/wlo_filename_Nieuwbouw) > 0 
				?	'int32(sum( '
						'Util/Oppervlakte_i * ' +
						'float64(Util/BebouwingsTypeDomein/UtilTypeNieuwbouw_rel[Util/BebouwingsType] == '+string(RuimtelijkeData/Nieuwbouw/ZU/nr_2)+'[uint8])'
					+	', Util/point[rdc_grids/m100]'
					')'
					'*max_elem(float64(RuimtelijkeData/Nieuwbouw/InbreidingUtilFactor/'+RuimtelijkeData/Nieuwbouw/ZU/name+') - 1.0 , 0.0)'
					')'
				:	'const(0i, Geography/rdc_grids/m100)'
				,	Geography/rdc_grids/m100, int32
			);

		container Util_Nieuwbouw_Nieuwbouw :=
			for_each_nedv(
				RuimtelijkeData/Nieuwbouw/ZU/hasNieuwbouw ? RuimtelijkeData/Nieuwbouw/ZU/name : ''
				,	RuimtelijkeData/Nieuwbouw/ZU/Periode_Eindjaar > 2010w && strlen(RuimtelijkeData/Nieuwbouw/ZU/wlo_filename_Nieuwbouw) > 0 
					?	'int32(RuimtelijkeData/Nieuwbouw/UtilOppervlak/'+RuimtelijkeData/Nieuwbouw/ZU/name +')'
						''
					:	'const(0i, Geography/rdc_grids/m100)'
				,	Geography/rdc_grids/m100, int32
			);

		container NieuwbouwUtil :=
			for_each_nedv(
				RuimtelijkeData/Nieuwbouw/ZU/hasNieuwbouw ? RuimtelijkeData/Nieuwbouw/ZU/name : ''
				,	'Util_Nieuwbouw_Nieuwbouw/'+RuimtelijkeData/Nieuwbouw/ZU/name + ' + Util_Nieuwbouw_Inbreiding/'+RuimtelijkeData/Nieuwbouw/ZU/name
				,	Geography/rdc_grids/m100, int32
			);
		container Nieuwbouw := =SpecifiekeInstellingen/NieuwbouwInputTemplate + '()';*/
	
}
