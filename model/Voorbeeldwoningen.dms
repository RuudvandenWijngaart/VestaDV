//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2021 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////
container voorbeeldwoningen
{
	unit<uint32> vbw_data: StorageName = "%projDir%/data/voorbeeldwoningen_NTA8800_v0.5.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"; 
	
	unit<uint32> Bouwdelen_vbw_dataset:= select_with_attr_by_org_rel(Classifications/Bouwdeel,const(True,Classifications/Bouwdeel))
	{
		attribute<string>    label_vbw  : ['raam_slaap', 'raam_leef', 'deuren', 'paneel', 'vloeren', 'gevels','gevels',  'daken', 'daken', 'kieren'];
		container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
	}
	
	unit<uint32> vbw := select_with_org_rel(IsDefined(vbw_data/samengevoegd_woningtype))
	{
		attribute<nrAsl> 						Nr_asl					(vbw)	:= const(1[nrAsl],.);
		attribute<uint32> 						gebouwtype_gecodeerd 	(vbw)	:= vbw_data/gebouwtype_validatietool[org_rel][uint32]; // Kan gebruikt worden wanneer sleutel codering er is.
		attribute<uint32> 						gebouwsubtype_gecodeerd (vbw)	:= vbw_data/gebouwsubtype_validatietool[org_rel][uint32]; // Kan gebruikt worden wanneer sleutel codering er is.
		attribute<string> 						samengevoegd_woningtype (vbw) 	:= vbw_data/samengevoegd_woningtype[org_rel];
		attribute<Classifications/WoningType>	Woningtype				(vbw)  	:= strcount(samengevoegd_woningtype, 'vrijstaand') > 0 	  	? Classifications/WoningType/V/vrijstaand
																				: strcount(samengevoegd_woningtype, '2 onder 1 kap') > 0  	? Classifications/WoningType/V/twee_onder_1_kap
																				: strcount(samengevoegd_woningtype, 'galerij') > 0 		  	? Classifications/WoningType/V/meergezinspand_laag_midden
																				: strcount(samengevoegd_woningtype, 'maisonnette') > 0 	  	? Classifications/WoningType/V/meergezinspand_laag_midden
																				: strcount(samengevoegd_woningtype, 'portiek') > 0 		  	? Classifications/WoningType/V/meergezinspand_laag_midden // klopt dit?
																				: strcount(samengevoegd_woningtype, 'rijwoning hoek') > 0 	? Classifications/WoningType/V/hoekwoning
																				: strcount(samengevoegd_woningtype, 'rijwoning tussen') > 0 ? Classifications/WoningType/V/tussenwoning
																				: Classifications/WoningType/V/tussenwoning; // Bovenstaande classificatie omvat alle inputwaardes, dus deze waarde maakt niet uit. 
		
		attribute<Classifications/EnergieLabel> EnergieLabel_NTA		(vbw) 	:= rlookup(vbw_data/energielabel_NTA,Classifications/EnergieLabel/label)[org_rel];
		attribute<Classifications/schillabel> 	schillabel_NTA			(vbw)	:= lookup(EnergieLabel_NTA, Classifications/Energielabel/schillabel_rel); // Op basis van energielabel, want verondersteld dat alle vbw een Hr-ketel hebben
		attribute<Classifications/EnergieLabel> EnergieLabel_NEN		(vbw) 	:= rlookup(vbw_data/energielabel_obv_ELG_NEN7120,Classifications/EnergieLabel/label)[org_rel]; // Placeholder voor wanneer NEN energielabels toegevoegd worden
		attribute<Classifications/schillabel> 	Schillabel_NEN			(vbw)	:= lookup(EnergieLabel_NEN, Classifications/Energielabel/schillabel_rel); // Op basis van energielabel, want verondersteld dat alle vbw een Hr-ketel hebben
		
		attribute<Classifications/EnergieLabel> EnergieLabel			(vbw) 	:= EnergieLabel_NTA; // Kies welk energielabel gebruikt wordt in de berekeningen en de output
		attribute<Classifications/schillabel> 	schillabel				(vbw)	:= lookup(EnergieLabel, Classifications/Energielabel/schillabel_rel); // Op basis van energielabel, want verondersteld dat alle vbw een Hr-ketel hebben


		attribute<uint16> 						BouwJaar 				(vbw)	:= vbw_data/bouwjaar[org_rel][uint16];
		attribute<string> 						BouwjaarKlasseData		(vbw)	:= vbw_data/Bouwjaarklasse[org_rel];
		attribute<uint16> 						BouwjaarUitBouwjaarKlasseData		(vbw)	:= strcount(BouwjaarKlasseData, '< 1946') > 0	? 1923[uint16]
																				: strcount(BouwjaarKlasseData, '1946 - 1964') > 0 	  		? 1950[uint16]
																				: strcount(BouwjaarKlasseData, '< 1965') > 0 	  			? 1928[uint16]
																				: strcount(BouwjaarKlasseData, '1965 - 1974') > 0 	  		? 1970[uint16]
																				: strcount(BouwjaarKlasseData, '1975 - 1991') > 0 	  		? 1983[uint16]
																				: strcount(BouwjaarKlasseData, '1992 - 2005') > 0 	  		? 1999[uint16]
																				: strcount(BouwjaarKlasseData, '2006 - 2014') > 0 	  		? 2010[uint16]
																				: strcount(BouwjaarKlasseData, '> 2014') > 0 	  			? 2017[uint16]
																				: 9999[uint16]; // Bovenstaande classificatie omvat alle inputwaardes, dus deze waarde maakt niet uit. 
		attribute<Classifications/BouwjaarWoning> BouwjaarKlasse		(vbw)	:= classify(BouwjaarUitBouwjaarKlasseData, Classifications/BouwjaarWoning/ClassBreak); // Kies welk soort bouwjaar gebruikt moet worden in de berekeningen en de output
		attribute<m2> 							Oppervlakte 			(vbw)	:= vbw_data/gebruiksoppervlakte[org_rel][m2];
		attribute<bool> 						IsMeergezins 			(vbw)	:= strcount(vbw_data/hoofdtype[org_rel], 'meergezins') > 0;
		attribute<RuimtelijkeData/StudieGebied/Buurt> Buurt_rel 		(vbw)	:= point_in_polygon(point, Invoer/RuimtelijkeData/StudieGebied/Buurt/geometry);
		attribute<Classifications/Eigendom>		Eigendom				(vbw)	:= const(Classifications/Eigendom/V/Koop,.); // Dummywaarde. 
		attribute<Classifications/combines/WBE> ModelObjectKey   		(vbw)	:= combine_data(Classifications/combines/WBE , Woningtype , combine_data( Classifications/combines/BE , BouwjaarKlasse , Eigendom ));
		
		attribute<kWh_yr_m2> 					PrimairFossiel_NTA8800	(vbw) 	:= vbw_data/BENG2[org_rel][kWh_yr_m2];
		attribute<m2> 							Verliesoppervlak 		(vbw) 	:= vbw_data/verliesoppervlak[org_rel][m2];
		attribute<float64> 						qv10			 		(vbw) 	:= vbw_data/qv10waarde[org_rel][float64];
		
		container Bouwdelen := for_each_ind(
			'ne'
			,Bouwdelen_vbw_dataset/name
			,'Templates/BouwdeelInformatie(Bouwdelen_vbw_dataset/V/'+Bouwdelen_vbw_dataset/name+')'
			);
		
		container Installaties
		{
			attribute<Classifications/installatie> 	RVb 	(vbw)	:= const(Classifications/Installatie/V/hr,..);
			attribute<Classifications/installatie> 	RVp 	(vbw)	:= const(Classifications/Installatie/V/hr,..);
			
			attribute<string> 						WarmTapwaterInstallatie_str		(vbw) 	:= vbw_data/empty527[org_rel];
			attribute<Classifications/installatie> 	TWb 	(vbw)	:= // Lijkt aannemelijk, codes voor data volgen
			 strcount(WarmTapwaterInstallatie_str, 'HR107') 		 > 0 ? Classifications/Installatie/V/hr
			: strcount(WarmTapwaterInstallatie_str, 'VRleid') 		 > 0 ? Classifications/Installatie/V/vr
			: strcount(WarmTapwaterInstallatie_str, 'WPel') 		 > 0 ? Classifications/Installatie/V/eWP_lw
			: strcount(WarmTapwaterInstallatie_str, 'combi Gaskeur') > 0 ? Classifications/Installatie/V/hr
			: strcount(WarmTapwaterInstallatie_str, 'keukengeiser')  > 0 ? Classifications/Installatie/V/DS_keuken
			: strcount(WarmTapwaterInstallatie_str, 'HR/CW') 		 > 0 ? Classifications/Installatie/V/hr
			: Classifications/Installatie/V/hr;
			
			attribute<Classifications/installatie> 	TWp 	(vbw)	:= // Lijkt aannemelijk, codes voor data volgen
			 strcount(WarmTapwaterInstallatie_str, 'HR107') 		 > 0 ? Classifications/Installatie/V/hr
			: strcount(WarmTapwaterInstallatie_str, 'VRleid') 		 > 0 ? Classifications/Installatie/V/vr
			: strcount(WarmTapwaterInstallatie_str, 'WPel') 		 > 0 ? Classifications/Installatie/V/eWP_lw
			: strcount(WarmTapwaterInstallatie_str, 'combi Gaskeur') > 0 ? Classifications/Installatie/V/hr
			: strcount(WarmTapwaterInstallatie_str, 'keukengeiser')  > 0 ? Classifications/Installatie/V/hr
			: strcount(WarmTapwaterInstallatie_str, 'HR/CW') 		 > 0 ? Classifications/Installatie/V/hr
			: Classifications/Installatie/V/hr;

			attribute<uint32> 						KoudeOpwekker_gecodeerd (vbw)		:= vbw_data/koeling_opwekking_1_type_koudeopwekker[org_rel][uint32]; // Kan gebruikt worden wanneer sleutel codering er is.
			attribute<Classifications/installatie> 	KDb 	(vbw)	:= const(Classifications/Installatie/V/geen,..); //dummywaarde
			attribute<Classifications/installatie> 	KDp 	(vbw)	:= const(Classifications/Installatie/V/geen,..); //dummywaarde
			
			
			attribute<bool> 						KokenGas (vbw) 	:= vbw_data/mwa_koken_gas[org_rel][bool];
			attribute<Kengetallen/OverigeInstallaties/KK/Installatietypes> KK (vbw) := KokenGas ? Kengetallen/OverigeInstallaties/KK/Installatietypes/V/gas : Kengetallen/OverigeInstallaties/KK/Installatietypes/V/elek;

			attribute<Kengetallen/OverigeInstallaties/DK/Installatietypes> DK (vbw) := const(Kengetallen/OverigeInstallaties/DK/Installatietypes/V/geen,..); // Lijkt aannemelijk, codes voor data volgen
		
			attribute<string> 						Ventilatie_str		(vbw) 		:= vbw_data/empty281[org_rel];
			attribute<uint32> 						VT_InstallatieJaar	(vbw) 	:= vbw_data/ventilatie_installatiejaar[org_rel][uint32];
	
			attribute<Kengetallen/OverigeInstallaties/VT/Installatietypes> VT (vbw) := 
			strcount(ventilatie_str, 'natuurlijk') > 0 ? Kengetallen/OverigeInstallaties/VT/Installatietypes/V/nat
			: strcount(ventilatie_str, 'D1') > 0 ? Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Bal_Wtw
			: strcount(ventilatie_str, 'mechanisch') > 0 && strcount(ventilatie_str, 'gelijkstroom') > 0 && VT_InstallatieJaar > 2006 ? Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Mec_Glk_new
			: strcount(ventilatie_str, 'mechanisch') > 0 && strcount(ventilatie_str, 'gelijkstroom') > 0 && VT_InstallatieJaar < 2007 ? Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Mec_Glk_oud
			: strcount(ventilatie_str, 'mechanisch') > 0 && strcount(ventilatie_str, 'wisselstroom') > 0 ? Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Mec_Wis
			: strcount(ventilatie_str, 'mechanisch') > 0 && strcount(ventilatie_str, 'C5a') > 0 ? Kengetallen/OverigeInstallaties/VT/Installatietypes/V/Mec_Vst_Glk_new
			: Kengetallen/OverigeInstallaties/VT/Installatietypes/V/nat;  // https://www.joostdevree.nl/shtmls/mechanische_ventilatie.shtml voor uitleg ventilatiecodes
		}
		
		attribute<vbw>                      vbw_rel (vbw) := id(.), ishidden = "True";
		attribute<Geography/rdc_meter>      point   (vbw) := rjoin(const('DE BILT', vbw) , Invoer/RuimtelijkeData/Klimaat/Station/label, Invoer/RuimtelijkeData/Klimaat/Station/geometry);
		attribute<Geography/rdc_grids/m100> gridm100_rel  := point[Geography/rdc_grids/m100];
		attribute<ratio> KlimaatFactorMap        (Geography/rdc_grids/m100) := MakeDefined(KlimaatFactorMapPartial, mean(KlimaatFactorMapPartial));
		attribute<ratio> KlimaatFactorMapPartial (Geography/rdc_grids/m100) := ='Invoer/RuimtelijkeData/klimaat/Grid/Kaart/startjaar[ratio]';




		container Gedragfactor := SpecifiekeInstellingen/RuimtelijkeVraag/Gedrag;

		container Fvraag_Hestia_startsituatie := Templates/functionele_vraag(vbw, /Invoer/Kengetallen/Bebouwing/Woning/results , Classifications/BebouwingsSector/V/Woning ); 

		container Fvraag_Hestia := Templates/BerekenFunctioneel(vbw, vbw, id(.)); 

		container Mvraag_Hestia := Templates/FunctioneelToMetervraag(vbw, False , 'Fvraag_Hestia');
		
		container Fvraag_Vivet := Templates/functionelevraag_VIVET(vbw);

		container Mvraag_Vivet := Templates/FunctioneelToMetervraag(vbw, False , 'Fvraag_Vivet');
		
		container Elabels := Templates/NTA8800(vbw);	
	}
	
	#include <%projDir%/model/voorbeeldwoningen/templates.dms>
	
	unit<uint32> vbwSelectie := select_with_org_rel(const(true, vbw))
		{
			attribute<string> 	Samengevoegd_woningtype	(.) := vbw/samengevoegd_woningtype[org_rel];
			attribute<string> 	WoningType 				(.) := lookup(vbw/WoningType,Classifications/WoningType/name)[org_rel];
			attribute<uint16> 	BouwJaar				(.) := vbw/BouwJaar[org_rel];
			attribute<string> 	EnergieLabel			(.) := lookup(vbw/EnergieLabel, Classifications/EnergieLabel/name)[org_rel];
			attribute<string> 	Schillabel_NTA			(.) := lookup(vbw/schillabel_NTA, Classifications/schillabel/name)[org_rel];
			attribute<string> 	Schillabel_NEN			(.) := lookup(vbw/schillabel_NEN, Classifications/schillabel/name)[org_rel];
			attribute<string> 	Schillabel_Hestia		(.) := lookup(vbw/Elabels/Energielabel_rel, Classifications/schillabel/name)[org_rel];
			attribute<float64>	Oppervlakte				(.) := vbw/Oppervlakte[org_rel];
			
			attribute<string> 	Installatie_RVb	(.) := lookup(vbw/Installaties/RVb, Classifications/installatie/name)[org_rel];
			attribute<string> 	Installatie_RVp (.) := lookup(vbw/Installaties/RVp, Classifications/installatie/name)[org_rel];
			attribute<string> 	Installatie_TWb (.) := lookup(vbw/Installaties/TWb, Classifications/installatie/name)[org_rel];
			attribute<string> 	Installatie_TWp (.) := lookup(vbw/Installaties/TWp, Classifications/installatie/name)[org_rel];
			attribute<string> 	Installatie_KK 	(.) := lookup(vbw/Installaties/KK, Invoer/Kengetallen/OverigeInstallaties/KK/Installatietypes/name)[org_rel];
			attribute<string> 	Installatie_VT 	(.) := lookup(vbw/Installaties/vt, Invoer/Kengetallen/OverigeInstallaties/VT/Installatietypes/name)[org_rel];
			
			attribute<string>	IsolatieNiveau_RB	(.) := lookup(vbw/Bouwdelen/RB/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_RO	(.) := lookup(vbw/Bouwdelen/RO/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_DR	(.) := lookup(vbw/Bouwdelen/DR/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_PL	(.) := lookup(vbw/Bouwdelen/PL/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_VL	(.) := lookup(vbw/Bouwdelen/VL/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_MG	(.) := lookup(vbw/Bouwdelen/MG/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_MS	(.) := lookup(vbw/Bouwdelen/MS/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_DP	(.) := lookup(vbw/Bouwdelen/DP/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_DS	(.) := lookup(vbw/Bouwdelen/DS/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			attribute<string>	IsolatieNiveau_KR	(.) := lookup(vbw/Bouwdelen/KR/IsolatieNiveau_rel , Classifications/IsolatieNiveau/name)[org_rel];
			
			attribute<GJ_yr> 	Fvraag_RV_Hestia	(.) := vbw/fvraag_Hestia/RV[org_rel];
			attribute<GJ_yr> 	Fvraag_TW_Hestia 	(.) := vbw/fvraag_Hestia/TW[org_rel];
			attribute<GJ_yr> 	Fvraag_KK_Hestia 	(.) := vbw/fvraag_Hestia/KK[org_rel];
			
			attribute<GJ_yr> 	Fvraag_RV_Vivet						(.) := vbw/fvraag_Hestia_startsituatie/Functioneel/RV[org_rel]; // RV in startsituatie is gefit op vivet
			attribute<GJ_yr> 	Fvraag_RV_Vivet_meerdere_populaties	(.) := vbw/fvraag_vivet/RV[org_rel]; // wijkt af van Fvraag_RV_Vivet voor vrijstaande woningen
			attribute<GJ_yr> 	Fvraag_TW_Vivet 					(.) := vbw/fvraag_vivet/TW[org_rel];
			attribute<GJ_yr> 	Fvraag_KK_Vivet 					(.) := vbw/fvraag_vivet/KK[org_rel];
			
			attribute<GJ_yr> 	Fvraag_RV_Hestia_ongefit	(.) := vbw/fvraag_Hestia_startsituatie/warmteverlies_theoretisch_startjaar/Theoretisch_RV[org_rel];
			attribute<GJ_yr> 	Fvraag_RV_Hestia_vanuit_ongefit_berekend	(.) := Fvraag_RV_Hestia_ongefit * Fitfactor_RV  * BinnenTemperatuurCorrectieFactor - Warmtewinst;
			
			attribute<GJ_yr> 	Warmtewinst					(.) := vbw/Fvraag_Hestia/warmtewinst/totaal [org_rel];
			attribute<float64>	Fitfactor_RV				(.) := vbw/fvraag_Hestia_startsituatie/warmteverlies_theoretisch_startjaar/Fitfactor[org_rel];
			attribute<ratio> 	Lokale_praktijkfactor 		(.) := vbw/fvraag_Hestia_startsituatie/warmteverlies_theoretisch_startjaar/gemeten_correctie/Verschilfactor[org_rel];
			attribute<ratio> 	BinnenTemperatuurCorrectieFactor 		(.) := /Invoer/voorbeeldwoningen/vbw/Fvraag_Hestia/Correction_RV[org_rel];
			
			attribute<GJ_yr> 	Mvraag_gas_Hestia 							(.) := vbw/Mvraag_Hestia/result/gas[org_rel];
			attribute<GJ_yr> 	Mvraag_elek_Hestia 							(.) := vbw/Mvraag_Hestia/result/e[org_rel];
			attribute<GJ_yr> 	Mvraag_elek_Hestia_zonder_ventilatie_EA 	(.) := vbw/Mvraag_Hestia/result/e_zonder_ventilatie_EA[org_rel];
			attribute<GJ_yr>	Mvraag_totaal_Hestia 						(.) := vbw/Mvraag_Hestia/result/total[org_rel];
			attribute<GJ_yr> 	Mvraag_totaal_Hestia_zonder_ventilatie_EA	(.) := vbw/Mvraag_Hestia/result/total_zonder_ventilatie_EA[org_rel];
			
			attribute<GJ_yr> 	Mvraag_gas_Vivet 	(.) := vbw/Mvraag_vivet/result/gas[org_rel];
			attribute<GJ_yr> 	Mvraag_elek_vivet 	(.) := vbw/Mvraag_vivet/result/e[org_rel];
			attribute<GJ_yr> 	Mvraag_totaal_vivet	(.) := vbw/Mvraag_vivet/result/total[org_rel];
		}
}