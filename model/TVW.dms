
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2022 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container TVW : IsHidden = "True"
{
	container gemeente
	{
		unit<uint32> gemeente_input
			:	StorageName     = "%HestiaDataDir%/TVW/Gemeente.csv"
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> label :=  uppercase(id_gm_code_);
			}

		unit<uint32> GM := RuimtelijkeData/StudieGebied/Gemeente
		{
			attribute<gemeente_input> input_rel   := rlookup(GM_code, uppercase(gemeente_input/label));
			attribute<bool>           has_TVW     := isDefined(input_rel);
			attribute<nrAsl>          nr_Asl      := sum(TussenResultaten/StartJaar/BebouwingsComponenten/Woning/BO/nrAansluitingen, Invoer/RuimtelijkeData/StudieGebied/Buurt/Gemeente_rel[TussenResultaten/StartJaar/BebouwingsComponenten/Woning/BO/PlanRegio_rel]);
			attribute<string>         GM_doel_str := gemeente_input/GM_doel_tekst_[input_rel];
			attribute<Geography/RegioIndelingen/Energieregio> Energieregio_rel := RuimtelijkeData/StudieGebied/Gemeente/Energieregio_rel;
		}
	}

	container document
	{
		unit<uint32> document_input
			:	StorageName     = "%HestiaDataDir%/TVW/Document.csv"
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> label :=  uppercase(id_doc_code_);	
			}

		unit<uint32> DC := document_input
		{
			attribute<Class/doctype>   doctype_rel   := uint32(doc_type_code_);
			attribute<Class/docstatus> docstatus_rel := uint32(doc_status_tekst_);
			attribute<gemeente/GM>     GM_rel        := rlookup(gemeente_gem_code_, gemeente/GM/GM_code);
		}
	}
	
	container plan
	{
		unit<uint32> plantabel_input
			:	StorageName     = "%HestiaDataDir%/TVW/plan.csv"
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> label :=  uppercase(id_pln_code_);	
				attribute<planshape_input> shp_rel :=  rlookup(uppercase(id_pln_code_), uppercase(planshape_input/pln_code));	
			}
		unit<uint32> planshape_input_complex
			:	StorageName     = "%HestiaDataDir%/TVW/TVW_Plan.shp"
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> label :=  uppercase(pln_code);	

				attribute<bool> geom_ok := isDefined(geometry);

				attribute<geography/rdc_meter> geometry_RD (poly) := LatLongWgs842RD(geometry, geography/rdc_meter);
			}

		unit<uint32> planshape_input
			:	StorageName     = "%HestiaDataDir%/TVW/TVW_Plan_simplified.shp"
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> label :=  uppercase(pln_code);	

				attribute<bool> geom_ok := isDefined(geometry);

				attribute<geography/rdc_meter> geometry (poly);
				attribute<geography/rdc_meter> geometry_RD (poly) := geometry;
			}

		unit<uint32> PL := plantabel_input
		{
			attribute<geography/rdc_meter>  geometry (poly)    := planshape_input/geometry_RD[shp_rel], IntegrityCheck = "isDefined(this)";

			attribute<string> 				Plan_code 		   := plantabel_input/id_pln_code_;
			attribute<string>               Plan_naam          := plantabel_input/naam_tekst_;
			attribute<document/DC>          DC_rel             := isDefined(rlookup(document_doc_code_, document/DC/label)) ? rlookup(document_doc_code_, document/DC/label) : rlookup('DC' + substr(label, 2, 6), uppercase(document/DC/label)), IntegrityCheck = "isDefined(this)";
			attribute<gemeente/GM>          GM_rel             := isDefined(document/DC/GM_rel[DC_rel]) ? document/DC/GM_rel[DC_rel] : rlookup('GM' + substr(label, 2, 4), uppercase(gemeente/GM/GM_code)), IntegrityCheck = "isDefined(this)";
			attribute<string> 		     	Plan_doel 		   := plantabel_input/pln_doel_tekst_;
			attribute<Geography/RegioIndelingen/Energieregio> Energieregio_rel := gemeente/GM/Energieregio_rel[GM_rel];

			attribute<Class/Plansoort>      Plansoort_rel      := uint32(Plansoort_code_)              , IntegrityCheck = "isDefined(this)"; // Integritycheck geeft error want er staan 8 plannen met onbekend in, wat geen uint32 is. Heb deze in de csv veradnert, als tijdelijke oplossing/.
			attribute<Class/Planstatus>     Planstatus_rel     := uint32(pln_planstatus_code_code_)    , IntegrityCheck = "isDefined(this)";
			attribute<Class/Techniekstatus> Techniekstatus_rel := uint32(pln_techniekstatus_code_code_), IntegrityCheck = "isDefined(this)";
			attribute<Class/Isolatiegraad>  Isolatiegraad_rel  := uint32(isolatiegraad_code_code_)     , IntegrityCheck = "isDefined(this)";
			attribute<Class/Installatie>    Installatie_rel    := uint32(installatie_code_code_)       , IntegrityCheck = "isDefined(this)";
			attribute<Class/Infrastructuur> Infrastructuur_rel := uint32(infrastructuur_code_code_)    , IntegrityCheck = "isDefined(this)";
			attribute<Class/Energiebron>    Energiebron_rel    := uint32(energiebron_code_code_)       , IntegrityCheck = "isDefined(this)";
			attribute<string>               Energiebron_txt    := Energiebron_tekst_;

			//attribute<nrAsl>                nrAansluitingen    := VBO/Matching/VBO_count                , IntegrityCheck = "isDefined(this)";
			container Matching
			{
				attribute<ipoint> 				geometry_i  		(PL, poly) 			         			   := ipolygon(geometry);
				
				container Gemeentes
				{
					attribute<geography/rdc_meter>  gemeente_geometry   (Geography/RegioIndelingen/Gemeente, poly) := Geography/RegioIndelingen/Gemeente/geometry;
					attribute<ipoint>			 	gemeente_geometry_i (Geography/RegioIndelingen/Gemeente, poly) := ipolygon(gemeente_geometry);

					unit<uint32>      GemeenteKruistabel := overlay_polygon(geometry_i, gemeente_geometry_i)
					{
						attribute<units/m2>  oppervlak_overlap  (GemeenteKruistabel)  := area(GemeenteKruistabel/geometry[geography/rdc_meter], units/m2);
					}
					unit<uint32> GemeenteKruistabelGecorrigeerd := select_afew(GemeenteKruistabel, GemeenteKruistabel/oppervlak_overlap > 10000[m2]);
					
					attribute<uint32> Aantal  		(PL) := count(GemeenteKruistabelGecorrigeerd/second_rel, GemeenteKruistabelGecorrigeerd/first_rel);
				}
				
				container Bedrijventerreinen
				{
					attribute<ratio>  RatioUBouw  (PL) := UBouw/Matching/RatioUBouw_plan;
					attribute<nrAsl>  VBO_count   (PL) := UBouw/Matching/VBO_count;
					attribute<nrAsl>  UBouw_count (PL) := UBouw/Matching/UBouw_count;
					attribute<bool>   InNaam (PL)      := UBouw/Matching/BedrijventerreinInNaam;
					attribute<bool>   InDoel (PL)      := UBouw/Matching/BedrijventerreinInDoel;
					unit<uint32>      Kruistabel       := overlay_polygon(geometry_i, UBouw/Bedrijventerreinshape_input/geometry_bedrijventerrein_i);
					attribute<uint32> Aantal (PL)      := count(Kruistabel/second_rel, Kruistabel/first_rel);
				}
				
				container eindjaar
				{
					parameter<uint32> start_cutoff := 2000;
					parameter<uint32> eind_cutoff  := 2030;
					attribute<uint32> plan (PL) := uint32(right(trim(plantabel_input/eindjaar_yyyy_),4));
					attribute<bool> binnen_cutoff (PL) := plan > start_cutoff && plan <= eind_cutoff;
				}
			}
		}		
		
		container select_with_org_rels
		{
			unit<uint32> BinnenEindjaarCutoff := select_afew(PL, PL/matching/eindjaar/binnen_cutoff);
			//unit<uint32> BinnenEindjaarCutoff := select_afew(PL, const(True, PL)); // Uncomment wanneer alle plannen in select_with_org_rel moeten

			unit<uint32> Wnet := select_afew(BinnenEindjaarCutoff, BinnenEindjaarCutoff/Installatie_rel == Class/Installatie/V/Wnet && (BinnenEindjaarCutoff/Planstatus_rel == Class/Planstatus/V/uitvoerend || BinnenEindjaarCutoff/Planstatus_rel == Class/Planstatus/V/definitief))
			{
				Attribute<uint32> U_count := UBouw/Matching/P_count[org_rel];
				Attribute<uint32> W_count := Woning/Matching/P_count[org_rel];
			}

			unit<uint32> WnetConcreet := select_afew(PL, 
			PL/Installatie_rel == Class/Installatie/V/Wnet 
			&& Class/Energiebron/aquathermie[PL/Energiebron_rel]             == False  
			&& Class/Energiebron/geothermie[PL/Energiebron_rel]              == False
			&& Class/Energiebron/ZON[PL/Energiebron_rel]                     == False
			&& Class/Energiebron/WKO[PL/Energiebron_rel]                     == False
			&& Class/Energiebron/collectieve_warmtepomp[PL/Energiebron_rel]  == False
			&& Class/Energiebron/onbekend[PL/Energiebron_rel]                == False
			&& Class/Energiebron/WKO[PL/Energiebron_rel]                     == False
			&& Class/Energiebron/collectieve_warmtepomp[PL/Energiebron_rel]  == False
			&& Class/Energiebron/zon[PL/Energiebron_rel]                     == False
			&& Class/Energiebron/niet_specifiek_benoemd[PL/Energiebron_rel]  == False
			&& Class/Energiebron/niet_van_toepassing[PL/Energiebron_rel]     == False
			&& Class/Energiebron/diverse_opties_mogelijk[PL/Energiebron_rel] == False );
			
			unit<uint32> WnetMeerdereGemeentes := select_afew(PL, 
				PL/Matching/Gemeentes/Aantal > 1
				&& PL/Installatie_rel == Class/Installatie/V/Wnet);
			
			unit<uint32> WnetConcreetMeerdereGemeentes := select_afew(WnetConcreet, PL/Matching/Gemeentes/Aantal[WnetConcreet/org_rel] > 1);

			unit<uint32> PL_Bedrijventerrein  := select_afew(PL, isDefined(PL/geometry))
			{
				attribute<ratio>  RatioUBouw_vbo  (PL_Bedrijventerrein) := UBouw/Matching/RatioUBouw_plan_vbo[org_rel];
				attribute<ratio>  RatioUBouw_area (PL_Bedrijventerrein) := UBouw/Matching/RatioUBouw_plan_area[org_rel];
				attribute<nrAsl>  VBO_count   (PL_Bedrijventerrein) := UBouw/Matching/VBO_count[org_rel];
				attribute<nrAsl>  UBouw_count (PL_Bedrijventerrein) := UBouw/Matching/UBouw_count[org_rel];
				attribute<bool>   BedrijventerreinInNaam (PL_Bedrijventerrein) := UBouw/Matching/BedrijventerreinInNaam[org_rel];
				attribute<bool>   BedrijventerreinInDoel (PL_Bedrijventerrein) := UBouw/Matching/BedrijventerreinInDoel[org_rel];
				attribute<ipoint> geometry_i  (poly) 			    := ipolygon(geometry);
				unit<uint32>      BedrijventerreinenKruistabel      := overlay_polygon(geometry_i, UBouw/Bedrijventerreinshape_input/geometry_bedrijventerrein_i);
				attribute<uint32> AantalBedrijventerreinen (PL_Bedrijventerrein) := count(BedrijventerreinenKruistabel/second_rel, BedrijventerreinenKruistabel/first_rel);
			}
			
			unit<uint32> PL_Bedrijventerrein_Ratio_80  := select_afew(PL_Bedrijventerrein, PL_Bedrijventerrein/RatioUBouw_area >= 0.80);
			unit<uint32> PL_Bedrijventerrein_naam      := select_afew(PL_Bedrijventerrein, PL_Bedrijventerrein/BedrijventerreinInNaam);
			unit<uint32> PL_Bedrijventerrein_doel      := select_afew(PL_Bedrijventerrein, PL_Bedrijventerrein/BedrijventerreinInDoel);
			unit<uint32> PL_Bedrijventerrein_naam_doel := select_afew(PL_Bedrijventerrein, PL_Bedrijventerrein/BedrijventerreinInDoel || PL_Bedrijventerrein/BedrijventerreinInNaam);
		
			unit<uint32> PL_OpBedrijventerrein 							  := select_afew(PL_Bedrijventerrein, PL_Bedrijventerrein/AantalBedrijventerreinen > 0);
			unit<uint32> PL_OpBedrijventerreinen_ratioArea_50			  := select_afew(PL_Bedrijventerrein, PL_Bedrijventerrein/AantalBedrijventerreinen > 0 && PL_Bedrijventerrein/RatioUBouw_area >= 0.50);

			unit<uint32> PL_Bedrijventerrein_naam_doel_OpBedrijventerrein := select_afew(PL_Bedrijventerrein_naam_doel, PL_Bedrijventerrein_naam_doel/AantalBedrijventerreinen > 0);
		}

		unit<uint32> VBO := union_unit(Woning, UBouw)
		{
			
			attribute<nrAsl> nr_Asl := const(1.0[nrAsl],.);
			attribute<bool>  util   := union_data(.,const(false,woning),const(true,Ubouw));
			
			attribute<m2>    oppervlak := union_data(VBO, woning/oppervlakte, Ubouw/oppervlakte);
			attribute<Invoer/RuimtelijkeData/StudieGebied/Buurt > buurt_rel := union_data(VBO, woning/buurt_rel, Ubouw/buurt_rel);

			container Matching
			{
				unit<uint32> p := VBO
				{
					attribute<geography/rdc_meter> xy (p) := union_data(VBO, woning/geometry, Ubouw/geometry);
				}

				// driehoek wordt alleen gebruikt in workaround voor point_in_all_polygons voor GeoDmsVersion < 8.031				
				attribute<geography/rdc_meter> driehoek  (p, poly)  :=
					points2sequence(
						union_data(union_unit(p,p,p,p), p/xy, p/xy+point(0.1,0.0), p/xy+point(0.1,0.1), p/xy),
						union_data(union_unit(p,p,p,p), id(p), id(p), id(p), id(p)),
						union_data(union_unit(p,p,p,p), const(0,p), const(1,p), const(2,p), const(3,p))
									);
				parameter<string> piap_expr := 'point_in_all_polygons(p/xy, select_with_org_rels/BinnenEindjaarCutoff/geometry)';
				parameter<string> workaround := 'overlay_polygon(driehoek[geography/rdc_mm], PL/geometry[geography/rdc_mm])';
				unit<uint32> kruistabel  := =(GeoDmsVersion() > 8.0305) ? piap_expr : workaround;


				attribute<uint32> PL_count (p) := pcount(kruistabel/first_rel);
				
				attribute<uint32> P_count   (select_with_org_rels/BinnenEindjaarCutoff) := pcount(kruistabel/second_rel);
				attribute<nrAsl>  VBO_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(nr_Asl[kruistabel/first_rel], kruistabel/second_rel);	
				attribute<m2>     VBO_area  (select_with_org_rels/BinnenEindjaarCutoff ) := sum(oppervlak[kruistabel/first_rel], kruistabel/second_rel);
			
				
				
			}
			
			container CBSKoppeling_MateVanStedelijkheid
			{	
				container VBONiveau
				{
					attribute<Uint32> MateVanStedelijkheidVBO (VBO) := /Geography/RegioIndelingen/Buurt/STED[buurt_rel][Uint32];
					attribute<nrAsl> ZeerSterkStedelijk      (VBO) := float64(MateVanStedelijkheidVBO == 1[Uint32]) *nr_Asl;
					attribute<nrAsl> SterkStedelijk 		 (VBO) := float64(MateVanStedelijkheidVBO == 2[Uint32]) *nr_Asl;
					attribute<nrAsl> MatigStedelijk 		 (VBO) := float64(MateVanStedelijkheidVBO == 3[Uint32]) *nr_Asl;
					attribute<nrAsl> WeinigStedelijk 		 (VBO) := float64(MateVanStedelijkheidVBO == 4[Uint32]) *nr_Asl;
					attribute<nrAsl> NietStedelijk 			 (VBO) := float64(MateVanStedelijkheidVBO == 5[Uint32]) *nr_Asl;
				  //attribute<nrAsl> Overigstedelijk 		 (VBO) := float64(MateVanStedelijkheidVBO == -99999999[Uint32] ) *nr_Asl;
				  
					attribute<Uint32> OmgevingsAdressenDichtheid (VBO) := /Geography/RegioIndelingen/Buurt/OAD[buurt_rel][Uint32];
				}
				
				container PlanNiveau
				{
					attribute<nrAsl>  VBO_count_ZeerSterkStedelijk (PL) := sum(VBONiveau/ZeerSterkStedelijk[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  VBO_count_SterkStedelijk     (PL) := sum(VBONiveau/SterkStedelijk    [Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  VBO_count_MatigStedelijk 	   (PL) := sum(VBONiveau/MatigStedelijk	   [Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  VBO_count_WeinigStedelijk    (PL) := sum(VBONiveau/WeinigStedelijk   [Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  VBO_count_NietStedelijk 	   (PL) := sum(VBONiveau/NietStedelijk	   [Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				  //attribute<nrAsl>  VBO_count_Overigstedelijk    (PL) := sum(VBONiveau/Overigstedelijk   [Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				  
				  	attribute<Uint32>  OmgevingsAdressenDichtheid  (PL) := mean(VBONiveau/OmgevingsAdressenDichtheid	   [Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}		
			}
		}
		
		unit<uint32> UBouw := select_with_attr_by_cond(Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied, Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/sloopjaar == uint16(9999)) 
		{
			attribute<nrAsl> nr_Asl    := const(1.0[nrAsl],.);
			attribute<m2>    oppervlak := oppervlakte;
			attribute<nrAsl> WoningEquivalenten (UBouw) := nr_Asl * StandaardGasvraag/oppervlakte / float64(130)[m2];

			container Matching
			{
				unit<uint32> p := Ubouw
				{
					attribute<geography/rdc_meter> xy (p) := Ubouw/geometry;
				}

				// driehoek wordt alleen gebruikt in workaround voor point_in_all_polygons voor GeoDmsVersion < 8.031				
				attribute<geography/rdc_meter> driehoek  (p, poly)  :=
					points2sequence(
						union_data(union_unit(p,p,p,p), p/xy, p/xy+point(0.1,0.0), p/xy+point(0.1,0.1), p/xy),
						union_data(union_unit(p,p,p,p), id(p), id(p), id(p), id(p)),
						union_data(union_unit(p,p,p,p), const(0,p), const(1,p), const(2,p), const(3,p))
									);
				parameter<string> piap_expr := 'point_in_all_polygons(p/xy, select_with_org_rels/BinnenEindjaarCutoff/geometry)';
				parameter<string> workaround := 'overlay_polygon(driehoek[geography/rdc_mm], select_with_org_rels/BinnenEindjaarCutoff/geometry[geography/rdc_mm])';
				unit<uint32> kruistabel  :=  =(GeoDmsVersion() > 8.0305) ? piap_expr : workaround;
				
				container PL_counts
				{
					attribute<float64> totaal(p) := float64(pcount(kruistabel/first_rel));

				attribute<m2>     VBO_area    (PL) := Invoer/TVW/plan/VBO/Matching/VBO_area;
					container Isolatie
					{
						unit<uint32> PL_select_with_org_rel         := select_afew(select_with_org_rels/BinnenEindjaarCutoff, not(select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel == Class/Isolatiegraad/V/onbekend) && not(select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel == Class/Isolatiegraad/V/geen_maatregelen));
						unit<uint32> kruistabel        :=  point_in_all_polygons(p/xy, PL_select_with_org_rel/geometry);
						attribute<float64> PL_count(p) :=  float64(pcount(kruistabel/first_rel));
					}
				}

				attribute<Invoer/RuimtelijkeData/Bebouwing/Util> ruimtelijkedata_rel2          (Ubouw):= rlookup(UBouw/identificatie, /Invoer/RuimtelijkeData/Bebouwing/Util/code);							
				attribute<Invoer/RuimtelijkeData/Energielabel/data> ruimtelijkedata_rel          (Ubouw):= rlookup(UBouw/identificatie, /Invoer/RuimtelijkeData/Energielabel/data/vbo_id);							
			
				attribute<uint32> P_count     (select_with_org_rels/BinnenEindjaarCutoff) := pcount(kruistabel/second_rel);
				attribute<nrAsl>  VBO_count   (select_with_org_rels/BinnenEindjaarCutoff) := Invoer/TVW/plan/VBO/Matching/VBO_count;
				attribute<nrAsl>  UBouw_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(nr_Asl[kruistabel/first_rel], kruistabel/second_rel);
				attribute<m2>     UBouw_area  (PL) := sum(oppervlak[kruistabel/first_rel], kruistabel/second_rel);


				attribute<ratio> RatioUBouw_plan_vbo    (PL) := UBouw_count / VBO_count;
				attribute<ratio> RatioUBouw_plan_area   (PL) := UBouw_area  / VBO_area;
				attribute<bool>  BedrijventerreinInNaam (PL) := strcount(lowercase(PL/Plan_naam), 'bedrijventerrein')   > 0;
				attribute<bool>  BedrijventerreinInDoel (PL) := strcount(lowercase(PL/Plan_doel), 'bedrijventerrein')   > 0;
			}
			
			container StandaardGasvraag
			{ 
				attribute<Classifications/BouwjaarUtilBestaand> Bouwjaarklasse (UBouw) := UBouw/BouwjaarUtilBestaand_rel;
				attribute<Classifications/UtilTypeBestaand>     Modeltype      (UBouw) := UBouw/gebruiksdoel;
				attribute<classifications/DefaultLabelsUtil>    ModeltypexBouwjaarklasse   (UBouw) := combine_data(Classifications/DefaultLabelsUtil, modeltype, bouwjaarklasse);
				attribute<classifications/schillabel>    		schillabel   (UBouw) := Classifications/DefaultLabelsUtil/schillabel_rel[ModeltypexBouwjaarklasse];
				attribute<units/m2> 							oppervlakte    (UBouw) := Ubouw/oppervlakte;

				//attribute<Units/GJ_yr_m2> Vrv_per_m2 (UBouw) := Classifications/VrvUtil/Vrv_A_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2];
				
				attribute<Units/GJ_yr_m2> Vrv_per_m2 (UBouw)  := 
						schillabel  == Classifications/schillabel/V/A ? Classifications/VrvUtil/Vrv_A_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/B ? Classifications/VrvUtil/Vrv_B_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/C ? Classifications/VrvUtil/Vrv_C_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/D ? Classifications/VrvUtil/Vrv_D_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/E ? Classifications/VrvUtil/Vrv_E_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/F ? Classifications/VrvUtil/Vrv_F_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/G ? Classifications/VrvUtil/Vrv_G_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] :
						schillabel  == Classifications/schillabel/V/n ? Classifications/VrvUtil/Vrv_N_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2] : 0[Units/GJ_yr_m2]
						;
				attribute<Units/GJ_yr> RV (UBouw) := Vrv_per_m2 * oppervlakte;
				
				attribute<Units/GJ_yr_m2> Vtw_per_m2 (UBouw)  := Classifications/VrvUtil/Vtw_opp[combine_data(Classifications/VrvUtil, modeltype, bouwjaarklasse)][Units/GJ_yr_m2];
				attribute<Units/GJ_yr> TW (UBouw) := Vtw_per_m2 * oppervlakte;
				
				attribute<Units/GJ_yr> Totaal (UBouw) := RV + TW;
			}
			
			container isolatie
			{
				container Any_IsolatiegraadKlasse
				{
					attribute<bool>  onbekend  			(UBouw) := any(Class/Isolatiegraad/onbekend 						[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  GeenMaatregelen  	(UBouw) := any(Class/Isolatiegraad/geen_maatregelen 				[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  IsolatieGeenNiveau (UBouw) := any(Class/Isolatiegraad/isolatie_geen_specifiek_niveau 	[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  StandaardEnStreef  (UBouw) := any(Class/Isolatiegraad/standaard_en_streefwaarden 		[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  ALabel  			(UBouw) := any(Class/Isolatiegraad/A 								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  BLabel  			(UBouw) := any(Class/Isolatiegraad/B								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  CLabel  			(UBouw) := any(Class/Isolatiegraad/C								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  DLabel  			(UBouw) := any(Class/Isolatiegraad/D								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  DC1940AB  			(UBouw) := any(Class/Isolatiegraad/DC_1940_AB_overig 				[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  DWonenBUtil  		(UBouw) := any(Class/Isolatiegraad/D_wonen_B_util 					[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  kWhM2  			(UBouw) := any(Class/Isolatiegraad/kWh_m2_AB 						[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
				}
				
				attribute<Classifications/schillabel>     schillabel  (UBouw) := StandaardGasvraag/Schillabel;
								
				container schillabels
				{
					attribute<nrAsl> A		    (UBouw) := float64(schillabel == Classifications/schillabel/V/A) * nr_Asl;
					attribute<nrAsl> B		    (UBouw) := float64(schillabel == Classifications/schillabel/V/B) * nr_Asl;
					attribute<nrAsl> C		    (UBouw) := float64(schillabel == Classifications/schillabel/V/C) * nr_Asl;
					attribute<nrAsl> D		    (UBouw) := float64(schillabel == Classifications/schillabel/V/D) * nr_Asl;
					attribute<nrAsl> E		    (UBouw) := float64(schillabel == Classifications/schillabel/V/E) * nr_Asl;
					attribute<nrAsl> F		    (UBouw) := float64(schillabel == Classifications/schillabel/V/F) * nr_Asl;
					attribute<nrAsl> G          (UBouw) := float64(schillabel == Classifications/schillabel/V/G) * nr_Asl;
					attribute<nrAsl> geen_label (UBouw) := float64(schillabel == Classifications/schillabel/V/N) * nr_Asl;
				}
								
				attribute<float64> WordtGeisoleerd (UBouw) := float64(Any_IsolatiegraadKlasse/IsolatieGeenNiveau || Any_IsolatiegraadKlasse/StandaardEnStreef || Any_IsolatiegraadKlasse/ALabel || Any_IsolatiegraadKlasse/BLabel 
					|| Any_IsolatiegraadKlasse/CLabel || Any_IsolatiegraadKlasse/DLabel || Any_IsolatiegraadKlasse/DC1940AB || Any_IsolatiegraadKlasse/DWonenBUtil || Any_IsolatiegraadKlasse/kWhM2);	
				
				container optimistisch
				{
					attribute<Classifications/schillabel> beoogd_energielabel (UBouw) := 
						Any_IsolatiegraadKlasse/IsolatieGeenNiveau 			   			? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/StandaardEnStreef 				   		? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/ALabel 									? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/BLabel									? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/CLabel								    ? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/DLabel									? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/DC1940AB  && Ubouw/bouwjaar < 1945w 	? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/DC1940AB  && Ubouw/bouwjaar > 1945w 	? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/DWonenBUtil							   	? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/kWhM2								    ? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/onbekend								? schillabel : 
						Any_IsolatiegraadKlasse/GeenMaatregelen							? schillabel : 	schillabel;
					
					attribute<Units/GJ_yr_m2> Vrv_per_m2_beoogd (UBouw)  := 
						beoogd_energielabel  == Classifications/schillabel/V/A ? Classifications/VrvUtil/Vrv_A_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/B ? Classifications/VrvUtil/Vrv_B_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/C ? Classifications/VrvUtil/Vrv_C_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/D ? Classifications/VrvUtil/Vrv_D_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/E ? Classifications/VrvUtil/Vrv_E_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/F ? Classifications/VrvUtil/Vrv_F_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/G ? Classifications/VrvUtil/Vrv_G_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/n ? Classifications/VrvUtil/Vrv_N_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] : 0[Units/GJ_yr_m2]
						;
						
					attribute<Units/GJ_yr> RV_beoogd (UBouw) := Vrv_per_m2_beoogd * StandaardGasvraag/oppervlakte;
					
					attribute<GJ_yr> gasbesparing_RV_isolatie (Ubouw) := RV_beoogd < StandaardGasvraag/RV ? StandaardGasvraag/RV - RV_beoogd : 0[GJ_yr];
				}
				
				container pessimistisch
				{
					attribute<Classifications/schillabel> beoogd_energielabel (UBouw) := 
						Any_IsolatiegraadKlasse/IsolatieGeenNiveau 			   			? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/StandaardEnStreef 				   		? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/ALabel 									? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/BLabel									? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/CLabel								    ? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/DLabel									? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/DC1940AB  && UBouw/bouwjaar < 1945w 	? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/DC1940AB  && UBouw/bouwjaar > 1945w 	? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/DWonenBUtil							   	? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/kWhM2								    ? Classifications/schillabel/V/B : 
						Any_IsolatiegraadKlasse/onbekend								? schillabel : 
						Any_IsolatiegraadKlasse/GeenMaatregelen							? schillabel : schillabel;
					
					attribute<Units/GJ_yr_m2> Vrv_per_m2_beoogd (UBouw)  := 
						beoogd_energielabel  == Classifications/schillabel/V/A ? Classifications/VrvUtil/Vrv_A_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/B ? Classifications/VrvUtil/Vrv_B_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/C ? Classifications/VrvUtil/Vrv_C_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/D ? Classifications/VrvUtil/Vrv_D_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/E ? Classifications/VrvUtil/Vrv_E_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/F ? Classifications/VrvUtil/Vrv_F_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/G ? Classifications/VrvUtil/Vrv_G_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] :
						beoogd_energielabel  == Classifications/schillabel/V/n ? Classifications/VrvUtil/Vrv_N_opp[combine_data(Classifications/VrvUtil, StandaardGasvraag/modeltype, StandaardGasvraag/bouwjaarklasse)][Units/GJ_yr_m2] : 0[Units/GJ_yr_m2]
						;
						
					attribute<Units/GJ_yr> RV_beoogd (UBouw) := Vrv_per_m2_beoogd * StandaardGasvraag/oppervlakte;
					
					attribute<GJ_yr> gasbesparing_RV_isolatie (Ubouw) := RV_beoogd < StandaardGasvraag/RV ? StandaardGasvraag/RV - RV_beoogd : 0[GJ_yr];
				}
			}
			
			container Techniekkeuze
			{				
				container BeoogdeInstallaties
				{
					attribute<bool>  Any_hWP  (UBouw) := any(Class/Installatie/hWP [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_eWP  (UBouw) := any(Class/Installatie/eWP [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_Wnet (UBouw) := any(Class/Installatie/Wnet[select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_Hr   (UBouw) := any(Class/Installatie/Hr  [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_onbekend   (UBouw) := any(Class/Installatie/onbekend  [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					
					attribute<bool>    Any_hernieuwbaar_gas     (UBouw) := any(Class/Energiebron/hernieuwbaar_gas [select_with_org_rels/BinnenEindjaarCutoff/Energiebron_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>    Geen_beoogde_installatie (UBouw) := not(Any_eWP) && not(Any_eWP) && not(Any_hWP) && not(Any_Wnet) && not(Any_Hr) && not(Any_onbekend);
					attribute<float64> Only_onbekend 			(UBouw) := float64(Any_onbekend && not(Any_hWP) && not(Any_eWP) && not(Only_Wnet) && not(Any_Hr));
					attribute<bool>    Only_onbekend_bool 		(UBouw) := Any_onbekend && not(Any_hWP) && not(Any_eWP) && not(Only_Wnet) && not(Any_Hr);

					attribute<float64> Only_hWP     (UBouw) := float64(    Any_hWP  && not(Any_eWP) && not(Any_Wnet) && not(Any_Hr));
					attribute<float64> Only_eWP     (UBouw) := float64(not(Any_hWP) &&     Any_eWP  && not(Any_Wnet) && not(Any_Hr));
					attribute<float64> Only_Wnet    (UBouw) := float64(not(Any_hWP) && not(Any_eWP) &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> Only_Hr      (UBouw) := float64(not(Any_hWP) && not(Any_eWP) && not(Any_Wnet) &&     Any_Hr );
					
					attribute<float64> hWPeWP       (UBouw) := float64(    Any_hWP  &&     Any_eWP  && not(Any_Wnet) && not(Any_Hr));
					attribute<float64> hWPWnet      (UBouw) := float64(    Any_hWP  && not(Any_eWP) &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> hWPHr        (UBouw) := float64(    Any_hWP  && not(Any_eWP) && not(Any_Wnet) &&     Any_Hr) ;
					attribute<float64> eWPWnet      (UBouw) := float64(not(Any_hWP) &&     Any_eWP  &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> eWPHr        (UBouw) := float64(not(Any_hWP) &&     Any_eWP  && not(Any_Wnet) &&     Any_Hr) ;
					attribute<float64> WnetHr       (UBouw) := float64(not(Any_hWP) && not(Any_eWP) &&     Any_Wnet  &&     Any_Hr) ;
					
					attribute<float64> hWPeWPWnet   (UBouw) := float64(    Any_hWP  &&     Any_eWP  &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> hWPeWPHr     (UBouw) := float64(    Any_hWP  &&     Any_eWP  && not(Any_Wnet) &&     Any_Hr) ;
					attribute<float64> hWPWnetHr    (UBouw) := float64(    Any_hWP  && not(Any_eWP) &&     Any_Wnet  &&     Any_Hr) ;
					attribute<float64> eWPWnetHr    (UBouw) := float64(not(Any_hWP) &&     Any_eWP  &&     Any_Wnet  &&     Any_Hr) ;
					
					attribute<float64> hWPeWPWnetHr (UBouw) := float64(    Any_hWP  &&     Any_eWP  &&     Any_Wnet  &&     Any_Hr) ;
				}
				
				container optimistisch_zonder_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (UBouw) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/N ? 0.42d : 
						BeoogdeInstallaties/Only_onbekend_bool ? 0d : 0d;

					attribute<float64> gasbesparingsfactor_installatie_TW (UBouw) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 0d;
						
					attribute<GJ_yr> gas_na_installatie_RV (UBouw) := StandaardGasvraag/RV * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_installatie_TW (UBouw) := StandaardGasvraag/TW * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_installatie (UBouw) := StandaardGasvraag/RV - gas_na_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_installatie (UBouw) := StandaardGasvraag/TW - gas_na_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 		 (UBouw) := gasbesparing_RV_installatie + gasbesparing_TW_installatie;
					
					attribute<GJ_yr> duurzaam_gas (UBouw) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_installatie_RV + gas_na_installatie_TW : 0d;
				}
				
				container pessimistisch_zonder_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (UBouw) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool || BeoogdeInstallaties/Geen_beoogde_installatie ? 0d : 
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/N ? 0.42d : 1d;
					
					attribute<float64> gasbesparingsfactor_installatie_TW (UBouw) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool || BeoogdeInstallaties/Any_hWP || BeoogdeInstallaties/Geen_beoogde_installatie ? 0d : 1d;

					attribute<GJ_yr> gas_na_installatie_RV (UBouw) := StandaardGasvraag/RV * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_installatie_TW (UBouw) := StandaardGasvraag/TW * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_installatie (UBouw) := StandaardGasvraag/RV - gas_na_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_installatie (UBouw) := StandaardGasvraag/TW - gas_na_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 		 (UBouw) := gasbesparing_RV_installatie + gasbesparing_TW_installatie;
					
					attribute<GJ_yr> duurzaam_gas (UBouw) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_installatie_RV + gas_na_installatie_TW : 0d;
				}
				
				container optimistisch_met_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (UBouw) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/N ? 0.42d :
						BeoogdeInstallaties/Only_onbekend_bool ? 0d : 0d;

					attribute<float64> gasbesparingsfactor_installatie_TW (UBouw) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 0d;
						
					attribute<GJ_yr> gas_na_isolatie_installatie_RV (UBouw) := isolatie/optimistisch/RV_beoogd * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_isolatie_installatie_TW (UBouw) := StandaardGasvraag/TW  * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_isolatie_installatie (UBouw) := StandaardGasvraag/RV - gas_na_isolatie_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_isolatie_installatie (UBouw) := StandaardGasvraag/TW - gas_na_isolatie_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 			      (UBouw) := gasbesparing_RV_isolatie_installatie + gasbesparing_TW_isolatie_installatie;
					
					attribute<GJ_yr> duurzaam_gas (UBouw) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_isolatie_installatie_RV + gas_na_isolatie_installatie_TW : 0d;
				}
				
				container pessimistisch_met_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (UBouw) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool ? 0d : 
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/N ? 0.42d : 1d;
					
					attribute<float64> gasbesparingsfactor_installatie_TW (UBouw) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool || BeoogdeInstallaties/Any_hWP ? 0d : 1d;

					attribute<GJ_yr> gas_na_isolatie_installatie_RV (UBouw) := isolatie/pessimistisch/RV_beoogd * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_isolatie_installatie_TW (UBouw) := StandaardGasvraag/TW  * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_isolatie_installatie (UBouw) := StandaardGasvraag/RV - gas_na_isolatie_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_isolatie_installatie (UBouw) := StandaardGasvraag/TW - gas_na_isolatie_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 			      (UBouw) := gasbesparing_RV_isolatie_installatie + gasbesparing_TW_isolatie_installatie;
					
					attribute<GJ_yr> duurzaam_gas (UBouw) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_isolatie_installatie_RV + gas_na_isolatie_installatie_TW : 0d;
				}
			}
			
			container planniveau_output
			{
				container Basisvariabelen
				{
					attribute<string> pln_code       		 (select_with_org_rels/BinnenEindjaarCutoff) := select_with_org_rels/BinnenEindjaarCutoff/Plan_code;
					attribute<nrAsl>  VBO_count      		 (select_with_org_rels/BinnenEindjaarCutoff) := VBO/Matching/VBO_count;
					attribute<nrAsl>  VBO_count_gecorrigeerd (select_with_org_rels/BinnenEindjaarCutoff) := sum(VBO/nr_Asl[VBO/Matching/kruistabel/first_rel] / float64(VBO/Matching/PL_count)[VBO/Matching/kruistabel/first_rel], VBO/Matching/kruistabel/second_rel);
					attribute<nrAsl>  UBouw_count            (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  UBouw_weq_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(Ubouw/WoningEquivalenten[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
				
				container isolatie_telling
				{
					attribute<nrAsl>  isolatie_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(Ubouw/nr_Asl[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  isolatie_weq_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(Ubouw/WoningEquivalenten[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
				}
				
				container labelsprongen{
					attribute<Class/Isolatiegraad> beoogde_isolatiegraad (select_with_org_rels/BinnenEindjaarCutoff) := select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel;
					attribute<nrAsl>  origineel_A_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/A[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_B_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/B[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_C_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/C[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_D_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/D[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_E_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/E[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_F_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/F[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_G_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/G[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
					attribute<nrAsl>  origineel_Geen_label_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/geen_label[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)][select_with_org_rels/BinnenEindjaarCutoff/org_rel];
				}
				
				container installaties{
					attribute<nrAsl> installatie_count (select_with_org_rels/BinnenEindjaarCutoff) := only_Hr_count + only_hWP_count + only_eWP_count + only_Wnet_count + hWP_Hr_count + hWP_eWP_count + eWP_Wnet_count + eWP_Hr_count + Wnet_Hr_count
																				+ Wnet_hWP_count + hWP_Wnet_Hr_count + eWP_Wnet_Hr_count + hWP_eWP_Hr_count + hWP_eWP_Wnet_count + hWP_eWP_Wnet_Hr_count;
					attribute<nrAsl> only_Hr_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_Hr[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_hWP_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_hWP[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_eWP_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_eWP[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_Wnet_count       (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_Wnet[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				
					attribute<nrAsl> hWP_Hr_count          (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPHr[Matching/kruistabel/first_rel]      / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWP[Matching/kruistabel/first_rel]     / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Wnet_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPWnet[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Hr_count          (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPHr[Matching/kruistabel/first_rel]      / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> Wnet_Hr_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/WnetHr[Matching/kruistabel/first_rel]     / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> Wnet_hWP_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPWnet[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<nrAsl> hWP_Wnet_Hr_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPWnetHr[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Wnet_Hr_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPWnetHr[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_Hr_count      (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPHr[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_Wnet_count    (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPWnet[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<nrAsl> hWP_eWP_Wnet_Hr_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPWnetHr[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				
					attribute<nrAsl> installatie_weq_count (select_with_org_rels/BinnenEindjaarCutoff) := only_Hr_weq_count + only_hWP_weq_count + only_eWP_weq_count + only_Wnet_weq_count + hWP_Hr_weq_count + hWP_eWP_weq_count + eWP_Wnet_weq_count + eWP_Hr_weq_count + Wnet_Hr_weq_count
																				+ Wnet_hWP_weq_count + hWP_Wnet_Hr_weq_count + eWP_Wnet_Hr_weq_count + hWP_eWP_Hr_weq_count + hWP_eWP_Wnet_weq_count + hWP_eWP_Wnet_Hr_weq_count;
					attribute<nrAsl> only_Hr_weq_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_Hr[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_hWP_weq_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_hWP[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_eWP_weq_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_eWP[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_Wnet_weq_count       (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_Wnet[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				
					attribute<nrAsl> hWP_Hr_weq_count          (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPHr[Matching/kruistabel/first_rel]      / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_weq_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWP[Matching/kruistabel/first_rel]     / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Wnet_weq_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPWnet[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Hr_weq_count          (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPHr[Matching/kruistabel/first_rel]      / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> Wnet_Hr_weq_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/WnetHr[Matching/kruistabel/first_rel]     / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> Wnet_hWP_weq_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPWnet[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<nrAsl> hWP_Wnet_Hr_weq_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPWnetHr[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Wnet_Hr_weq_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPWnetHr[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_Hr_weq_count      (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPHr[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_Wnet_weq_count    (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPWnet[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<nrAsl> hWP_eWP_Wnet_Hr_weq_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(UBouw/WoningEquivalenten[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPWnetHr[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
				container gasvraag
				{
					attribute<GJ_yr>  originele_gasvraag      (select_with_org_rels/BinnenEindjaarCutoff) := sum(StandaardGasvraag/totaal[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<GJ_yr>  besparing_isolatie_optimistisch      (select_with_org_rels/BinnenEindjaarCutoff) := sum(Isolatie/optimistisch/gasbesparing_RV_isolatie                  [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_isolatie_pessimistisch     (select_with_org_rels/BinnenEindjaarCutoff) := sum(Isolatie/pessimistisch/gasbesparing_RV_isolatie                 [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_installaties_optimistisch  (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_zonder_isolatie/gasbesparing_totaal  [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_installaties_pessimistisch (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_zonder_isolatie/gasbesparing_totaal [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_totaal_optimistisch        (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_met_isolatie/gasbesparing_totaal     [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_totaal_pessimistisch       (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_met_isolatie/gasbesparing_totaal    [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
				
				container hernieuwbaar_gas
				{
					attribute<GJ_yr>  installaties_optimistisch  (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_zonder_isolatie/duurzaam_gas  [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  installaties_pessimistisch (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_zonder_isolatie/duurzaam_gas [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  totaal_optimistisch        (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_met_isolatie/duurzaam_gas     [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  totaal_pessimistisch       (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_met_isolatie/duurzaam_gas    [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
}
			
			unit<uint32> Bedrijventerreinshape_input
			:	StorageName     = "%HestiaDataDir%/Bedrijventerreinen/IBIS_NL_2021_20220712/IBIS_NL_2021.shp" // Dit pad is tijdelijk. Data moet uiteindelijk naar SD
			,	StorageType     = "gdal.vect"
			,	StorageReadOnly = "True"
			{
				attribute<string> label :=  uppercase(Plan_naam);	

				attribute<bool> geom_ok := isDefined(geometry);

				attribute<geography/rdc_meter> geometry (poly);
				attribute<ipoint> geometry_bedrijventerrein_i (Bedrijventerreinshape_input, poly) := ipolygon(Bedrijventerreinshape_input/geometry);
			}
		}
		
		unit<uint32> Woning := select_with_attr_by_cond(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied, Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/sloopjaar = uint16(9999))
		{
			//attribute<nrAsl> nr_Asl := const(1.0[nrAsl],.);

			container Matching
			{
				unit<uint32> p := woning
				{
					attribute<geography/rdc_meter> xy (p) := woning/geometry;
				}

				// driehoek wordt alleen gebruikt in workaround voor point_in_all_polygons voor GeoDmsVersion < 8.031				

				attribute<geography/rdc_meter> driehoek  (p, poly)  :=
					points2sequence(
						union_data(union_unit(p,p,p,p), p/xy, p/xy+point(0.1,0.0), p/xy+point(0.1,0.1), p/xy),
						union_data(union_unit(p,p,p,p), id(p), id(p), id(p), id(p)),
						union_data(union_unit(p,p,p,p), const(0,p), const(1,p), const(2,p), const(3,p))
									);
				parameter<string> piap_expr := 'point_in_all_polygons(p/xy, select_with_org_rels/BinnenEindjaarCutoff/geometry)';
				parameter<string> workaround := 'overlay_polygon(driehoek[geography/rdc_mm], select_with_org_rels/BinnenEindjaarCutoff/geometry[geography/rdc_mm])';
				unit<uint32> kruistabel  :=  =(GeoDmsVersion() > 8.0305) ? piap_expr : workaround;
				attribute<uint32> P_count     (Subsets/BinnenEindjaarCutoff) := pcount(kruistabel/second_rel);
				
				container PL_counts
				{
					attribute<float64> totaal(p) := float64(pcount(kruistabel/first_rel));


					container Isolatie
					{
						unit<uint32> PL_select_with_org_rel         := select_afew(select_with_org_rels/BinnenEindjaarCutoff, not(select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel == Class/Isolatiegraad/V/onbekend) && not(select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel == Class/Isolatiegraad/V/geen_maatregelen));
						unit<uint32> kruistabel        :=  point_in_all_polygons(p/xy, PL_select_with_org_rel/geometry);
						attribute<float64> PL_count(p) :=  float64(pcount(kruistabel/first_rel));
					}
				}

				
				
				attribute<Invoer/RuimtelijkeData/Bebouwing/Woning>   				    ruimtelijkedata_rel          (woning):= rlookup(woning/identificatie, /Invoer/RuimtelijkeData/Bebouwing/Woning/code);							
				attribute<BeginSituatie/StartingStateComponenten/Woning/PreStartJaar>   StartingStateComponenten_rel (woning):= rlookup(woning/identificatie, /BeginSituatie/StartingStateComponenten/Woning/PreStartJaar/code);							
			}
			
			container eigendom 
			{
				attribute<nrAsl> Koop     (woning) := float64(woning/eigendom_rel == Classifications/Eigendom/V/Koop)     * nr_Asl;
				attribute<nrAsl> PartHuur (woning) := float64(woning/eigendom_rel == Classifications/Eigendom/V/Parthuur) * nr_Asl;
				attribute<nrAsl> WoonCorp (woning) := float64(woning/eigendom_rel == Classifications/Eigendom/V/Wooncorp) * nr_Asl;			
			}
					
			container StandaardGasvraag
			{ 
				attribute<Units/GJ_yr> RV (woning) := /BeginSituatie/StartingStateComponenten/Woning/PreStartJaar/BemeterdeGebouwInput_rel/RVb[Matching/StartingStateComponenten_rel] == /Classifications/BemeterdeGebouwInput/V/Gas 
				? /BeginSituatie/StartingStateComponenten/Woning/Results/Func2Meter/metervraag_per_product/RVb[Matching/ruimtelijkedata_rel] + /BeginSituatie/StartingStateComponenten/Woning/Results/Func2Meter/metervraag_per_product/RVp[Matching/ruimtelijkedata_rel]
				: 0[GJ_yr];
				
				attribute<Units/GJ_yr> TW (woning) := /BeginSituatie/StartingStateComponenten/Woning/PreStartJaar/BemeterdeGebouwInput_rel/TWb[Matching/StartingStateComponenten_rel] == /Classifications/BemeterdeGebouwInput/V/Gas 
				? /BeginSituatie/StartingStateComponenten/Woning/Results/Func2Meter/metervraag_per_product/TWb[Matching/ruimtelijkedata_rel] + /BeginSituatie/StartingStateComponenten/Woning/Results/Func2Meter/metervraag_per_product/twp[Matching/ruimtelijkedata_rel]
				: 0[GJ_yr];
				
				attribute<Units/GJ_yr> totaal (woning) := RV + TW;
			}
			
			container isolatie
			{
				container Any_IsolatiegraadKlasse
				{
					attribute<bool>  onbekend  			(woning) := any(Class/Isolatiegraad/onbekend 						[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  GeenMaatregelen  	(woning) := any(Class/Isolatiegraad/geen_maatregelen 				[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  IsolatieGeenNiveau (woning) := any(Class/Isolatiegraad/isolatie_geen_specifiek_niveau 	[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  StandaardEnStreef  (woning) := any(Class/Isolatiegraad/standaard_en_streefwaarden 		[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  ALabel  			(woning) := any(Class/Isolatiegraad/A 								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  BLabel  			(woning) := any(Class/Isolatiegraad/B								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  CLabel  			(woning) := any(Class/Isolatiegraad/C								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  DLabel  			(woning) := any(Class/Isolatiegraad/D								[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  DC1940AB  			(woning) := any(Class/Isolatiegraad/DC_1940_AB_overig 				[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  DWonenBUtil  		(woning) := any(Class/Isolatiegraad/D_wonen_B_util 					[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  kWhM2  			(woning) := any(Class/Isolatiegraad/kWh_m2_AB 						[select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
				}
				
				attribute<Classifications/schillabel>     schillabel     	   (woning) := BeginSituatie/StartingStateComponenten/Woning/Results/schillabel_rel[Matching/ruimtelijkedata_rel];
								
				container schillabels
				{
					attribute<nrAsl> A		    (woning) := float64(schillabel == Classifications/schillabel/V/A) * nr_Asl;
					attribute<nrAsl> B		    (woning) := float64(schillabel == Classifications/schillabel/V/B) * nr_Asl;
					attribute<nrAsl> C		    (woning) := float64(schillabel == Classifications/schillabel/V/C) * nr_Asl;
					attribute<nrAsl> D		    (woning) := float64(schillabel == Classifications/schillabel/V/D) * nr_Asl;
					attribute<nrAsl> E		    (woning) := float64(schillabel == Classifications/schillabel/V/E) * nr_Asl;
					attribute<nrAsl> F		    (woning) := float64(schillabel == Classifications/schillabel/V/F) * nr_Asl;
					attribute<nrAsl> G          (woning) := float64(schillabel == Classifications/schillabel/V/G) * nr_Asl;
					attribute<nrAsl> geen_label (woning) := float64(schillabel == Classifications/schillabel/V/N) * nr_Asl;
				}
				
				attribute<Classifications/BouwjaarWoning> bouwjaarklasse 	   (woning) := woning/bouwjaarwoning_rel;
				attribute<Classifications/WoningType>     woningtype     	   (woning) := woning/woningtype_rel;

				unit<uint32> woningtype_bouwjaarklasse := combine_unit(Classifications/WoningType, Classifications/BouwjaarWoning);
				attribute<woningtype_bouwjaarklasse> combine_type_bouwjaar (woning) :=combine_data(woningtype_bouwjaarklasse, woningtype, bouwjaarklasse);
				
				attribute<Classifications/RV_besparing_labelsprong> RV_besparing_labelsprong_huidig_rel (woning) := 
					combine_data(Classifications/RV_besparing_labelsprong, combine_type_bouwjaar, schillabel);
				
				attribute<float64> WordtGeisoleerd (woning) := float64(Any_IsolatiegraadKlasse/IsolatieGeenNiveau || Any_IsolatiegraadKlasse/StandaardEnStreef || Any_IsolatiegraadKlasse/ALabel || Any_IsolatiegraadKlasse/BLabel 
					|| Any_IsolatiegraadKlasse/CLabel || Any_IsolatiegraadKlasse/DLabel || Any_IsolatiegraadKlasse/DC1940AB || Any_IsolatiegraadKlasse/DWonenBUtil || Any_IsolatiegraadKlasse/kWhM2);	
				
				container optimistisch
				{
					attribute<Classifications/schillabel> beoogd_energielabel (woning) := 
						Any_IsolatiegraadKlasse/IsolatieGeenNiveau 			   			? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/StandaardEnStreef 				   		? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/ALabel 									? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/BLabel									? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/CLabel								    ? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/DLabel									? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/DC1940AB  && woning/bouwjaar < 1945w 	? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/DC1940AB  && woning/bouwjaar > 1945w 	? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/DWonenBUtil							   	? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/kWhM2								    ? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/onbekend								? schillabel : 
						Any_IsolatiegraadKlasse/GeenMaatregelen							? schillabel : 	schillabel;
					
					attribute<Classifications/RV_besparing_labelsprong> RV_besparing_labelsprong_beoogd_rel (woning) := 
						combine_data(Classifications/RV_besparing_labelsprong, combine_type_bouwjaar, beoogd_energielabel);
					
					attribute<float64> RVFactorHuidig   (woning) := Classifications/RV_besparing_labelsprong/besparing_F[RV_besparing_labelsprong_huidig_rel];
					attribute<float64> RVFactorBeoogd   (woning) := Classifications/RV_besparing_labelsprong/besparing_F[RV_besparing_labelsprong_beoogd_rel];
					attribute<float64> RVFactorUitkomst (woning) := RVFactorBeoogd / RVFactorHuidig;
					
					attribute<float64> gasbesparingsfactor_schillabel (woning) := beoogd_energielabel < schillabel ? 1[float64] - RVFactorUitkomst : 0d;
					
					attribute<GJ_yr> gasbesparing_RV_isolatie (woning) := gasbesparingsfactor_schillabel * StandaardGasvraag/RV;
					attribute<GJ_yr> gas_RV_na_labelsprong    (woning) := StandaardGasvraag/RV - gasbesparing_RV_isolatie;
				}
				
				container pessimistisch
				{
					attribute<Classifications/schillabel> beoogd_energielabel (woning) := 
						Any_IsolatiegraadKlasse/IsolatieGeenNiveau 			   			? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/StandaardEnStreef 				   		? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/ALabel 									? Classifications/schillabel/V/A :
						Any_IsolatiegraadKlasse/BLabel									? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/CLabel								    ? Classifications/schillabel/V/C :
						Any_IsolatiegraadKlasse/DLabel									? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/DC1940AB  && woning/bouwjaar < 1945w 	? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/DC1940AB  && woning/bouwjaar > 1945w 	? Classifications/schillabel/V/B :
						Any_IsolatiegraadKlasse/DWonenBUtil							   	? Classifications/schillabel/V/D :
						Any_IsolatiegraadKlasse/kWhM2								    ? Classifications/schillabel/V/B : 
						Any_IsolatiegraadKlasse/onbekend								? schillabel : 
						Any_IsolatiegraadKlasse/GeenMaatregelen							? schillabel : schillabel;
					
					attribute<Classifications/RV_besparing_labelsprong> RV_besparing_labelsprong_beoogd_rel (woning) := 
						combine_data(Classifications/RV_besparing_labelsprong, combine_type_bouwjaar, beoogd_energielabel);
					
					attribute<float64> RVFactorHuidig   (woning) := Classifications/RV_besparing_labelsprong/besparing_F[RV_besparing_labelsprong_huidig_rel];
					attribute<float64> RVFactorBeoogd   (woning) := Classifications/RV_besparing_labelsprong/besparing_F[RV_besparing_labelsprong_beoogd_rel];
					attribute<float64> RVFactorUitkomst (woning) := RVFactorBeoogd / RVFactorHuidig;
					
					attribute<float64> gasbesparingsfactor_schillabel (woning) := beoogd_energielabel < schillabel ? 1[float64] - RVFactorUitkomst : 0d;
					
					attribute<GJ_yr> gasbesparing_RV_isolatie (woning) := gasbesparingsfactor_schillabel * StandaardGasvraag/RV;
					attribute<GJ_yr> gas_RV_na_labelsprong    (woning) := StandaardGasvraag/RV - gasbesparing_RV_isolatie;
				}
			}
			
			container Techniekkeuze
			{				
				container BeoogdeInstallaties
				{
					attribute<bool>  Any_hWP  (woning) := any(Class/Installatie/hWP [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_eWP  (woning) := any(Class/Installatie/eWP [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_Wnet (woning) := any(Class/Installatie/Wnet[select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_Hr   (woning) := any(Class/Installatie/Hr  [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Any_onbekend   (woning) := any(Class/Installatie/onbekend  [select_with_org_rels/BinnenEindjaarCutoff/Installatie_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					
					attribute<bool>  Any_hernieuwbaar_gas   (woning) := any(Class/Energiebron/hernieuwbaar_gas [select_with_org_rels/BinnenEindjaarCutoff/Energiebron_rel[Matching/kruistabel/second_rel]], Matching/kruistabel/first_rel);
					attribute<bool>  Geen_beoogde_installatie   (woning) := not(Any_eWP) && not(Any_eWP) && not(Any_hWP) && not(Any_Wnet) && not(Any_Hr) && not(Any_onbekend);
					attribute<float64> Only_onbekend (woning) := float64(Any_onbekend && not(Any_hWP) && not(Any_eWP) && not(Only_Wnet) && not(Any_Hr));
					attribute<bool>    Only_onbekend_bool (woning) := Any_onbekend && not(Any_hWP) && not(Any_eWP) && not(Only_Wnet) && not(Any_Hr);

					attribute<float64> Only_hWP     (woning) := float64(    Any_hWP  && not(Any_eWP) && not(Any_Wnet) && not(Any_Hr));
					attribute<float64> Only_eWP     (woning) := float64(not(Any_hWP) &&     Any_eWP  && not(Any_Wnet) && not(Any_Hr));
					attribute<float64> Only_Wnet    (woning) := float64(not(Any_hWP) && not(Any_eWP) &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> Only_Hr      (woning) := float64(not(Any_hWP) && not(Any_eWP) && not(Any_Wnet) &&     Any_Hr );
					
					attribute<float64> hWPeWP       (woning) := float64(    Any_hWP  &&     Any_eWP  && not(Any_Wnet) && not(Any_Hr));
					attribute<float64> hWPWnet      (woning) := float64(    Any_hWP  && not(Any_eWP) &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> hWPHr        (woning) := float64(    Any_hWP  && not(Any_eWP) && not(Any_Wnet) &&     Any_Hr) ;
					attribute<float64> eWPWnet      (woning) := float64(not(Any_hWP) &&     Any_eWP  &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> eWPHr        (woning) := float64(not(Any_hWP) &&     Any_eWP  && not(Any_Wnet) &&     Any_Hr) ;
					attribute<float64> WnetHr       (woning) := float64(not(Any_hWP) && not(Any_eWP) &&     Any_Wnet  &&     Any_Hr) ;
					
					attribute<float64> hWPeWPWnet   (woning) := float64(    Any_hWP  &&     Any_eWP  &&     Any_Wnet  && not(Any_Hr));
					attribute<float64> hWPeWPHr     (woning) := float64(    Any_hWP  &&     Any_eWP  && not(Any_Wnet) &&     Any_Hr) ;
					attribute<float64> hWPWnetHr    (woning) := float64(    Any_hWP  && not(Any_eWP) &&     Any_Wnet  &&     Any_Hr) ;
					attribute<float64> eWPWnetHr    (woning) := float64(not(Any_hWP) &&     Any_eWP  &&     Any_Wnet  &&     Any_Hr) ;
					
					attribute<float64> hWPeWPWnetHr (woning) := float64(    Any_hWP  &&     Any_eWP  &&     Any_Wnet  &&     Any_Hr) ;
				}

				container optimistisch_zonder_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (woning) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/N ? 0.42d : 
						BeoogdeInstallaties/Only_onbekend_bool ? 0d : 0d;

					attribute<float64> gasbesparingsfactor_installatie_TW (woning) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 0d;
						
					attribute<GJ_yr> gas_na_installatie_RV (woning) := StandaardGasvraag/RV * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_installatie_TW (woning) := StandaardGasvraag/TW * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_installatie (woning) := StandaardGasvraag/RV - gas_na_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_installatie (woning) := StandaardGasvraag/TW - gas_na_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 		 (woning) := gasbesparing_RV_installatie + gasbesparing_TW_installatie;
					
					attribute<GJ_yr> duurzaam_gas (woning) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_installatie_RV + gas_na_installatie_TW : 0d;
				}
				
				container pessimistisch_zonder_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (woning) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool || BeoogdeInstallaties/Geen_beoogde_installatie ? 0d : 
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/schillabel = Classifications/schillabel/V/N ? 0.42d : 1d;
					
					attribute<float64> gasbesparingsfactor_installatie_TW (woning) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool || BeoogdeInstallaties/Any_hWP || BeoogdeInstallaties/Geen_beoogde_installatie ? 0d : 1d;

					attribute<GJ_yr> gas_na_installatie_RV (woning) := StandaardGasvraag/RV * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_installatie_TW (woning) := StandaardGasvraag/TW * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_installatie (woning) := StandaardGasvraag/RV - gas_na_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_installatie (woning) := StandaardGasvraag/TW - gas_na_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 		 (woning) := gasbesparing_RV_installatie + gasbesparing_TW_installatie;
					
					attribute<GJ_yr> duurzaam_gas (woning) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_installatie_RV + gas_na_installatie_TW : 0d;
				}
				
				container optimistisch_met_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (woning) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/optimistisch/beoogd_energielabel = Classifications/schillabel/V/N ? 0.42d :
						BeoogdeInstallaties/Only_onbekend_bool ? 0d : 0d;

					attribute<float64> gasbesparingsfactor_installatie_TW (woning) := 
						BeoogdeInstallaties/Any_Wnet || BeoogdeInstallaties/Any_eWP 	  ? 1d : 0d;
						
					attribute<GJ_yr> gas_na_isolatie_installatie_RV (woning) := isolatie/optimistisch/gas_RV_na_labelsprong * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_isolatie_installatie_TW (woning) := StandaardGasvraag/TW  * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_isolatie_installatie (woning) := StandaardGasvraag/RV - gas_na_isolatie_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_isolatie_installatie (woning) := StandaardGasvraag/TW - gas_na_isolatie_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 			      (woning) := gasbesparing_RV_isolatie_installatie + gasbesparing_TW_isolatie_installatie;
					
					attribute<GJ_yr> duurzaam_gas (woning) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_isolatie_installatie_RV + gas_na_isolatie_installatie_TW : 0d;
				}
				
				container pessimistisch_met_isolatie
				{
					attribute<float64> gasbesparingsfactor_installatie_RV (woning) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool ? 0d : 
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/A ? 0.65d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/B ? 0.63d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/C ? 0.59d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/D ? 0.52d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/E ? 0.47d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/F ? 0.43d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/G ? 0.42d :
						BeoogdeInstallaties/Any_hWP && isolatie/pessimistisch/beoogd_energielabel = Classifications/schillabel/V/N ? 0.42d : 1d;
					
					attribute<float64> gasbesparingsfactor_installatie_TW (woning) := 
						BeoogdeInstallaties/Any_Hr  || BeoogdeInstallaties/Only_onbekend_bool || BeoogdeInstallaties/Any_hWP ? 0d : 1d;

					attribute<GJ_yr> gas_na_isolatie_installatie_RV (woning) := isolatie/pessimistisch/gas_RV_na_labelsprong * (1d - gasbesparingsfactor_installatie_RV);
						
					attribute<GJ_yr> gas_na_isolatie_installatie_TW (woning) := StandaardGasvraag/TW  * (1d - gasbesparingsfactor_installatie_TW);
					
					attribute<GJ_yr> gasbesparing_RV_isolatie_installatie (woning) := StandaardGasvraag/RV - gas_na_isolatie_installatie_RV;
					attribute<GJ_yr> gasbesparing_TW_isolatie_installatie (woning) := StandaardGasvraag/TW - gas_na_isolatie_installatie_TW;
					attribute<GJ_yr> gasbesparing_totaal 			      (woning) := gasbesparing_RV_isolatie_installatie + gasbesparing_TW_isolatie_installatie;
					
					attribute<GJ_yr> duurzaam_gas (woning) := BeoogdeInstallaties/Any_hernieuwbaar_gas ? gas_na_isolatie_installatie_RV + gas_na_isolatie_installatie_TW : 0d;
				}
			}
			
			container planniveau_output
			{
				container Basisvariabelen
				{
					attribute<string> pln_code       (select_with_org_rels/BinnenEindjaarCutoff) := select_with_org_rels/BinnenEindjaarCutoff/Plan_code;
					attribute<nrAsl>  VBO_count      		 (select_with_org_rels/BinnenEindjaarCutoff) := VBO/Matching/VBO_count;
					attribute<nrAsl>  VBO_count_gecorrigeerd (select_with_org_rels/BinnenEindjaarCutoff) := sum(VBO/nr_Asl[VBO/Matching/kruistabel/first_rel] / float64(VBO/Matching/PL_count)[VBO/Matching/kruistabel/first_rel], VBO/Matching/kruistabel/second_rel);
					attribute<nrAsl>  Woning_count   (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  koop_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(eigendom/Koop[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  parthuur_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(eigendom/PartHuur[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl>  wooncorp_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(eigendom/WoonCorp[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
				container isolatie_telling
				{
					attribute<nrAsl>  isolatie_count		  (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  isolatie_koop_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(eigendom/Koop[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  isolatie_parthuur_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(eigendom/PartHuur[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  isolatie_wooncorp_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(eigendom/WoonCorp[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
				}
				
				container labelsprongen
				{
					attribute<Class/Isolatiegraad> beoogde_isolatiegraad (select_with_org_rels/BinnenEindjaarCutoff) := select_with_org_rels/BinnenEindjaarCutoff/Isolatiegraad_rel;
					attribute<nrAsl>  origineel_A_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/A[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_B_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/B[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_C_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/C[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_D_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/D[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_E_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/E[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_F_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/F[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_G_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/G[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
					attribute<nrAsl>  origineel_Geen_label_count		(select_with_org_rels/BinnenEindjaarCutoff) := sum(isolatie/schillabels/geen_label[Matching/PL_counts/Isolatie/kruistabel/first_rel] * isolatie/WordtGeisoleerd[Matching/PL_counts/Isolatie/kruistabel/first_rel] / Matching/PL_counts/Isolatie/PL_count[Matching/PL_counts/Isolatie/kruistabel/first_rel], Matching/PL_counts/Isolatie/kruistabel/second_rel)[invert(Matching/PL_counts/Isolatie/PL_select_with_org_rel/org_rel)];
				}
				
				container Installaties
				{
					attribute<nrAsl> installatie_count (select_with_org_rels/BinnenEindjaarCutoff) := only_Hr_count + only_hWP_count + only_eWP_count + only_Wnet_count + hWP_Hr_count + hWP_eWP_count + eWP_Wnet_count + eWP_Hr_count + Wnet_Hr_count
																				+ Wnet_hWP_count + hWP_Wnet_Hr_count + eWP_Wnet_Hr_count + hWP_eWP_Hr_count + hWP_eWP_Wnet_count + hWP_eWP_Wnet_Hr_count;
					attribute<nrAsl> only_Hr_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_Hr[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_hWP_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_hWP[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_eWP_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_eWP[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> only_Wnet_count       (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/only_Wnet[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				
					attribute<nrAsl> hWP_Hr_count          (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPHr[Matching/kruistabel/first_rel]      / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWP[Matching/kruistabel/first_rel]     / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Wnet_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPWnet[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Hr_count          (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPHr[Matching/kruistabel/first_rel]      / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> Wnet_Hr_count         (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/WnetHr[Matching/kruistabel/first_rel]     / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> Wnet_hWP_count        (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPWnet[Matching/kruistabel/first_rel]    / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<nrAsl> hWP_Wnet_Hr_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPWnetHr[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> eWP_Wnet_Hr_count     (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/eWPWnetHr[Matching/kruistabel/first_rel]  / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_Hr_count      (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPHr[Matching/kruistabel/first_rel]   / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<nrAsl> hWP_eWP_Wnet_count    (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPWnet[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<nrAsl> hWP_eWP_Wnet_Hr_count (select_with_org_rels/BinnenEindjaarCutoff) := sum(woning/nr_Asl[Matching/kruistabel/first_rel] * Techniekkeuze/BeoogdeInstallaties/hWPeWPWnetHr[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
				
				container gasvraag{
					attribute<GJ_yr>  originele_gasvraag      (select_with_org_rels/BinnenEindjaarCutoff) := sum(StandaardGasvraag/totaal[Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);

					attribute<GJ_yr>  besparing_isolatie_optimistisch      (select_with_org_rels/BinnenEindjaarCutoff) := sum(Isolatie/optimistisch/gasbesparing_RV_isolatie                  [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_isolatie_pessimistisch     (select_with_org_rels/BinnenEindjaarCutoff) := sum(Isolatie/pessimistisch/gasbesparing_RV_isolatie                 [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_installaties_optimistisch  (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_zonder_isolatie/gasbesparing_totaal  [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_installaties_pessimistisch (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_zonder_isolatie/gasbesparing_totaal [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_totaal_optimistisch        (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_met_isolatie/gasbesparing_totaal     [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  besparing_totaal_pessimistisch       (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_met_isolatie/gasbesparing_totaal    [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
				
				container hernieuwbaar_gas
				{
					attribute<GJ_yr>  installaties_optimistisch  (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_zonder_isolatie/duurzaam_gas  [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  installaties_pessimistisch (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_zonder_isolatie/duurzaam_gas [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  totaal_optimistisch        (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/optimistisch_met_isolatie/duurzaam_gas     [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
					attribute<GJ_yr>  totaal_pessimistisch       (select_with_org_rels/BinnenEindjaarCutoff) := sum(Techniekkeuze/pessimistisch_met_isolatie/duurzaam_gas    [Matching/kruistabel/first_rel] / Matching/PL_counts/totaal[Matching/kruistabel/first_rel], Matching/kruistabel/second_rel);
				}
			}
		}
	}

	container Class
		{
			unit<uint32> Plansoort: nrofrows = 4
			{
				attribute<string> label :  [ 'info ontbreekt', 'onderzoek', 'voorbereidend', 'uitvoeren'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Techniekstatus: nrofrows = 11
			{
				attribute<string> label :  [ 'definitief', 'geen keuze gemaakt', 'geen techniekkeuze, focus op isolatie',
					 'kansrijke optie', 'niet van toepassing', 'onbekend', 'onderzoekend',
					  'verkennend', 'voorkeursoptie', 'voorlopige keuze', 'voorsorterend'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Planstatus: nrofrows = 11
			{
				attribute<string> label :  [ 'afwachtend', 'concept', 'definitief', 'uitvoerend',
					 'kansrijke optie', 'onbekend', 'onderzoekend', 'orienterend',
					  'richtinggevend', 'verkennend', 'voorbereidend'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Docstatus: nrofrows = 5
			{
				attribute<string> label :  [ 'info ontbreekt', 'vastgesteld door raad', 'naar raad gestuurd', 'concept te inzage', 'vastgesteld door college'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Doctype: nrofrows = 4
			{
				attribute<string> label :  [ 'info ontbreekt', 'transitievisie', 'bijlage bij transitievisie', 'anders'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Isolatiegraad: nrofrows = 11
			{
				attribute<string> label :  [ 'onbekend', 'geen maatregelen', 'isolatie, geen specifiek niveau benoemd', 'standaard en streefwaarden', 
					'schillabel A+', 'Schillabel B+', 'Schillabel C+', 'Schillabel D+', 'Schillabel D/C (<1940) A/B (overig)'
					,'Schillabel D+ (wonen) B+ (util)','Doelstelling in kWh/m2 (vergelijkbaar Schillabel A/B)'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";
				
				attribute<bool> onbekend   							:= strcount(label, 'onbekend')   > 0;
				attribute<bool> geen_maatregelen   					:= strcount(label, 'geen maatregelen')   > 0;
				attribute<bool> isolatie_geen_specifiek_niveau   	:= strcount(label, 'isolatie, geen specifiek niveau benoemd')   > 0;
				attribute<bool> standaard_en_streefwaarden   		:= strcount(label, 'standaard en streefwaarden')   > 0;
				attribute<bool> A   								:= strcount(label, 'schillabel A+')   > 0;
				attribute<bool> B   								:= strcount(label, 'schillabel B+')   > 0;
				attribute<bool> C   								:= strcount(label, 'schillabel C+')   > 0;
				attribute<bool> D   								:= strcount(label, 'schillabel D+')   > 0;
				attribute<bool> DC_1940_AB_overig   				:= strcount(label, 'Schillabel D/C (<1940) A/B (overig)')   > 0;
				attribute<bool> D_wonen_B_util   					:= strcount(label, 'Schillabel D+ (wonen) B+ (util)')   > 0;
				attribute<bool> kWh_m2_AB   						:= strcount(label, 'Doelstelling in kWh/m2 (vergelijkbaar Schillabel A/B)')   > 0;

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Installatie: nrofrows = 17
			{
				attribute<string> label :  [ 'onbekend', 'Hr', 'hWP', 'eWP', 
					'Wnet', 'hWP,Hr', 'hWP,eWP', 'hWP,eWP', 'eWP,Wnet'
					,'eWP,Hr','Wnet, Hr', 'Wnet, hWP', 'hWP,Wnet,Hr', 'eWP,Wnet,Hr', 'hWP,eWP,Hr', 'hWP,eWP,Wnet', 'hWP,eWP,Wnet,Hr'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				attribute<bool> onbekend   := strcount(label, 'onbekend')   > 0;
				attribute<bool> Hr   := strcount(label, 'Hr')   > 0;
				attribute<bool> hWP  := strcount(label, 'hWP')  > 0;
				attribute<bool> eWP  := strcount(label, 'eWP')  > 0;
				attribute<bool> Wnet := strcount(label, 'Wnet') > 0;

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Infrastructuur: nrofrows = 7
			{
				attribute<string> label :  [ 'onbekend', 'niet van toepassing', 'E', 'E,G', 'E,W', 'E,W,G', 'E,W,K'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				attribute<bool> E := strcount(label, 'E') > 0;
				attribute<bool> G := strcount(label, 'G') > 0;
				attribute<bool> W := strcount(label, 'W') > 0;
				attribute<bool> K := strcount(label, 'K') > 0;

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}

			unit<uint32> Energiebron: nrofrows = 56
			{
				attribute<string> label :  [ 'aquathermie', 'aquathermie, asfalt', 'aquathermie, bestaand warmtenet', 'aquathermie, bestaand warmtenet, WKO', 
					'aquathermie, geothermie', 'aquathermie, geothermie, restwarmte', 'aquathermie, geothermie, WKO', 'aquathermie, geothermie, zon', 'aquathermie, hernieuwbaar gas'
					,'aquathermie, restwarmte','aquathermie, restwarmte, asfalt', 'aquathermie, restwarmte, geothermie', 'aquathermie, restwarmte, hernieuwbaar gas',
					'aquathermie, restwarmte, WKO, geothermie', 'aquathermie, restwarmte, zon', 'aquathermie, WKO', 'aquathermie, WKO, biomassa'
					, 'aquathermie, WKO, collectieve warmtepomp', 'aquathermie, WKO, geothermie', 'aquathermie, WKO, hernieuwbaar gas', 'aquathermie, WKO, restwarmte'
					, 'aquathermie, WKO, zon', 'aquathermie, zon', 'aquathermie, zon, asfalt', 'aquathermie, zon, collectieve warmtepomp', 'biomassa', 'biomassa, geothermie',
					 'biomassa, zon, hernieuwbaar gas', 'collectieve warmtepomp', 'diverse opties mogelijk (>3 genoemd)', 'geothermie', 'geothermie, collectieve warmtepomp',
					 'geothermie, hernieuwbaar gas', 'geothermie, restwarmte', 'geothermie, restwarmte, biomassa', 'geothermie, zon, collectieve warmtepomp', 'hernieuwbaar gas'
					 , 'hernieuwbaar gas, biomassa', 'hernieuwbaar gas, WKO', 'niet specifiek benoemd', 'niet van toepassing', 'Onbekend', 'restwarmte', 'restwarmte, biomassa',
					 'restwarmte, geothermie, collectieve warmtepomp', 'restwarmte, hernieuwbaar gas', 'restwarmte, WKO', 'restwarmte, WKO, collectieve warmtepomp',
					 'restwarmte, WKO, hernieuwbaar gas', 'restwarmte, zon', 'WKO', 'WKO, collectieve warmtepomp', 'WKO, zon', 'WKO, zon, hernieuwbaar gas', 'zon', 'zon, hernieuwbaar gas'];
				attribute<string> name  := AsItemName(label), DialogType = "LabelText";

				attribute<bool> aquathermie            := strcount(label, 'aquathermie')            > 0;
				attribute<bool> asfalt                 := strcount(label, 'asfalt')                 > 0;
				attribute<bool> bestaand_warmtenet     := strcount(label, 'bestaand warmtenet')     > 0;
				attribute<bool> WKO                    := strcount(label, 'WKO')                    > 0;
				attribute<bool> geothermie             := strcount(label, 'geothermie')             > 0;
				attribute<bool> restwarmte             := strcount(label, 'restwarmte')             > 0;
				attribute<bool> zon                    := strcount(label, 'zon')                    > 0;
				attribute<bool> hernieuwbaar_gas       := strcount(label, 'hernieuwbaar gas')       > 0;
				attribute<bool> biomassa               := strcount(label, 'biomassa')               > 0;
				attribute<bool> collectieve_warmtepomp := strcount(label, 'collectieve warmtepomp') > 0;
				attribute<bool> diverse_opties_mogelijk := strcount(label, 'diverse opties mogelijk (>3 genoemd)') > 0;
				attribute<bool> niet_specifiek_benoemd := strcount(label, 'niet specifiek benoemd') > 0;
				attribute<bool> niet_van_toepassing    := strcount(label, 'niet van toepassing') > 0;
				attribute<bool> onbekend			   := strcount(label, 'Onbekend') > 0;

				container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
			}
		}
}