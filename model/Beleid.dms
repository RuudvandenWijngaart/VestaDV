
//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) Hestia 2022 - PBL & TNO                                        //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Beleid
{
	//====== Inlezen invoerbestand beleidsinstrumenten
	unit<uint32> Invoer : StorageName = "%projDir%/runs/Beleid.csv", StorageType = "gdal2.vect", StorageReadOnly = "True"
	{
		//====== Vertalen attributen naar juiste value types
		attribute<string> label := instrument;

		attribute<yr_uint16> Startjaar := eerstejaar[yr_uint16], IsHidden = "True";
		attribute<yr_uint16> Eindjaar  := laatstejaar[yr_uint16], IsHidden = "True";
		attribute<ratio>     Aandeel   := procent[ratio], IsHidden = "True";
		attribute<eur_asl>   Bedrag    := vastbedrag[eur_asl], IsHidden = "True";
		attribute<eur_m2>    Per_opp   := perm2[eur_m2],IsHidden = "True";
		attribute<ratio>     RNaleving := naleving[ratio], IsHidden = "True";

		//====== Controle aantal criteria om te zien welke instrumenten geldige invoer hebben en meegenomen kunnen worden
		attribute<bool> GeldigeInvoer := 
				Isdefined(Startjaar)
			&&  IsDefined(Eindjaar)
			&& 	(LowerCase(soort) == 'subsidie' || LowerCase(soort) == 'normering' || LowerCase(soort) == 'activatie')
			&&  (LowerCase(soort) == 'subsidie' ? (IsDefined(Aandeel) && IsDefined(Bedrag)) : true)
			&&  IsDefined(grondslag)
			;
	}
	unit<uint32> Activatie := subset(Invoer/GeldigeInvoer && LowerCase(Invoer/soort) == 'activatie')
	{
		attribute<string>    label           := Invoer/label[nr_orgentity]     , IsHidden = "True";
		attribute<string>    name            := Invoer/code[nr_orgentity]      , IsHidden = "True";
		attribute<string>    doelgroep       := LowerCase(Invoer/doelgroep[nr_orgentity]) , IsHidden = "True";
		attribute<string>    grondslag       := Invoer/grondslag[nr_orgentity] , IsHidden = "True";
		attribute<yr_uint16> Startjaar       := Invoer/Startjaar[nr_orgentity] ;
		attribute<yr_uint16> Eindjaar        := Invoer/Eindjaar [nr_orgentity] ;
		attribute<ratio>     Naleving        := Invoer/RNaleving[nr_orgentity];

		container Doel_false  := for_each_nedv(Classifications/Eigendom/Label,'const(false,Activatie)',Activatie,bool), IsHidden = "True";
		container ParseDoelgroep := Doel_false
		{
			attribute<bool> Koop     (Activatie) := strcount(doelgroep, 'koopw') + strcount(doelgroep, 'alle') > 0;
			attribute<bool> Parthuur (Activatie) := strcount(doelgroep, 'parti') + strcount(doelgroep, 'alle') > 0;
			attribute<bool> Wooncorp (Activatie) := strcount(doelgroep, 'socia') + strcount(doelgroep, 'alle') > 0;
		}

		container ParseGrondslag := for_each_nedv(
			  Classifications/Bouwdeel/name
			, '(strcount(grondslag,'+quote(Classifications/Bouwdeel/name)+') + strcount(grondslag, '+quote('bouwd')+') + strcount(grondslag, '+quote('alle')+')) > 0'
			, Activatie
			, bool
			)
		{
			attribute<bool> RV (Activatie) := strcount(grondslag, 'RV') + strcount(grondslag, 'product') + strcount(grondslag, 'alle') > 0;
			attribute<bool> TW (Activatie) := strcount(grondslag, 'TW') + strcount(grondslag, 'product') + strcount(grondslag, 'alle') > 0;
			attribute<bool> KD (Activatie) := strcount(grondslag, 'KD') + strcount(grondslag, 'product') + strcount(grondslag, 'alle') > 0;
			attribute<bool> VT (Activatie) := strcount(grondslag, 'VT') + strcount(grondslag, 'product') + strcount(grondslag, 'alle') > 0;
		}
	}



	//====== Interpretatie tekstvelden voor geldige 
	unit<uint32> Normering := subset(Invoer/GeldigeInvoer && LowerCase(Invoer/soort) == 'normering')
	{
		attribute<string>    label           := Invoer/label[nr_orgentity]     , IsHidden = "True";
		attribute<string>    name            := Invoer/code[nr_orgentity]      , IsHidden = "True";
		attribute<string>    doelgroep       := LowerCase(Invoer/doelgroep[nr_orgentity]) , IsHidden = "True";
		attribute<string>    grondslag       := Invoer/grondslag[nr_orgentity] , IsHidden = "True";
		attribute<string>    voorwaarde1     := Invoer/voorwaarde1[nr_orgentity], IsHidden = "True";
		attribute<string>    voorwaarde2     := Invoer/voorwaarde2[nr_orgentity], IsHidden = "True";
		attribute<yr_uint16> Startjaar       := Invoer/Startjaar[nr_orgentity] ;
		attribute<yr_uint16> Eindjaar        := Invoer/Eindjaar [nr_orgentity] ;
		attribute<ratio>     Naleving        := Invoer/RNaleving[nr_orgentity];

		unit<uint32> NieuwbouwNorm := subset(lowercase(doelgroep) == 'nieuwbouw')
		{
			attribute<string>    label       := Normering/label[nr_orgentity]     , IsHidden = "True";
			attribute<string>    name        := Normering/name[nr_orgentity]      , IsHidden = "True";
			attribute<string>    doelgroep   := Normering/doelgroep[nr_orgentity] , IsHidden = "True";
			attribute<string>    grondslag   := Normering/grondslag[nr_orgentity] , IsHidden = "True";
			attribute<yr_uint16> Startjaar   := Normering/Startjaar[nr_orgentity] ;
			attribute<yr_uint16> Eindjaar    := Normering/Eindjaar [nr_orgentity] ;
			attribute<ratio>     Naleving    := Normering/Naleving[nr_orgentity];

			container BouwdeelNorm := for_each_nedv(
				  Classifications/Bouwdeel/name
				, 'rlookup(substr(grondslag, strpos(grondslag,'+quote(Classifications/Bouwdeel/name)+')+3u, 2u), Classifications/IsolatieNiveau/name)'
				, NieuwbouwNorm
				, Classifications/IsolatieNiveau
				);
		}
		unit<uint32> BestaandeBouwNorm := subset(lowercase(replace(doelgroep, ' ', '')) == 'bestaandebouw')
		{
			attribute<string>    label       := Normering/label[nr_orgentity]     , IsHidden = "True";
			attribute<string>    name        := Normering/name[nr_orgentity]      , IsHidden = "True";
			attribute<string>    doelgroep   := Normering/doelgroep[nr_orgentity] , IsHidden = "True";
			attribute<string>    grondslag   := Normering/grondslag[nr_orgentity], IsHidden = "True";
			attribute<yr_uint16> Startjaar   := Normering/Startjaar[nr_orgentity] ;
			attribute<yr_uint16> Eindjaar    := Normering/Eindjaar [nr_orgentity] ;
			attribute<ratio>     Naleving    := Normering/Naleving[nr_orgentity];
			attribute<string>    voorwaarde1 := LowerCase(Normering/voorwaarde1[nr_orgentity]), IsHidden = "True";
			attribute<string>    voorwaarde2 := LowerCase(Normering/voorwaarde2[nr_orgentity]), IsHidden = "True";

			container BouwdeelNorm := for_each_nedv(
				  Classifications/Bouwdeel/name
				, 'rlookup(substr(grondslag, strpos(grondslag,'+quote(Classifications/Bouwdeel/name)+')+3u, 2u), Classifications/IsolatieNiveau/name)'
				, BestaandeBouwNorm
				, Classifications/IsolatieNiveau
				);

			container LabelNorm
			{
				attribute<Classifications/Schillabel> Min_label (BestaandeBouwNorm) := rlookup( substr(uppercase(grondslag), strpos(lowercase(grondslag), 'label')+6, 1), Classifications/Schillabel/name);
			}

			//====== Bepalen welke voorwaarden er aan het instrument zijn gesteld
			container ParseVoorwaarde
			{
				attribute<bool>  SchilAandeelVoorwaarde (BestaandeBouwNorm) := strcount(voorwaarde1, 'gerenoveerd aandeel') + strcount(voorwaarde2, 'gerenoveerd aandeel') > 0;
				attribute<ratio> MinSchilAandeel        (BestaandeBouwNorm) := not(SchilAandeelVoorwaarde) ? 0.0[ratio] :
					makedefined(
						trim(replace(voorwaarde1, 'gerenoveerd aandeel (procent): ', ''))[percent] * 0.01[ratio / percent],
						trim(replace(voorwaarde2, 'gerenoveerd aandeel (procent): ', ''))[percent] * 0.01[ratio / percent]
					);  
			}
		}
	}

	//====== Interpretatie tekstvelden voor geldige subsidiemaatregelen
	unit<uint32> Subsidie := subset(Invoer/GeldigeInvoer && LowerCase(Invoer/soort) == 'subsidie')
	{
		attribute<string>    label           := Invoer/label[nr_orgentity]     , IsHidden = "True";
		attribute<string>    name            := Invoer/code[nr_orgentity]      , IsHidden = "True";
		attribute<string>    doelgroep       := LowerCase(Invoer/doelgroep[nr_orgentity]) , IsHidden = "True";
		attribute<string>    grondslag       := LowerCase(Invoer/grondslag[nr_orgentity]), IsHidden = "True";
		attribute<string>    voorwaarde1     := LowerCase(Invoer/voorwaarde1[nr_orgentity]), IsHidden = "True";
		attribute<string>    voorwaarde2     := LowerCase(Invoer/voorwaarde2[nr_orgentity]), IsHidden = "True";
		attribute<yr_uint16> Startjaar       := Invoer/Startjaar[nr_orgentity] ;
		attribute<yr_uint16> Eindjaar        := Invoer/Eindjaar [nr_orgentity] ;
		attribute<ratio>     SubsidieAandeel := Invoer/Aandeel[nr_orgentity]   ;
		attribute<eur_m2>    SubsidiePerOpp  := Invoer/Per_opp[nr_orgentity]   ;
		attribute<eur_asl>   SubsidieBedrag  := Invoer/Bedrag[nr_orgentity]    ;
		attribute<string>    Budget          := Invoer/Budget[nr_orgentity]    ;
		attribute<ratio>     Naleving        := Invoer/RNaleving[nr_orgentity];

		//====== Bepalen welke doelgroep er wordt aangesproken : eigendomstypes
		container Doel_false  := for_each_nedv(Classifications/Eigendom/Label,'const(false,Subsidie)',Subsidie,bool), IsHidden = "True";
		container ParseDoelgroep := Doel_false
		{
			attribute<bool> Koop     (Subsidie) := strcount(doelgroep, 'koopw') + strcount(doelgroep, 'alle') > 0;
			attribute<bool> Parthuur (Subsidie) := strcount(doelgroep, 'parti') + strcount(doelgroep, 'alle') > 0;
			attribute<bool> Wooncorp (Subsidie) := strcount(doelgroep, 'socia') + strcount(doelgroep, 'alle') > 0;
		}

		//====== Bepalen welke technische maatregelen onder het subsidieinstrument vallen
		container ParseMaatregel
		{
			container Inst_false  := for_each_nedv(Classifications/Installatie/Label,'const(false,Subsidie)',Subsidie,bool), IsHidden = "True";
			container Installatie := Inst_false
			{	
				attribute<bool> All        (Subsidie) := strcount(grondslag, 'installaties') > 0;
				attribute<bool> eWP_lw     (Subsidie) := All || (strcount(grondslag, 'warmtepomp') > 0 && strcount(grondslag, 'hybride warmtepomp') == 0);
				attribute<bool> eWP_bw     (Subsidie) := All || (strcount(grondslag, 'warmtepomp') > 0 && strcount(grondslag, 'hybride warmtepomp') == 0);
				attribute<bool> eWP_ll     (Subsidie) := All || (strcount(grondslag, 'warmtepomp') > 0 && strcount(grondslag, 'hybride warmtepomp') == 0);

				attribute<bool> Pellet     (Subsidie) := All || (strcount(grondslag, 'pelletkach') > 0);
				attribute<bool> Bioketel   (Subsidie) := All || (strcount(grondslag, 'biomassake') > 0);

				attribute<bool> ZonB       (Subsidie) := All || (strcount(grondslag, 'zonneboile') > 0);
				attribute<bool> ZonPV      (Subsidie) := All || (strcount(grondslag, 'zonnepanel') > 0);

				attribute<bool> hHR        (Subsidie) := All || (strcount(grondslag, '(hybride)w') + strcount(grondslag, 'hybride warmtepomp') > 0);
				attribute<bool> BasisHWP_w (Subsidie) := All || (strcount(grondslag, '(hybride)w') + strcount(grondslag, 'hybride warmtepomp') > 0);

				attribute<bool> LTAS       (Subsidie) := All || (strcount(grondslag, 'ltas') > 0);
			}

			container Isolatie := for_each_nedv(/Classifications/BouwdeelIsolatie/name, 'strcount(grondslag, '+quote(lowercase(Classifications/BouwdeelIsolatie/name))+') > 0',Subsidie,bool)
			{
				attribute<bool> Alle       (Subsidie) := strcount(grondslag, 'isolatie') > 0;
			}

			container Infra
			{
				attribute<bool> WnetAansl     (Subsidie) := strcount(grondslag, 'warmteneta') > 0;
				attribute<bool> Gasafsluiting (Subsidie) := strcount(grondslag, 'luiten gas') > 0;
			}
		}
		//====== Bepalen welke voorwaarden er aan het instrument zijn gesteld
		container ParseVoorwaarde
		{
			attribute<bool>    HeeftMaxBedrag_asl  (Subsidie) := strcount(voorwaarde1, 'maximum bedrag') + strcount(voorwaarde2, 'maximum bedrag') > 0;
			attribute<eur_asl> MaxBedrag_asl       (Subsidie) := not(HeeftMaxBedrag_asl) ? 0.0[eur_asl] :
					makedefined(
						trim(replace(voorwaarde1, 'maximum bedrag: ', ''))[eur_asl],
						trim(replace(voorwaarde2, 'maximum bedrag: ', ''))[eur_asl]
					);

			attribute<bool>    HeeftMinMaatregelen (Subsidie) := strcount(voorwaarde1, 'minimaal aantal maatregelen') + strcount(voorwaarde2, 'minimaal aantal maatregelen') > 0;
			attribute<float64> MinMaatregelen      (Subsidie) := not(HeeftMinMaatregelen) ? 0.0[float64] : 
					makedefined(
						trim(replace(voorwaarde1, 'minimaal aantal maatregelen: ', ''))[float64],
						trim(replace(voorwaarde2, 'minimaal aantal maatregelen: ', ''))[float64]
					);

			attribute<bool>    HeeftVastLabelstap  (Subsidie) := strcount(voorwaarde1, 'aantal labelstappen') + strcount(voorwaarde2, 'aantal labelstappen') > 0;
			attribute<float64> nrLabelStappen      (Subsidie) := not(HeeftVastLabelstap) ? 0.0[float64] :
					makedefined(
						trim(replace(voorwaarde1, 'aantal labelstappen: ', ''))[float64],
						trim(replace(voorwaarde2, 'aantal labelstappen: ', ''))[float64]
					);  
		}

		unit<uint32> SubsidieBudget := subset(strcount(Subsidie/budget, 'hoort bij') == 0)
		{
			attribute<string> Name         := Subsidie/name[nr_orgentity];
			attribute<string> label        := name;
			attribute<string> BudgetString := Subsidie/budget[nr_orgentity];
		}
		attribute<SubsidieBudget> SubsidieBudget_rel (Subsidie) := makedefined(rlookup(trim(substr(Budget, 9)), SubsidieBudget/name), rlookup(name, SubsidieBudget/name));
	}

	template PerJaar
	{
		//case parameters
		parameter<yr_uint16> Zichtjaar;
		//end case parameters

		unit<uint32> Activatie := subset(/Invoer/Beleid/Activatie/StartJaar <= Zichtjaar && /Invoer/Beleid/Activatie/EindJaar >= Zichtjaar)
		{
			attribute<string>  label           := /Invoer/Beleid/Activatie/label[nr_orgentity]     , IsHidden = "True";
			attribute<string>  name            := /Invoer/Beleid/Activatie/name[nr_orgentity] ;
			attribute<ratio>   Naleving        := /Invoer/Beleid/Activatie/Naleving[nr_orgentity];

			container Doelgroep := for_each_nedv(Classifications/Eigendom/label,'/Invoer/Beleid/Activatie/ParseDoelgroep/'+Classifications/Eigendom/label+'[nr_orgentity]',Activatie,bool);

			container Grondslag := for_each_nedv(
				  Classifications/Bouwdeel/name
				, '/Invoer/Beleid/Activatie/ParseGrondslag/'+Classifications/Bouwdeel/name+'[nr_orgentity]'
				, Activatie
				, bool
			)
			{
				attribute<bool> RV (Activatie) := /Invoer/Beleid/Activatie/ParseGrondslag/RV[nr_orgentity];
				attribute<bool> TW (Activatie) := /Invoer/Beleid/Activatie/ParseGrondslag/TW[nr_orgentity];
				attribute<bool> KD (Activatie) := /Invoer/Beleid/Activatie/ParseGrondslag/KD[nr_orgentity];
				attribute<bool> VT (Activatie) := /Invoer/Beleid/Activatie/ParseGrondslag/VT[nr_orgentity];
			}

			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
		}

		unit<uint32> Subsidie := subset(/Invoer/Beleid/subsidie/StartJaar <= Zichtjaar && /Invoer/Beleid/subsidie/EindJaar >= Zichtjaar)
		{
			attribute<string>  label           := /Invoer/Beleid/subsidie/label[nr_orgentity]     , IsHidden = "True";
			attribute<string>  name            := /Invoer/Beleid/subsidie/name[nr_orgentity] ;
			attribute<ratio>   SubsidieAandeel := /Invoer/Beleid/subsidie/SubsidieAandeel[nr_orgentity]   ;
			attribute<eur_asl> SubsidieBedrag  := /Invoer/Beleid/subsidie/SubsidieBedrag[nr_orgentity]    ;
			attribute<eur_m2>  SubsidiePerOpp  := /Invoer/Beleid/subsidie/SubsidiePerOpp[nr_orgentity]   ;
			attribute<ratio>   Naleving        := /Invoer/Beleid/subsidie/Naleving[nr_orgentity];

			attribute<SubsidieBudget> SubsidieBudget_rel  := /Invoer/Beleid/subsidie/SubsidieBudget_rel[nr_orgentity];

			container Doelgroep := for_each_nedv(Classifications/Eigendom/label,'/Invoer/Beleid/subsidie/ParseDoelgroep/'+Classifications/Eigendom/label+'[nr_orgentity]',Subsidie,bool);

			container Maatregel
			{
				container Installatie := for_each_nedv(Classifications/Installatie/Label,'/Invoer/Beleid/subsidie/ParseMaatregel/Installatie/'+Classifications/Installatie/label+'[nr_orgentity]'  ,Subsidie,bool)
				{
					attribute<bool> ZonB       (Subsidie) := /Invoer/Beleid/subsidie/ParseMaatregel/Installatie/ZonB[nr_orgentity];
					attribute<bool> ZonPV      (Subsidie) := /Invoer/Beleid/subsidie/ParseMaatregel/Installatie/ZonPV[nr_orgentity];
					attribute<bool> LTAS       (Subsidie) := /Invoer/Beleid/subsidie/ParseMaatregel/Installatie/LTAS[nr_orgentity];
				}
				container Isolatie    := for_each_nedv(Classifications/BouwdeelIsolatie/name,'/Invoer/Beleid/subsidie/ParseMaatregel/Isolatie/'+Classifications/BouwdeelIsolatie/name+'[nr_orgentity]',Subsidie,bool)
				{
					attribute<bool> Alle       (Subsidie) := /Invoer/Beleid/subsidie/ParseMaatregel/Isolatie/Alle[nr_orgentity];
				}

				container Infra
				{
					attribute<bool> WnetAansl     (Subsidie) := /Invoer/Beleid/subsidie/ParseMaatregel/infra/WnetAansl[nr_orgentity];
					attribute<bool> Gasafsluiting (Subsidie) := /Invoer/Beleid/subsidie/ParseMaatregel/infra/Gasafsluiting[nr_orgentity];
				}
			}
			container Voorwaarde
			{
				attribute<eur_asl> MaxBedrag_asl  (Subsidie) := /Invoer/Beleid/subsidie/ParseVoorwaarde/MaxBedrag_asl[nr_orgentity];
				attribute<float64> MinMaatregelen (Subsidie) := /Invoer/Beleid/subsidie/ParseVoorwaarde/MinMaatregelen[nr_orgentity];
				attribute<float64> nrLabelStappen (Subsidie) := /Invoer/Beleid/subsidie/ParseVoorwaarde/nrLabelStappen[nr_orgentity];
			}
			unit<uint32> SubsidieBudget := /Invoer/Beleid/subsidie/subsidiebudget
			{
				attribute<string> BudgetString    := /Invoer/Beleid/subsidie/subsidiebudget/BudgetString;
				attribute<eur>    ZichtjaarBudget := float64(substr(substr(BudgetString, strpos(BudgetString, string(Zichtjaar_jaar))), 5, strpos(substr(BudgetString, strpos(BudgetString, string(Zichtjaar_jaar))), 'mln') - 5u)) * 1000000[Eur];
			}
			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
		}

		unit<uint32> NieuwbouwNorm := subset(/Invoer/Beleid/Normering/NieuwbouwNorm/StartJaar <= Zichtjaar && /Invoer/Beleid/Normering/NieuwbouwNorm/EindJaar >= Zichtjaar)
		{
			attribute<string>  label           := /Invoer/Beleid/Normering/NieuwbouwNorm/label[nr_orgentity]     , IsHidden = "True";
			attribute<string>  name            := /Invoer/Beleid/Normering/NieuwbouwNorm/name[nr_orgentity] ;
			attribute<ratio>   Naleving        := /Invoer/Beleid/Normering/NieuwbouwNorm/Naleving[nr_orgentity] ;

			container DiverseNormen := for_each_nedv(
				  Classifications/Bouwdeel/name
				, '/Invoer/Beleid/Normering/NieuwbouwNorm/BouwdeelNorm/'+Classifications/Bouwdeel/name+'[nr_orgentity]'
				, NieuwbouwNorm
				, Classifications/IsolatieNiveau
				);
			container BouwdeelNorm := for_each_nedv(
				  Classifications/Bouwdeel/name
				, 'sum(uint32(IsDefined(DiverseNormen/'+Classifications/Bouwdeel/name+'))) > 0u ? max(DiverseNormen/'+Classifications/Bouwdeel/name+') : (0/0)[Classifications/IsolatieNiveau]'
				, void
				, Classifications/IsolatieNiveau
				);
		}
		unit<uint32> BestaandebouwNorm := subset(/Invoer/Beleid/Normering/BestaandebouwNorm/StartJaar <= Zichtjaar && /Invoer/Beleid/Normering/BestaandebouwNorm/EindJaar >= Zichtjaar)
		{
			attribute<string>  label           := /Invoer/Beleid/Normering/BestaandebouwNorm/label[nr_orgentity]     , IsHidden = "True";
			attribute<string>  name            := /Invoer/Beleid/Normering/BestaandebouwNorm/name[nr_orgentity] ;
			attribute<ratio>   Naleving        := /Invoer/Beleid/Normering/BestaandebouwNorm/Naleving[nr_orgentity] ;

			container Voorwaarde
			{
				attribute<ratio> MinSchilAandeel  (BestaandebouwNorm) := /Invoer/Beleid/Normering/BestaandeBouwNorm/ParseVoorwaarde/MinSchilAandeel[nr_orgentity];
			}

			container BouwdeelNorm := for_each_nedv(
				  Classifications/Bouwdeel/name
				, '/Invoer/Beleid/Normering/BestaandebouwNorm/BouwdeelNorm/'+Classifications/Bouwdeel/name+'[nr_orgentity] '
				, BestaandebouwNorm
				, Classifications/IsolatieNiveau
				);
			container LabelNorm
			{
				attribute<Classifications/Schillabel> Min_label (BestaandeBouwNorm) := /Invoer/Beleid/Normering/BestaandeBouwNorm/LabelNorm/Min_label[nr_orgentity];
			}
			container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
		}
	}
}