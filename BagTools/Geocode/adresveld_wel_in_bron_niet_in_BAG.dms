////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
//                                                                                    //
//                     Configuratie voor BAG Geocodeer Module                         //
//                                                                                    //
//          Vrije Universiteit Amsterdam | SPINlab / Object Vision 2018               //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// In dit specifieke script wordt gekeken of adresvelden die in de bron voorkomen     //
// los van elkaar wel voorkomen in de BAG                                             //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

container adresveld_wel_in_bron_niet_in_BAG
{
	unit<uint32> adresveld := range(uint32,0,strcount(niveau/volgorde[0],',') + 1)
	{
		attribute<string> label := readarray(niveau/volgorde[0],.,string,0);
	}
	container per_adresveld :=
		for_each_ne(
			adresveld/label
			,'veldtemplate(' + quote(adresveld/label) + ')'
		);
	
	template veldtemplate
	{
		// begin case parameters
		parameter<string> veld;
		// end case parameters

		container impl
		{
			unit<uint32> BAG_voorkomend_uniek := ='Unique(BAG/adres/' + veld + ')', FreeData = "False"
			{
				attribute<string> base            := from_utf(values);
				attribute<bool>   base_neq_values := base <> values;
			}

			unit<uint32> utf8_diff := select_with_org_rel(BAG_voorkomend_uniek/base_neq_values)
			{
				attribute<string> values := BAG_voorkomend_uniek/values[org_rel];
				attribute<string> base   := BAG_voorkomend_uniek/base[org_rel];
			}

			attribute<BAG/adres> BAG_adres_rel (TeGeocoderen/bron/TableChopper/domein) := ='rlookup(TeGeocoderen/bron/' + veld + '/resultaat, BAG_voorkomend_uniek/values)';

			unit<uint32> nietvoorkomend := select_with_org_rel(isNull(BAG_adres_rel))
			{
				attribute<string> na_bewerking   := ='TeGeocoderen/bron/' + veld + '/resultaat[org_rel]';
				attribute<string> voor_bewerking := ='TeGeocoderen/bron/' + veld + '/txt[org_rel]';
			}
			unit<uint32> nietvoorkomend_uniek := unique(nietvoorkomend/na_bewerking);
		}
		attribute<string> na_bewerking   (impl/nietvoorkomend_uniek) := impl/nietvoorkomend_uniek/values;
		attribute<string> voor_bewerking (impl/nietvoorkomend_uniek) := rjoin(impl/nietvoorkomend_uniek/values, impl/nietvoorkomend/na_bewerking, impl/nietvoorkomend/voor_bewerking);
	}
}